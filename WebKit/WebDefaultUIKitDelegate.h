/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

#import "WebKit-Structs.h"
#import </libobjc.A.h>


__attribute__((visibility("hidden")))
@interface WebDefaultUIKitDelegate : NSObject {
}
+(id)sharedUIKitDelegate;
-(void)webView:(id)view addMessageToConsole:(id)console withSource:(id)source;
-(void)webViewDidDrawTiles:(id)webView;
-(void)webView:(id)view willAddPlugInView:(id)view2;
-(BOOL)isUnperturbedDictationResultMarker:(id)marker;
-(int)getPasteboardChangeCount;
-(BOOL)performsTwoStepPaste:(id)paste;
-(BOOL)hasRichlyEditableSelection;
-(id)supportedPasteboardTypesForCurrentSelection;
-(int)getPasteboardItemsCount;
-(id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;
-(void)writeDataToPasteboard:(id)pasteboard;
-(id)checkSpellingOfString:(id)string;
-(void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;
-(void)webViewDidEndOverflowScroll:(id)webView;
-(void)webViewDidStartOverflowScroll:(id)webView;
-(void)webViewDidLayout:(id)webView;
-(void)revealedSelectionByScrollingWebFrame:(id)frame;
-(void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;
-(void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;
-(void)webViewDidCommitCompositingLayerChanges:(id)webView;
-(void)_webthread_webView:(id)view attachRootLayer:(id)layer;
-(void)deleteFromInput;
-(void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;
-(void)webView:(id)view didReceiveMessage:(id)message;
-(void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;
-(void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;
-(id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;
-(void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;
-(void)webViewDidRestoreFromPageCache:(id)webView;
-(void)webView:(id)view elementDidBlurNode:(id)element;
-(void)webView:(id)view elementDidFocusNode:(id)element;
-(void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;
-(void)webView:(id)view didFirstLayoutInFrame:(id)frame;
-(void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFinishDocumentLoadForFrame:(id)frame;
-(void)webView:(id)view willCloseFrame:(id)frame;
-(BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;
-(void)webViewDidPreventDefaultForEvent:(id)webView;
-(void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;
-(void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;
-(void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;
-(void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;
-(void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
-(CGRect)documentVisibleRectForWebView:(id)webView;
-(CGPoint)contentsPointForWebView:(id)webView;
@end

