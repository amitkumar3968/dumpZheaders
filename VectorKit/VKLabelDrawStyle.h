/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import "_VKStyle.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray;

__attribute__((visibility("hidden")))
@interface VKLabelDrawStyle : XXUnknownSuperclass <_VKStyle> {
@private
	VKProfileSparseRamp<signed char> visibility;
	VKProfileSparseRamp<signed char> shieldVisibility;
	VKProfileSparseRamp<float> heightSmall;
	VKProfileSparseRamp<float> heightMedium;
	VKProfileSparseRamp<float> heightLarge;
	VKProfileSparseRamp<signed char> hasHeightCurveSmall;
	VKProfileSparseRamp<signed char> hasHeightCurveMedium;
	VKProfileSparseRamp<signed char> hasHeightCurveLarge;
	VKProfileSparseRamp<float> fontExpansionSmall;
	VKProfileSparseRamp<float> fontExpansionMedium;
	VKProfileSparseRamp<float> fontExpansionLarge;
	VKProfileSparseRamp<_VGLColor> color;
	VKProfileSparseRamp<_VGLColor> haloColor;
	VKProfileSparseRamp<float> haloSizeSmall;
	VKProfileSparseRamp<float> haloSizeMedium;
	VKProfileSparseRamp<float> haloSizeLarge;
	VKProfileSparseRamp<unsigned int> lineWrapping;
	VKProfileSparseRamp<signed char> upcase;
	VKProfileSparseRamp<signed char> raisedInitial;
	VKProfileSparseRamp<signed char> smallCaps;
	VKProfileSparseRamp<int> zIndices;
	VKProfileSparseRamp<float> roadRank;
	VKProfileSparseRamp<float> shieldRank;
	VKProfileSparseRamp<signed char> arrowVisible;
	VKProfileSparseRamp<float> arrowHeightSmall;
	VKProfileSparseRamp<float> arrowHeightMedium;
	VKProfileSparseRamp<float> arrowHeightLarge;
	VKProfileSparseRamp<float> arrowSpacing;
	VKProfileSparseRamp<VKLabelTextVisibility> textVisibility;
	VKProfileSparseRamp<signed char> onlyShowIfTappable;
	VKProfileSparseRamp<signed char> yieldsToOnscreenLabels;
	VKProfileSparseRamp<signed char> showShieldTextAsLabel;
	unsigned char dedupeRank;
	VKProfileSparseRamp<float> spacingSmall;
	VKProfileSparseRamp<float> spacingMedium;
	VKProfileSparseRamp<float> spacingLarge;
	VKProfileSparseRamp<int> iconStyle;
	VKProfileSparseRamp<_VGLColor> iconBadgeColor;
	VKProfileSparseRamp<_VGLColor> iconGradientTopColor;
	VKProfileSparseRamp<_VGLColor> iconGradientBottomColor;
	VKProfileSparseRamp<_VGLColor> iconGlyphColor;
	VKProfileSparseRamp<_VGLColor> iconHaloColor;
	VKProfileSparseRamp<VKGenericShieldStyle> genericShieldStyle;
	VKProfileSparseRamp<_VGLColor> genericShieldBackgroundColor;
	VKProfileSparseRamp<_VGLColor> genericShieldBorderColor;
	VKProfileSparseRamp<_VGLColor> genericShieldTextColor;
	VKProfileSparseRamp<float> genericShieldHaloSize;
	VKProfileSparseRamp<_VGLColor> genericShieldHaloColor;
	VKProfileSparseRamp<CGSize> genericShieldDropShadowOffset;
	VKProfileSparseRamp<float> genericShieldDropShadowSize;
	VKProfileSparseRamp<_VGLColor> genericShieldDropShadowColor;
	VKProfileSparseRamp<float> roadWidth;
	NSMutableArray* fontFamily;
	NSMutableArray* icon;
	float tiltLimit;
}
@property(readonly, assign) unsigned char dedupeRank;	// converted property
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)areShieldsEverVisible;
-(BOOL)visibleAtMaxZoom:(float)maxZoom;
-(BOOL)showShieldTextAsLabelAtZoom:(float)zoom;
-(BOOL)arrowVisibleAtZoom:(float)zoom;
-(double)minimumRoadArrowSpacingForZoom:(int)zoom;
-(double)minimumRoadLabelSpacingForZoom:(int)zoom scaleFactor:(int)factor;
-(double)mapWidthInEmsForZoom:(int)zoom scaleFactor:(int)factor;
-(void)getLabelTextGlyphStyle:(XXStruct_a6naZD*)style atZoom:(int)zoom scaleFactor:(int)factor;
-(void)getLabelStyle:(XXStruct_USkF9C*)style atZoom:(float)zoom tilt:(float)tilt contentScale:(float)scale scaleFactor:(int)factor;
-(void)getRoadSignStyle:(XXStruct_USkF9C*)style atZoom:(float)zoom tilt:(float)tilt contentScale:(float)scale scaleFactor:(int)factor;
-(void)getNavShieldStyle:(XXStruct_USkF9C*)style atZoom:(float)zoom tilt:(float)tilt contentScale:(float)scale scaleFactor:(int)factor;
-(void)getShieldStyle:(XXStruct_USkF9C*)style atZoom:(float)zoom tilt:(float)tilt contentScale:(float)scale scaleFactor:(int)factor;
// converted property getter: -(unsigned char)dedupeRank;
-(void)takeFromZoomInvariantProperties:(id)zoomInvariantProperties;
-(void)takeFromStyleProperties:(id)styleProperties atZoom:(unsigned)zoom;
-(void)dealloc;
-(id)init;
@end

