/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import "VKAnnotationModelDelegate.h"
#import "VKOverlayContainerDelegate.h"
#import "VKCalloutControllerDelegate.h"
#import "VKLabelModelDelegate.h"
#import "VKTrafficIncidentsMapModelDelegate.h"
#import "VKTileProviderClient.h"
#import "VKModelObject.h"

@class VKStylesheet, VKGridModel, VKRealisticMapModel, VKLabelModel, UIView, VKGroundCoverMapModel, VKOverlayContainerModel, VKMapRasterizer, VKBuildingFootprintMapModel, VKPolylineOverlayPainter, VKPolygonMapModel, NSMutableArray, VKOverlayTileSource, VKRoadMapModel, VKTrafficIncidentsMapModel, VKRoadTrafficMapModel, VKSkyModel, VKTrafficTileSource, NSMapTable, VKCalloutController, NSSet, VKLabelMarker, VKDebugModel, VKAnimation, VKMercatorTerrainHeightCache, VKRasterMapModel, VKRasterTrafficMapModel, VKLabelFeaturePool, VKTileProvider, VKLoupeMapTileModel, VKAnnotationModel, NSArray, VKAnnotationMarker, VKTrafficIncident;
@protocol VKMapModelDelegate, VKInteractiveMap, VKRoutePreloadSession, VKRouteMatchedAnnotationPresentation;

__attribute__((visibility("hidden")))
@interface VKMapModel : VKModelObject <VKAnnotationModelDelegate, VKOverlayContainerDelegate, VKCalloutControllerDelegate, VKLabelModelDelegate, VKTrafficIncidentsMapModelDelegate, VKTileProviderClient> {
@private
	int _tileSize;
	VKTileProvider* _tileProviders[3];
	int _mapMode;
	int _desiredMapMode;
	BOOL _transitioningToNav;
	BOOL _activeMapLayers[3][26];
	NSMapTable* _layerToSourceMaps[3];
	VKTrafficTileSource* _trafficSource;
	VKOverlayTileSource* _overlayTileSource;
	VKOverlayTileSource* _realisticOverlayTileSource;
	VKGridModel* _gridModel;
	VKSkyModel* _skyModel;
	VKLabelModel* _labelModel;
	VKRasterMapModel* _rasterModel;
	VKRasterMapModel* _standardRasterModel;
	VKGroundCoverMapModel* _groundCoverModel;
	VKRasterTrafficMapModel* _rasterTrafficModel;
	VKPolygonMapModel* _polygonModel;
	VKRoadMapModel* _roadModel;
	VKRoadTrafficMapModel* _roadTrafficModel;
	VKRealisticMapModel* _realisticModel;
	VKBuildingFootprintMapModel* _buildingFootprintModel;
	VKTrafficIncidentsMapModel* _trafficIncidentsModel;
	VKAnnotationModel* _annotationModel;
	VKOverlayContainerModel* _overlayContainerModel;
	VKLoupeMapTileModel* _loupeModel;
	VKDebugModel* _debugModel;
	NSMapTable* _tileSources;
	NSMutableArray* _drawOrder;
	NSMutableArray* _mapLayerSubmodels;
	NSMutableArray* _mapTileSubmodels;
	VKCalloutController* _calloutController;
	VKStylesheet* _activeStylesheet;
	VKStylesheet* _defaultStylesheet;
	VKStylesheet* _hybridStylesheet;
	double _zoomLevel;
	int _mapType;
	int _loupeType;
	id<VKMapModelDelegate> _delegate;
	id<VKRoutePreloadSession> _routePreloadSession;
	VKLabelFeaturePool* _featurePool;
	BOOL _dynamicMapModesEnabled;
	BOOL _debugDynamicMapModesEnabled;
	BOOL _buildingsAreVisible;
	BOOL _fullyDrawn;
	BOOL _shouldNotifyFullyDrawn;
	BOOL _trafficEnabled;
	BOOL _shouldRasterize;
	int _loadingCount;
	BOOL _disableRoads;
	BOOL _disableLabels;
	BOOL _disablePolygons;
	BOOL _disableBuildingFootprints;
	BOOL _disableRasters;
	BOOL _enableBlackRoadLines;
	VKMapRasterizer* _rasterizer;
	VKRasterMapModel* _rasterViewer;
	int _annotationMarkerStyle;
	BOOL _limitingNavCameraHeight;
	VKAnimation* _modeTransitionAnimation;
	BOOL _disableRoadClass[9];
	BOOL _shouldSplitRouteLine;
}
@property(readonly, assign, nonatomic) NSArray* visibleTileSets;
@property(assign, nonatomic) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;
@property(assign, nonatomic) BOOL shouldSplitRouteLine;	// @synthesize=_shouldSplitRouteLine
@property(retain, nonatomic) id<VKRoutePreloadSession> routePreloadSession;
@property(assign, nonatomic) BOOL disableRealisticLand;
@property(assign, nonatomic) BOOL disableRealisticRoads;
@property(assign, nonatomic) BOOL enableBlackRoadLines;	// @synthesize=_enableBlackRoadLines
@property(assign, nonatomic) BOOL disableRasters;	// @synthesize=_disableRasters
@property(assign, nonatomic) BOOL disableBuildingFootprints;	// @synthesize=_disableBuildingFootprints
@property(assign, nonatomic) BOOL disablePolygons;	// @synthesize=_disablePolygons
@property(assign, nonatomic) BOOL disableLabels;	// @synthesize=_disableLabels
@property(assign, nonatomic) BOOL disableRoads;	// @synthesize=_disableRoads
@property(retain, nonatomic) VKPolylineOverlayPainter* focusedLabelsPolylinePainter;
@property(readonly, assign, nonatomic) NSSet* persistentOverlays;
@property(readonly, assign, nonatomic) NSArray* overlays;
@property(assign, nonatomic) UIView<VKInteractiveMap>* calloutContainerView;
@property(readonly, assign, nonatomic) VKAnnotationMarker* selectedAnnotationMarker;
@property(assign, nonatomic) Class calloutViewClass;
@property(readonly, assign, nonatomic) VKTrafficIncident* selectedTrafficIncident;
@property(assign, nonatomic) BOOL labelMarkerSelectionEnabled;
@property(readonly, assign, nonatomic) VKLabelMarker* selectedLabelMarker;
@property(readonly, assign, nonatomic) VKTileProvider* tileProvider;
@property(readonly, assign, nonatomic) BOOL isFullyDrawn;
@property(readonly, assign, nonatomic) BOOL buildingsAreVisible;	// @synthesize=_buildingsAreVisible
@property(readonly, assign, nonatomic) VKBuildingFootprintMapModel* buildingFootprintModel;	// @synthesize=_buildingFootprintModel
@property(assign, nonatomic) id<VKMapModelDelegate> delegate;	// @synthesize=_delegate
@property(assign, nonatomic) int loupeType;
@property(assign, nonatomic) int labelScaleFactor;
@property(assign, nonatomic) BOOL localizeLabels;
@property(assign, nonatomic, getter=isTrafficEnabled) BOOL trafficEnabled;	// @synthesize=_trafficEnabled
@property(readonly, assign, nonatomic) VKMercatorTerrainHeightCache* terrainHeightCache;
@property(assign, nonatomic) BOOL limitingNavCameraHeight;	// @synthesize=_limitingNavCameraHeight
@property(readonly, assign, nonatomic) int currentMapMode;	// @synthesize=_mapMode
@property(assign, nonatomic) BOOL dynamicMapModesEnabled;	// @synthesize=_dynamicMapModesEnabled
@property(assign, nonatomic) int mapType;	// @synthesize=_mapType
@property(retain, nonatomic) VKStylesheet* stylesheet;	// @synthesize=_activeStylesheet
@property(retain) id annotationMarkerDeselectionCallback;	// converted property
@property(readonly, assign) int tileSize;	// converted property
+(unsigned long)numberOfRoadClasses;
+(const char*)nameForRoadClass:(int)roadClass;
// declared property setter: -(void)setShouldSplitRouteLine:(BOOL)splitRouteLine;
// declared property getter: -(BOOL)shouldSplitRouteLine;
// declared property getter: -(BOOL)limitingNavCameraHeight;
// declared property getter: -(BOOL)isTrafficEnabled;
// declared property getter: -(BOOL)buildingsAreVisible;
// declared property setter: -(void)setDynamicMapModesEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)dynamicMapModesEnabled;
// declared property getter: -(id)stylesheet;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
// declared property getter: -(id)buildingFootprintModel;
// declared property getter: -(int)currentMapMode;
// declared property getter: -(int)mapType;
// declared property setter: -(void)setEnableBlackRoadLines:(BOOL)lines;
// declared property getter: -(BOOL)enableBlackRoadLines;
// declared property setter: -(void)setDisableRasters:(BOOL)rasters;
// declared property getter: -(BOOL)disableRasters;
// declared property setter: -(void)setDisableBuildingFootprints:(BOOL)footprints;
// declared property getter: -(BOOL)disableBuildingFootprints;
// declared property setter: -(void)setDisablePolygons:(BOOL)polygons;
// declared property getter: -(BOOL)disablePolygons;
// declared property setter: -(void)setDisableLabels:(BOOL)labels;
// declared property getter: -(BOOL)disableLabels;
// declared property setter: -(void)setDisableRoads:(BOOL)roads;
// declared property getter: -(BOOL)disableRoads;
-(void)debugHighlightLabelAtScreenPoint:(CGPoint)screenPoint viewTransform:(id)transform;
// declared property getter: -(id)routePreloadSession;
// declared property setter: -(void)setRoutePreloadSession:(id)session;
// declared property getter: -(id)routeLineSplitAnnotation;
// declared property setter: -(void)setRouteLineSplitAnnotation:(id)annotation;
// declared property setter: -(void)setFocusedLabelsPolylinePainter:(id)painter;
// declared property getter: -(id)focusedLabelsPolylinePainter;
-(void)setCurrentLocationText:(id)text;
-(void)setRouteUserOffset:(RouteCalibration)offset;
-(id)labelModel:(id)model mapTileForTile:(id)tile layer:(unsigned)layer;
-(void)_updateOverlayTileSource;
-(id)overlayContainer:(id)container roadTileForTile:(id)tile;
-(BOOL)overlayContainerIsInRealisticMode:(id)realisticMode;
-(id)overlayContainer:(id)container painterForOverlay:(id)overlay;
-(void)removePersistentOverlay:(id)overlay;
-(void)addPersistentOverlay:(id)overlay;
// declared property getter: -(id)persistentOverlays;
// declared property getter: -(id)overlays;
-(void)removeOverlay:(id)overlay;
-(void)addOverlay:(id)overlay;
-(void)annotationModel:(id)model didAnimateInAnnotationMarkers:(id)annotationMarkers;
-(void)annotationModel:(id)model willAnimateInAnnotationMarkers:(id)annotationMarkers;
-(void)calloutController:(id)controller didUpdateCalloutView:(id)view forSource:(id)source animated:(BOOL)animated;
-(void)calloutController:(id)controller willShowCalloutView:(id)view forSource:(id)source;
-(void)calloutController:(id)controller didUpdateCalloutPopoverController:(id)controller2 forSource:(id)source;
-(void)calloutController:(id)controller willShowCalloutPopoverController:(id)controller2 forSource:(id)source;
-(void)calloutController:(id)controller needsPanByPixelOffset:(CGPoint)offset relativeToScreenPoint:(CGPoint)screenPoint animated:(BOOL)animated duration:(double)duration completionHandler:(id)handler;
-(void)annotationModel:(id)model annotationMarker:(id)marker calloutAccessoryControlTapped:(id)tapped;
// declared property getter: -(id)selectedAnnotationMarker;
-(void)dismissExpandedCallout;
// declared property getter: -(Class)calloutViewClass;
// declared property setter: -(void)setCalloutViewClass:(Class)aClass;
-(id)calloutPopoverController;
// declared property setter: -(void)setCalloutContainerView:(id)view;
// declared property getter: -(id)calloutContainerView;
-(void)incidentsModel:(id)model didDeselectTrafficIncident:(id)incident;
-(void)incidentsModel:(id)model trafficIncident:(id)incident calloutAccessoryControlTapped:(id)tapped;
-(void)incidentsModel:(id)model willSelectTrafficIncident:(id)incident;
// declared property getter: -(id)selectedTrafficIncident;
-(void)deselectTrafficIncidentAnimated:(BOOL)animated;
-(void)selectTrafficIncident:(id)incident animated:(BOOL)animated avoid:(CGRect)avoid;
-(id)trafficIncidentForSelectionAtPoint:(XXStruct_taVrlB)point canvasSize:(CGSize)size;
// declared property setter: -(void)setLabelMarkerSelectionEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)labelMarkerSelectionEnabled;
// declared property getter: -(id)selectedLabelMarker;
-(void)labelModel:(id)model didDeselectLabelMarker:(id)marker;
-(void)labelModel:(id)model labelMarker:(id)marker calloutAccessoryControlTapped:(id)tapped;
-(void)labelModel:(id)model willSelectLabelMarker:(id)marker;
-(void)deselectLabelMarkerAnimated:(BOOL)animated;
-(void)selectLabelMarker:(id)marker animated:(BOOL)animated avoid:(CGRect)avoid;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)point pointLabelsOnly:(BOOL)only;
-(id)annotationMarkerForSelectionAtPoint:(XXStruct_taVrlB)point avoidCurrent:(BOOL)current canvasSize:(CGSize)size;
-(id)annotationCoordinateTest;
-(id)annotationRectTest;
// converted property getter: -(id)annotationMarkerDeselectionCallback;
// converted property setter: -(void)setAnnotationMarkerDeselectionCallback:(id)callback;
-(void)deselectAnnotationMarker:(id)marker animated:(BOOL)animated;
-(void)selectAnnotationMarker:(id)marker animated:(BOOL)animated avoid:(CGRect)avoid;
-(void)removeAnnotationMarker:(id)marker;
-(void)addAnnotationMarker:(id)marker allowAnimation:(BOOL)animation;
-(id)annotationMarkers;
-(void)didAddSubmodel:(id)submodel;
-(void)addSubmodel:(id)submodel;
// declared property getter: -(BOOL)isFullyDrawn;
-(void)didStopLoadingTilesWithError:(id)error;
-(void)willStartLoadingTiles;
-(void)drawScene:(id)scene withContext:(id)context;
-(void)recursiveDrawScene:(id)scene withContext:(id)context;
-(void)layoutScene:(id)scene withContext:(id)context;
-(void)layoutSceneIfNeeded:(id)needed withContext:(id)context;
-(void)tileProviderNeedsUpdate:(id)update;
-(BOOL)tileProviderMayUseNetwork:(id)network;
-(void)_transitionFromMode:(int)mode toMode:(int)mode2 animated:(BOOL)animated;
-(void)_updateZoomLevel:(id)level;
-(double)heightAtPoint:(XXStruct_taVrlB)point;
-(int)maximumZoomLevelInView:(id)view;
-(int)minimumZoomLevelInView:(id)view;
// converted property getter: -(int)tileSize;
-(void)_forceLayout;
-(void)shouldFlushCaches:(id)caches;
-(void)flushCaches;
-(void)clearScene;
-(void)didTapZoom;
-(void)willTapZoom;
-(BOOL)isShowingNoDataPlaceholders;
-(id)attributionsForCurrentRegion;
// declared property getter: -(id)visibleTileSets;
-(void)didReceiveMemoryWarning;
-(void)dealloc;
-(id)initShouldRasterize:(BOOL)init;
-(id)initWithTransform:(const XXStruct_$zuyAD*)transform;
-(id)initWithTransform:(const XXStruct_$zuyAD*)transform shouldRasterize:(BOOL)rasterize;
-(void)activeTileGroupChanged:(id)changed;
-(void)createTrafficTileSourceIfNecessary;
-(id)navTileSource;
// declared property setter: -(void)setStylesheet:(id)stylesheet;
-(void)stylesheetDidChange;
-(void)_setStylesheetFromMapType:(int)mapType;
-(id)loupeMapModel;
// declared property getter: -(int)loupeType;
-(void)_tryTransitionAndPreloadIfNecessary:(id)necessary;
-(void)_mapConfigurationDidChange;
// declared property setter: -(void)setLimitingNavCameraHeight:(BOOL)height;
-(void)_updateRegularTileProviderMode;
-(void)didEndNavigation;
-(void)didBeginTransitionToNavigation;
-(void)preloadNavigationSceneResourcesWithContext:(id)context;
// declared property setter: -(void)setLoupeType:(int)type;
-(BOOL)writeVisibleTrafficTilesToDirectory:(id)directory error:(id*)error;
-(id)detailedDescription;
// declared property setter: -(void)setMapType:(int)type;
-(void)forceMapType:(int)type;
-(void)configureTileSources;
-(void)_deactivateModel:(id)model;
-(void)_activateModel:(id)model;
-(id)sourceForLayer:(unsigned)layer mode:(int)mode;
-(id)createSourceForLayer:(unsigned)layer tileSet:(id)set mode:(int)mode;
-(int)tileStyleForMapLayer:(unsigned)mapLayer;
// declared property setter: -(void)setLabelScaleFactor:(int)factor;
// declared property getter: -(int)labelScaleFactor;
// declared property setter: -(void)setLocalizeLabels:(BOOL)labels;
// declared property getter: -(BOOL)localizeLabels;
// declared property setter: -(void)setTrafficEnabled:(BOOL)enabled;
-(float)ppi;
-(float)scale;
-(void)setDesiredMapMode:(int)mode immediate:(BOOL)immediate;
// declared property getter: -(BOOL)disableRealisticLand;
// declared property getter: -(BOOL)disableRealisticRoads;
// declared property setter: -(void)setDisableRealisticLand:(BOOL)land;
// declared property setter: -(void)setDisableRealisticRoads:(BOOL)roads;
// declared property getter: -(id)terrainHeightCache;
-(BOOL)isRoadClassDisabled:(int)disabled;
-(void)disableRoadClass:(BOOL)aClass withRoadClass:(int)roadClass;
// declared property getter: -(id)tileProvider;
-(void)foreachActiveLayer:(id)layer;
@end

