/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, VKLabelNavRoad, VKLabelTile, NSArray;

__attribute__((visibility("hidden")))
@interface VKLabelNavJunction : XXUnknownSuperclass {
@private
	VKLabelTile* _tile;
	CGSize _tileCoordinate;
	VKCacheKey* _geoJunction;
	RouteCalibration _routeOffset;
	NSMutableArray* _roads;
	VKLabelNavRoad* _incomingRoad;
	VKLabelNavRoad* _outgoingRoad;
	float _distanceFromPreviousShieldLabel;
	int _preferredLabelPlacement;
	BOOL _isOnDualCarriageway;
	BOOL _foundRoads;
	BOOL _foundOverpasses;
	BOOL _isOverpass;
	unsigned _depthFromRoute;
	XXStruct_taVrlB _worldCoordinate;
	double _sortValue;
}
@property(assign, nonatomic) int preferredLabelPlacement;	// @synthesize=_preferredLabelPlacement
@property(readonly, assign, nonatomic) int requiredLabelPlacement;
@property(assign, nonatomic) unsigned depthFromRoute;	// @synthesize=_depthFromRoute
@property(readonly, assign, nonatomic) BOOL isOverpass;	// @synthesize=_isOverpass
@property(readonly, assign, nonatomic) BOOL isOffRouteGraph;
@property(readonly, assign, nonatomic) BOOL isAwayFromRoute;
@property(readonly, assign, nonatomic) BOOL isMultiRoadIntersection;
@property(readonly, assign, nonatomic) BOOL isIntersection;
@property(readonly, assign, nonatomic) BOOL isRoadTerminus;
@property(readonly, assign, nonatomic) BOOL isTileEdgeJunction;
@property(assign, nonatomic) BOOL isOnDualCarriageway;	// @synthesize=_isOnDualCarriageway
@property(assign, nonatomic) float distanceFromPreviousShieldLabel;	// @synthesize=_distanceFromPreviousShieldLabel
@property(readonly, assign, nonatomic) VKLabelNavRoad* incomingRoad;	// @synthesize=_incomingRoad
@property(readonly, assign, nonatomic) VKLabelNavRoad* outgoingRoad;	// @synthesize=_outgoingRoad
@property(readonly, assign, nonatomic) NSArray* roads;	// @synthesize=_roads
@property(assign, nonatomic) RouteCalibration routeOffset;	// @synthesize=_routeOffset
@property(readonly, assign, nonatomic) CGSize tileCoordinate;	// @synthesize=_tileCoordinate
@property(readonly, assign, nonatomic) const VKCacheKey* geoJunction;	// @synthesize=_geoJunction
@property(readonly, assign, nonatomic) VKLabelTile* tile;	// @synthesize=_tile
// declared property setter: -(void)setIsOnDualCarriageway:(BOOL)carriageway;
// declared property getter: -(BOOL)isOnDualCarriageway;
// declared property getter: -(BOOL)isOverpass;
// declared property setter: -(void)setDepthFromRoute:(unsigned)route;
// declared property getter: -(unsigned)depthFromRoute;
// declared property setter: -(void)setDistanceFromPreviousShieldLabel:(float)previousShieldLabel;
// declared property getter: -(float)distanceFromPreviousShieldLabel;
// declared property getter: -(int)preferredLabelPlacement;
// declared property getter: -(id)incomingRoad;
// declared property getter: -(id)outgoingRoad;
// declared property getter: -(RouteCalibration)routeOffset;
// declared property getter: -(CGSize)tileCoordinate;
// declared property getter: -(const VKCacheKey*)geoJunction;
// declared property getter: -(id)tile;
-(id).cxx_construct;
// declared property setter: -(void)setPreferredLabelPlacement:(int)placement;
// declared property getter: -(int)requiredLabelPlacement;
-(void)evaluateCrossStreets;
-(void)addRouteEdge:(id)edge atA:(BOOL)a;
-(void)findOverpasses;
-(void)findRoads;
// declared property getter: -(id)roads;
// declared property getter: -(BOOL)isMultiRoadIntersection;
// declared property getter: -(BOOL)isOffRouteGraph;
// declared property getter: -(BOOL)isAwayFromRoute;
// declared property getter: -(BOOL)isIntersection;
// declared property getter: -(BOOL)isRoadTerminus;
// declared property getter: -(BOOL)isTileEdgeJunction;
// declared property setter: -(void)setRouteOffset:(RouteCalibration)offset;
-(BOOL)matchesLocationForJunction:(id)junction;
-(id)description;
-(void)dealloc;
-(id)initWithRoadEdge:(const XXStruct_E6zS0B*)roadEdge atA:(BOOL)a routeOffset:(RouteCalibration)offset tile:(id)tile;
-(id)initWithGEOJunction:(VKCacheKey*)geojunction routeOffset:(RouteCalibration)offset tile:(id)tile;
@end

