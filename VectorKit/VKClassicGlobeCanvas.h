/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import "VKInteractiveMap.h"
#import "VKAnnotationModelDelegate.h"
#import "VKCalloutControllerDelegate.h"
#import "VKScreenCanvas.h"
#import "VKTrafficIncidentsMapModelDelegate.h"
#import "VKWorldDelegate.h"
#import "VKCameraControllerCanvasDelegate.h"
#import "AltMapDelegate.h"
#import "AltRendererCallback.h"
#import "VKGlobeAdapterDelegate.h"

@class VKCamera, VKGlobeViewWrapperImp, GEOMapRegion, NSArray, VKTrafficIncident, VKGlobeLineContainer, VKGlobeAdapter, VKWorld, VKGlobePointCache, AltMapView, VKViewTransform, VKCalloutController, UIView, NSSet, VKGlobeCameraController, VKAnnotationModel, NSObject, VKAnchorContext;
@protocol VKInteractiveMapDelegate, VKTrackableAnnotation, OS_dispatch_queue, VKRouteMatchedAnnotationPresentation;

__attribute__((visibility("hidden")))
@interface VKClassicGlobeCanvas : VKScreenCanvas <AltMapDelegate, AltRendererCallback, VKAnnotationModelDelegate, VKCameraControllerCanvasDelegate, VKCalloutControllerDelegate, VKGlobeAdapterDelegate, VKWorldDelegate, VKTrafficIncidentsMapModelDelegate, VKInteractiveMap> {
@private
	AltMapView* _globeView;
	id<VKInteractiveMapDelegate> _delegate;
	VKCalloutController* _calloutController;
	VKGlobeCameraController* _cameraController;
	VKAnnotationModel* _annotationModel;
	VKAnchorContext* _anchorContext;
	VKGlobePointCache* _pointCache;
	VKViewTransform* _viewTransform;
	VKCamera* _geocentricCamera;
	BOOL _labelMarkerSelectionEnabled;
	BOOL _localizeLabels;
	int _labelScaleFactor;
	int _mapType;
	VKGlobeAdapter* _globeAdapter;
	VKGlobeViewWrapperImp* _wrapper;
	VKGlobeLineContainer* _lineContainer;
	NSObject<OS_dispatch_queue>* _rootLayoutQueue;
	NSObject<OS_dispatch_queue>* _layoutQueue;
	BOOL _tracking;
	BOOL _forceRepaint;
	BOOL _searchAnimationEnabled;
	UIEdgeInsets _edgeInsets;
	UIEdgeInsets _fullyOccludedEdgeInsets;
	shared_ptr<VKGlobeStylesheet> _globeStyleSheet;
	AltitudeDebugSettings _debugSettings;
	BOOL _pendingAnimation;
	XXStruct_zYrK5D _animationCoordinate;
	double _animationZoom;
	BOOL _initialized;
	VKWorld* _world;
	BOOL _canShowFlyover;
	shared_ptr<bool> _isDead;
}
@property(readonly, assign, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
@property(readonly, assign, nonatomic) VKTrafficIncident* selectedTrafficIncident;
@property(readonly, assign, nonatomic) NSArray* visibleTileSets;
@property(readonly, assign, nonatomic, getter=isTrackingHeading) BOOL trackingHeading;
@property(readonly, assign, nonatomic) id<VKTrackableAnnotation> trackingAnnotation;
@property(readonly, assign, nonatomic, getter=isAnimatingToTrackAnnotation) BOOL animatingToTrackAnnotation;
@property(readonly, assign, nonatomic) double pitch;
@property(readonly, assign, nonatomic) double presentationYaw;
@property(readonly, assign, nonatomic) GEOMapRegion* mapRegionOfInterest;
@property(assign, nonatomic) UIEdgeInsets fullyOccludedEdgeInsets;
@property(assign, nonatomic) int labelScaleFactor;	// @synthesize=_labelScaleFactor
@property(assign, nonatomic) BOOL localizeLabels;	// @synthesize=_localizeLabels
@property(assign, nonatomic) BOOL labelMarkerSelectionEnabled;	// @synthesize=_labelMarkerSelectionEnabled
@property(assign, nonatomic) BOOL staysCenteredDuringRotation;
@property(assign, nonatomic) BOOL staysCenteredDuringPinch;
@property(assign, nonatomic) BOOL alwaysDraws;
@property(readonly, assign, nonatomic) NSSet* persistentOverlays;
@property(readonly, assign, nonatomic) NSArray* overlays;
@property(assign, nonatomic) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;
@property(assign, nonatomic) BOOL trackingAutoSelectsZoomScale;
@property(readonly, assign, nonatomic) BOOL flyoverAvailable;	// @synthesize=_canShowFlyover
@property(retain, nonatomic) GEOMapRegion* mapRegion;
@property(readonly, assign, nonatomic) double yaw;
@property(assign, nonatomic) Class calloutViewClass;
@property(assign, nonatomic) UIView* calloutContainerView;
@property(readonly, assign, nonatomic, getter=isFullyPitched) BOOL fullyPitched;
@property(readonly, assign, nonatomic, getter=isPitched) BOOL pitched;
@property(assign, nonatomic, getter=isSearchAnimationEnabled) BOOL searchAnimationEnabled;
@property(assign, nonatomic) BOOL forceRepaint;	// @synthesize=_forceRepaint
@property(assign, nonatomic) BOOL trafficEnabled;
@property(assign, nonatomic) BOOL isPitchable;
@property(assign, nonatomic) UIEdgeInsets edgeInsets;
@property(retain, nonatomic) VKCalloutController* calloutController;	// @synthesize=_calloutController
@property(readonly, assign, nonatomic) double maximumZoomLevel;
@property(readonly, assign, nonatomic) double minimumZoomLevel;
@property(assign, nonatomic) int mapType;
@property(assign, nonatomic) id<VKInteractiveMapDelegate> delegate;	// @synthesize=_delegate
@property(retain) id annotationMarkerDeselectionCallback;	// converted property
+(BOOL)supportsMapType:(int)type;
// declared property getter: -(BOOL)flyoverAvailable;
// declared property setter: -(void)setForceRepaint:(BOOL)repaint;
// declared property getter: -(BOOL)forceRepaint;
// declared property setter: -(void)setCalloutController:(id)controller;
// declared property getter: -(id)calloutController;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
// declared property getter: -(int)labelScaleFactor;
// declared property getter: -(BOOL)localizeLabels;
// declared property getter: -(BOOL)labelMarkerSelectionEnabled;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)incidentsModel:(id)model didDeselectTrafficIncident:(id)incident;
-(void)incidentsModel:(id)model trafficIncident:(id)incident calloutAccessoryControlTapped:(id)tapped;
-(void)incidentsModel:(id)model willSelectTrafficIncident:(id)incident;
// declared property getter: -(id)selectedTrafficIncident;
-(void)deselectTrafficIncidentAnimated:(BOOL)animated;
-(void)selectTrafficIncident:(id)incident animated:(BOOL)animated avoid:(CGRect)avoid;
-(id)trafficIncidentForSelectionAtPoint:(CGPoint)point;
-(void)worldDisplayDidChange:(id)worldDisplay;
-(void)worldLayoutDidChange:(id)worldLayout;
-(void)forceLayout;
-(void)waitForFirstFrame;
-(void)_updateDebugSettings;
-(void)setBackgroundViewLoading:(BOOL)loading;
-(unsigned)getTotalDownloaded;
// declared property getter: -(BOOL)alwaysDraws;
// declared property setter: -(void)setAlwaysDraws:(BOOL)draws;
// declared property getter: -(BOOL)isFullyDrawn;
-(void)setLaunchCompletion:(id)completion;
-(void)didEnterBackground;
-(void)didReceiveMemoryWarning;
-(void)removePersistentOverlay:(id)overlay;
-(void)addPersistentOverlay:(id)overlay;
// declared property getter: -(id)persistentOverlays;
// declared property getter: -(id)overlays;
-(void)removeOverlay:(id)overlay;
-(void)addOverlay:(id)overlay;
-(id)cameraController:(id)controller presentationForAnnotation:(id)annotation;
-(void)cameraController:(id)controller canEnter3DModeDidChange:(BOOL)canEnter3DMode;
-(void)cameraController:(id)controller didBecomePitched:(BOOL)pitched;
-(void)cameraControllerDidStopRegionAnimation:(id)cameraController completed:(BOOL)completed;
-(void)cameraControllerWillStartRegionAnimation:(id)cameraController;
-(void)cameraControllerDidChangeCameraState:(id)cameraController;
-(XXStruct_taVrlB)pointForHandle:(id)handle atCoordinate:(XXStruct_zYrK5D)coordinate withHighPrecision:(BOOL)highPrecision;
-(void)removeHandle:(id)handle;
-(id)addHandleAtCoordinate:(XXStruct_zYrK5D)coordinate withHighPrecision:(BOOL)highPrecision;
// converted property getter: -(id)annotationMarkerDeselectionCallback;
-(id)selectedAnnotationMarker;
-(id)annotationMarkers;
-(id)annotationCoordinateTest;
-(id)annotationRectTest;
// converted property setter: -(void)setAnnotationMarkerDeselectionCallback:(id)callback;
-(void)selectAnnotationMarker:(id)marker animated:(BOOL)animated avoid:(CGRect)avoid;
-(void)deselectAnnotationMarker:(id)marker animated:(BOOL)animated;
-(void)removeAnnotationMarker:(id)marker;
-(void)addAnnotationMarker:(id)marker allowAnimation:(BOOL)animation;
-(void)globeAdapter:(id)adapter setNeedsDisplay:(BOOL)display;
-(void)globeAdapter:(id)adapter setNeedsLayout:(BOOL)layout;
-(void)globeAdapter:(id)adapter didDeselectLabelMarker:(id)marker;
-(void)globeAdapter:(id)adapter labelMarker:(id)marker calloutAccessoryControlTapped:(id)tapped;
-(void)globeAdapter:(id)adapter willSelectLabelMarker:(id)marker;
-(void)calloutController:(id)controller didUpdateCalloutView:(id)view forSource:(id)source animated:(BOOL)animated;
-(void)calloutController:(id)controller willShowCalloutView:(id)view forSource:(id)source;
-(void)calloutController:(id)controller didUpdateCalloutPopoverController:(id)controller2 forSource:(id)source;
-(void)calloutController:(id)controller willShowCalloutPopoverController:(id)controller2 forSource:(id)source;
-(void)calloutController:(id)controller needsPanByPixelOffset:(CGPoint)offset relativeToScreenPoint:(CGPoint)screenPoint animated:(BOOL)animated duration:(double)duration completionHandler:(id)handler;
-(void)annotationModel:(id)model didAnimateInAnnotationMarkers:(id)annotationMarkers;
-(void)annotationModel:(id)model willAnimateInAnnotationMarkers:(id)annotationMarkers;
-(void)annotationModel:(id)model annotationMarker:(id)marker calloutAccessoryControlTapped:(id)tapped;
-(void)deselectLabelMarkerAnimated:(BOOL)animated;
-(id)selectedLabelMarker;
-(void)selectLabelMarker:(id)marker animated:(BOOL)animated avoid:(CGRect)avoid;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)point pointLabelsOnly:(BOOL)only;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)point avoidCurrent:(BOOL)current;
-(void)mapView:(id)view willDrawInContext:(CGContextRef)context;
-(void)mapView:(id)view didResizeToWidth:(unsigned)width height:(unsigned)height;
-(void)mapView:(id)view canShowFlyoverDidChange:(BOOL)canShowFlyover;
-(void)mapViewDidFinishLoadingTiles:(id)mapView;
-(void)mapViewDidStartLoadingTiles:(id)mapView;
-(void)mapView:(id)view canEnter3DModeDidChange:(BOOL)canEnter3DMode;
-(void)mapView:(id)view didBecomePitched:(BOOL)pitched;
-(void)mapViewDidChangeVisibleRegion:(id)mapView;
-(void)mapViewDidStopUserInteraction:(id)mapView;
-(void)mapViewDidStartUserInteraction:(id)mapView;
-(BOOL)isShowingNoDataPlaceholders;
-(id)attributionsForCurrentRegion;
// declared property getter: -(id)visibleTileSets;
-(XXStruct_taVrlB)centerCoordinate;
-(void)debugHighlightLabelAtPoint:(CGPoint)point;
-(XXStruct_taVrlB)screenPointForPoint:(CGPoint)point;
-(void)postRender;
-(void)drawVK;
-(void)layoutVK;
-(void)preRender;
-(void)onTimerFired:(double)fired;
-(BOOL)canRenderInWindow:(id)window;
-(CGPoint)convertCoordinate:(XXStruct_zYrK5D)coordinate toCameraModelPointToView:(id)view;
-(CGPoint)convertCoordinate:(XXStruct_zYrK5D)coordinate toPointToView:(id)view;
-(XXStruct_zYrK5D)convertPoint:(CGPoint)point toCoordinateFromView:(id)view;
-(void)stopAnimations;
-(void)stopSearchResultAnimation;
-(void)stopPlaceCardAnimationAtCoordinate;
-(void)startPlaceCardAnimationAtCoordinate:(XXStruct_zYrK5D)coordinate andDistance:(double)distance;
-(void)showSearchResultAnimationAtCoordinate:(XXStruct_zYrK5D)coordinate withMapRegion:(id)mapRegion;
-(void)_runPendingAnimation;
-(void)_setAnimationCoordinate:(XXStruct_zYrK5D)coordinate andZoom:(double)zoom;
-(BOOL)canShowAnimationForSearchResultWithMapRegion:(id)mapRegion;
-(void)startLoadPosition:(XXStruct_zYrK5D)position withCompletion:(id)completion;
-(void)reload;
-(void)setLodMode:(int)mode;
// declared property getter: -(id)routeLineSplitAnnotation;
// declared property setter: -(void)setRouteLineSplitAnnotation:(id)annotation;
// declared property getter: -(BOOL)isTrackingHeading;
// declared property getter: -(id)trackingAnnotation;
// declared property getter: -(BOOL)isAnimatingToTrackAnnotation;
-(void)stopTrackingAnnotation;
-(void)startTrackingAnnotation:(id)annotation trackHeading:(BOOL)heading animated:(BOOL)animated;
// declared property setter: -(void)setTrackingAutoSelectsZoomScale:(BOOL)scale;
// declared property getter: -(BOOL)trackingAutoSelectsZoomScale;
-(BOOL)restoreViewportFromInfo:(id)info;
-(id)viewportInfo;
// declared property getter: -(BOOL)staysCenteredDuringRotation;
// declared property setter: -(void)setStaysCenteredDuringRotation:(BOOL)rotation;
// declared property getter: -(BOOL)staysCenteredDuringPinch;
// declared property setter: -(void)setStaysCenteredDuringPinch:(BOOL)pinch;
-(id)camera;
-(void)updateCameraFromGlobe;
// declared property getter: -(double)pitch;
// declared property getter: -(double)presentationYaw;
// declared property getter: -(double)yaw;
// declared property getter: -(id)mapRegionOfInterest;
// declared property getter: -(id)mapRegion;
// declared property setter: -(void)setMapRegion:(id)region;
-(void)setYaw:(double)yaw animated:(BOOL)animated;
-(double)_zoomForMapRegion:(id)mapRegion;
-(void)animateToMapRegion:(id)mapRegion pitch:(double)pitch yaw:(double)yaw duration:(double)duration completion:(id)completion;
-(void)setMapRegion:(id)region pitch:(double)pitch yaw:(double)yaw animated:(BOOL)animated completion:(id)completion;
-(void)setMapRegion:(id)region pitch:(double)pitch yaw:(double)yaw animated:(BOOL)animated;
-(void)setMapRegion:(id)region animated:(BOOL)animated;
-(void)transferCamera:(id)camera;
-(void)dismissExpandedCallout;
// declared property setter: -(void)setCalloutContainerView:(id)view;
// declared property getter: -(id)calloutContainerView;
// declared property getter: -(Class)calloutViewClass;
// declared property setter: -(void)setCalloutViewClass:(Class)aClass;
-(void)stopSnappingAnimations;
-(BOOL)canEnter3DMode;
// declared property getter: -(BOOL)isFullyPitched;
// declared property getter: -(BOOL)isPitched;
-(void)exit3DMode;
-(void)enter3DMode;
-(BOOL)writeVisibleTrafficTilesToDirectory:(id)directory error:(id*)error;
-(id)detailedDescription;
-(void)_activeTileGroupChanged:(id)changed;
-(void)dealloc;
-(void)initialize;
-(id)initWithFrame:(CGRect)frame context:(id)context;
-(void)setHidden:(BOOL)hidden;
// declared property setter: -(void)setLabelScaleFactor:(int)factor;
// declared property setter: -(void)setLocalizeLabels:(BOOL)labels;
// declared property setter: -(void)setLabelMarkerSelectionEnabled:(BOOL)enabled;
// declared property getter: -(double)maximumZoomLevel;
// declared property getter: -(double)minimumZoomLevel;
// declared property getter: -(int)mapType;
// declared property setter: -(void)setMapType:(int)type;
// declared property getter: -(UIEdgeInsets)fullyOccludedEdgeInsets;
// declared property setter: -(void)setFullyOccludedEdgeInsets:(UIEdgeInsets)insets;
// declared property getter: -(UIEdgeInsets)edgeInsets;
// declared property setter: -(void)setEdgeInsets:(UIEdgeInsets)insets;
// declared property getter: -(BOOL)isSearchAnimationEnabled;
// declared property setter: -(void)setSearchAnimationEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)trafficEnabled;
// declared property setter: -(void)setTrafficEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)isPitchable;
// declared property setter: -(void)setIsPitchable:(BOOL)pitchable;
-(void)stopPitchingWithFocusPoint:(CGPoint)focusPoint;
-(void)updatePitchWithFocusPoint:(CGPoint)focusPoint translation:(double)translation;
-(void)startPitchingWithFocusPoint:(CGPoint)focusPoint;
-(void)stopRotatingWithFocusPoint:(CGPoint)focusPoint;
-(void)updateRotationWithFocusPoint:(CGPoint)focusPoint newValue:(double)value;
-(void)startRotatingWithFocusPoint:(CGPoint)focusPoint;
-(void)stopPanningAtPoint:(CGPoint)point;
-(void)updatePanWithTranslation:(CGPoint)translation;
-(void)startPanningAtPoint:(CGPoint)point;
-(void)stopPinchingWithFocusPoint:(CGPoint)focusPoint;
-(void)updatePinchWithFocusPoint:(CGPoint)focusPoint oldFactor:(double)factor newFactor:(double)factor3;
-(void)startPinchingWithFocusPoint:(CGPoint)focusPoint;
-(void)zoom:(double)zoom withFocusPoint:(CGPoint)focusPoint completionHandler:(id)handler;
@end

