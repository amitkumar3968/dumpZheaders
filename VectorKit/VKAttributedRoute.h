/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import "VKPolylineOverlay.h"

@class VKOriginalRouteMapMatchingDataSource;
@protocol VKRouteMapMatchingDataSource;

@interface VKAttributedRoute : VKPolylineOverlay {
	VKOriginalRouteMapMatchingDataSource* _originalRouteMapMatchingDataSource;
	id<VKRouteMapMatchingDataSource> _routeLineMapMatchingDataSource;
}
@property(readonly, assign, nonatomic) RouteCalibration end;
@property(readonly, assign, nonatomic) RouteCalibration start;
@property(assign, nonatomic) id<VKRouteMapMatchingDataSource> routeLineMapMatchingDataSource;	// @synthesize=_routeLineMapMatchingDataSource
+(id)attributedRouteWithRoute:(id)route;
// declared property setter: -(void)setRouteLineMapMatchingDataSource:(id)source;
// declared property getter: -(id)routeLineMapMatchingDataSource;
-(XXStruct_zYrK5D)locationAtDistance:(double)distance from:(id)from;
-(id)projectedTunnelMatchUpToDistance:(double)distance from:(id)from overTime:(double)time;
-(id)routeMatchAtDistance:(double)distance from:(id)from stopBeforeNextManeuver:(BOOL)maneuver;
-(id)_routeMatchAtDistance:(double)distance from:(id)from stopAtEndOfTunnel:(BOOL)tunnel stopBeforeNextManeuver:(BOOL)maneuver atDate:(id)date;
-(RouteCalibration)routeCoordinateAtDistanceAlongOriginalRoute:(double)distanceAlongOriginalRoute from:(RouteCalibration)from;
-(XXStruct_zYrK5D)locationForRouteCoordinate:(RouteCalibration)routeCoordinate;
-(XXStruct_taVrlB)pointForRouteCoordinate:(RouteCalibration)routeCoordinate;
-(XXStruct_taVrlB)_pointOnOriginalRouteForRouteCoordinate:(RouteCalibration)routeCoordinate;
-(id)findClosestCoordinateAlongRouteForMatchedLocation:(id)matchedLocation;
-(id)findClosestCoordinateAlongRouteForMatchedLocation:(id)matchedLocation onDate:(id)date;
-(id)findClosestCoordinateAlongRouteForLocation:(id)location prevRouteMatch:(id)match onDate:(id)date;
-(id)_findClosestCoordinateAlongRouteForLocation:(id)location prevRouteMatch:(id)match useCLMatchedLocation:(BOOL)location3 onDate:(id)date;
-(id)_findClosestCoordinateAlongSectionsFromDataSource:(id)dataSource forLocation:(id)location useCLMatchedLocation:(BOOL)location3 prevRouteMatch:(id)match onDate:(id)date;
-(RouteCalibration)_bestMatchToPolylineSectionFrom:(id)from point:(const XXStruct_taVrlB*)point useCLMatchedLocation:(BOOL)location bounds:(const XXStruct_HKaJvA*)bounds points:(const Vertex*)points pointCount:(unsigned)count distanceLeftToSearch:(double*)search prevRouteMatch:(id)match bestDistance:(double*)distance bestPoint:(XXStruct_taVrlB*)point10 bestMatchedCourse:(double*)course bestMatchLooksGood:(BOOL*)good bestStepIndex:(unsigned*)index stopLooking:(BOOL*)looking;
-(id)_setupRouteMatchWithRawLocation:(id)rawLocation previousMatch:(id)match onDate:(id)date distanceFromRoute:(double)route coordinate:(RouteCalibration)coordinate matchedPoint:(XXStruct_taVrlB)point matchedCourse:(double)course stepIndex:(unsigned)index isGoodMatch:(BOOL)match9;
-(RouteCalibration)_findRouteCoordinateWithOffset:(float)offset segA:(const Vertex*)a segB:(const Vertex*)b pointOnSegment:(CGSize)segment bounds:(const XXStruct_HKaJvA*)bounds;
-(RouteCalibration)makeRouteCoordinateFromPointIndex:(unsigned)pointIndex offset:(float)offset;
-(id)_originalRouteMapMatchingDataSourceAroundPoint:(XXStruct_taVrlB)point;
-(double)_courseAt:(unsigned)at;
// declared property getter: -(RouteCalibration)end;
// declared property getter: -(RouteCalibration)start;
-(void)dealloc;
-(id)initWithRoute:(id)route;
@end

