/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class VKLabelTile, NSString, VKLabelNavJunction, VKLabelNavRoadLabel;

__attribute__((visibility("hidden")))
@interface VKLabelNavRoad : XXUnknownSuperclass {
@private
	VKLabelTile* _tile;
	XXStruct_IJc5WD* _data;
	int _vertexIndexA;
	int _vertexIndexB;
	VKCacheKey* _junctionA;
	VKCacheKey* _junctionB;
	VKLabelNavJunction* _navJunctionA;
	CGSize _direction;
	BOOL _isRoadLabelUnique;
	BOOL _onRoute;
	BOOL _isStartOfRoadName;
	BOOL _isInGuidance;
	BOOL _areLabelsDisabled;
	RouteCalibration _routeOffset;
	float _routeCrossProduct;
	int _intraRoadPriority;
	double _length;
	NSString* _name;
	NSString* _shieldDisplayGroup;
	NSString* _shieldGroup;
	VKLabelNavRoadLabel* _roadSign;
	VKLabelNavRoadLabel* _roadShield;
	BOOL _isAwayFromRoute;
}
@property(readonly, assign, nonatomic) BOOL isOnewayToJunction;
@property(readonly, assign, nonatomic) BOOL isRamp;
@property(readonly, assign, nonatomic) BOOL suppressRoadSignIfShieldPresent;
@property(readonly, assign, nonatomic) BOOL isAwayFromRoute;	// @synthesize=_isAwayFromRoute
@property(assign, nonatomic) BOOL isRoadLabelUnique;	// @synthesize=_isRoadLabelUnique
@property(assign, nonatomic) int intraRoadPriority;	// @synthesize=_intraRoadPriority
@property(assign, nonatomic) float routeCrossProduct;	// @synthesize=_routeCrossProduct
@property(assign, nonatomic) RouteCalibration routeOffset;	// @synthesize=_routeOffset
@property(assign, nonatomic) BOOL areLabelsDisabled;	// @synthesize=_areLabelsDisabled
@property(assign, nonatomic) BOOL isInGuidance;	// @synthesize=_isInGuidance
@property(assign, nonatomic) BOOL isStartOfRoadName;	// @synthesize=_isStartOfRoadName
@property(assign, nonatomic) BOOL onRoute;	// @synthesize=_onRoute
@property(assign, nonatomic) CGSize direction;	// @synthesize=_direction
@property(readonly, assign, nonatomic) VKCacheKey* junctionB;	// @synthesize=_junctionB
@property(readonly, assign, nonatomic) NSString* shieldGroup;
@property(readonly, assign, nonatomic) NSString* shieldDisplayGroup;
@property(readonly, assign, nonatomic) NSString* name;	// @synthesize=_name
@property(readonly, assign, nonatomic) VKLabelTile* tile;	// @synthesize=_tile
@property(readonly, assign) double length;	// converted property
// declared property setter: -(void)setIsRoadLabelUnique:(BOOL)unique;
// declared property getter: -(BOOL)isRoadLabelUnique;
// declared property setter: -(void)setAreLabelsDisabled:(BOOL)disabled;
// declared property getter: -(BOOL)areLabelsDisabled;
// declared property setter: -(void)setIntraRoadPriority:(int)priority;
// declared property getter: -(int)intraRoadPriority;
// declared property getter: -(VKCacheKey*)junctionB;
// declared property setter: -(void)setRouteOffset:(RouteCalibration)offset;
// declared property getter: -(RouteCalibration)routeOffset;
// declared property setter: -(void)setRouteCrossProduct:(float)product;
// declared property getter: -(float)routeCrossProduct;
// declared property setter: -(void)setIsInGuidance:(BOOL)guidance;
// declared property getter: -(BOOL)isInGuidance;
// declared property setter: -(void)setIsStartOfRoadName:(BOOL)roadName;
// declared property getter: -(BOOL)isStartOfRoadName;
// declared property setter: -(void)setOnRoute:(BOOL)route;
// declared property getter: -(BOOL)onRoute;
// declared property setter: -(void)setDirection:(CGSize)direction;
// declared property getter: -(CGSize)direction;
// declared property getter: -(id)tile;
// declared property getter: -(id)name;
-(id).cxx_construct;
// converted property getter: -(double)length;
-(id)_newLabelWithLabelContext:(LabelContext*)labelContext isShieldLabel:(BOOL)label worldPoint:(XXStruct_taVrlB)point;
-(BOOL)_worldPointForRoadOffset:(float)roadOffset worldPoint:(XXStruct_taVrlB*)point;
-(void)createLabelWithLabelContext:(LabelContext*)labelContext isShieldLabel:(BOOL)label desiredOffsetDistance:(float)distance maxOffsetDistance:(float)distance4 minJunctionDistance:(float)distance5 roadGraph:(id)graph;
-(id)labelWithType:(BOOL)type;
// declared property getter: -(id)shieldDisplayGroup;
// declared property getter: -(id)shieldGroup;
-(BOOL)hasShield;
-(BOOL)matchesRoad:(id)road;
-(BOOL)matchesRoadEdge:(const XXStruct_E6zS0B*)edge;
-(void)getRoadEdge:(XXStruct_E6zS0B*)edge;
// declared property getter: -(BOOL)isOnewayToJunction;
// declared property getter: -(BOOL)isRamp;
// declared property getter: -(BOOL)suppressRoadSignIfShieldPresent;
// declared property getter: -(BOOL)isAwayFromRoute;
-(id)description;
-(void)clearRoadSign;
-(const char*)cstrName;
-(void)dealloc;
-(id)initWithRoadEdge:(const XXStruct_E6zS0B*)roadEdge navJunctionA:(id)a routeOffset:(RouteCalibration)offset tile:(id)tile;
@end

