/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import "VGLScreenCanvas.h"
#import "VKWorldDelegate.h"
#import "VKCameraControllerCanvasDelegate.h"
#import "VKCameraDelegate.h"

@class NSMutableArray, NSArray, VKWorld, VKLayoutContext, VKCamera, VKScene;

__attribute__((visibility("hidden")))
@interface VKScreenCanvas : VGLScreenCanvas <VKWorldDelegate, VKCameraControllerCanvasDelegate, VKCameraDelegate> {
@private
	VKWorld* _world;
	VKCamera* _camera;
	VKScene* _scene;
	VKLayoutContext* _layoutContext;
	BOOL _needsLayout;
	unsigned _wantsLayout;
	unsigned _needsRepaint;
	BOOL _userIsGesturing;
	NSMutableArray* _cameraControllers;
	BOOL _debugPaintFrameRateGraph;
	float _debugFramesPerSecond;
	int _state;
	BOOL _rendersInBackground;
}
@property(assign, nonatomic, getter=isGesturing) BOOL gesturing;
@property(assign, nonatomic) BOOL rendersInBackground;
@property(readonly, assign, nonatomic) int state;	// @synthesize=_state
@property(assign, nonatomic) float debugFramesPerSecond;	// @synthesize=_debugFramesPerSecond
@property(assign, nonatomic) BOOL debugEnableMultisampling;	// @dynamic
@property(assign, nonatomic) BOOL debugPaintFrameRateGraph;	// @synthesize=_debugPaintFrameRateGraph
@property(readonly, assign, nonatomic) VKCamera* camera;	// @synthesize=_camera
@property(readonly, assign, nonatomic) NSArray* cameraControllers;	// @synthesize=_cameraControllers
@property(readonly, assign, nonatomic) VKWorld* world;	// @synthesize=_world
+(Class)contextClass;
// declared property getter: -(id)cameraControllers;
// declared property getter: -(int)state;
// declared property getter: -(id)camera;
// declared property setter: -(void)setDebugFramesPerSecond:(float)second;
// declared property getter: -(float)debugFramesPerSecond;
// declared property setter: -(void)setDebugPaintFrameRateGraph:(BOOL)graph;
// declared property getter: -(BOOL)debugPaintFrameRateGraph;
// declared property getter: -(id)world;
// declared property setter: -(void)setRendersInBackground:(BOOL)background;
// declared property getter: -(BOOL)rendersInBackground;
-(void)didMoveToWindow;
-(void)willMoveToWindow:(id)window;
-(id)cameraController:(id)controller presentationForAnnotation:(id)annotation;
-(void)cameraController:(id)controller canEnter3DModeDidChange:(BOOL)canEnter3DMode;
-(void)cameraController:(id)controller didBecomePitched:(BOOL)pitched;
-(void)cameraControllerDidStopRegionAnimation:(id)cameraController completed:(BOOL)completed;
-(void)cameraControllerWillStartRegionAnimation:(id)cameraController;
-(void)cameraControllerDidChangeCameraState:(id)cameraController;
-(void)removeCameraController:(id)controller;
-(void)addCameraController:(id)controller;
// declared property setter: -(void)setGesturing:(BOOL)gesturing;
// declared property getter: -(BOOL)isGesturing;
-(void)cameraDidChange:(id)camera;
-(void)worldDisplayDidChange:(id)worldDisplay;
-(void)worldLayoutDidChange:(id)worldLayout;
-(void)forceLayout;
-(void)layoutSubviews;
-(void)updateCameraForFrameResize;
-(void)didDrawView;
-(void)takeSnapshotIfNeeded;
-(void)onTimerFired:(double)fired;
// declared property setter: -(void)setDebugEnableMultisampling:(BOOL)multisampling;
// declared property getter: -(BOOL)debugEnableMultisampling;
-(void)setNeedsDisplay;
-(void)setNeedsLayout;
-(void)setHidden:(BOOL)hidden;
-(void)_applicationDidBecomeActive:(id)_application;
-(BOOL)_updateDisplayStatus:(id)status;
-(BOOL)canRenderInWindow:(id)window;
-(void)drawLayer:(id)layer inContext:(CGContextRef)context;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame context:(id)context;
-(id)initWithFrame:(CGRect)frame;
@end

