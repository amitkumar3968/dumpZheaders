/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "GEOTileSourceClient.h"
#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSError, VKStylesheet, VKTileKeyMap, VKTileKeyList, VKTilePool, GEOTileSource;
@protocol VKTileSourceClient;

__attribute__((visibility("hidden")))
@interface VKTileSource : XXUnknownSuperclass <GEOTileSourceClient> {
@private
	id<VKTileSourceClient> _client;
	GEOTileSource* _tileSource;
	VKTilePool* _tilePool;
	VKTileKeyMap* _pendingLoads;
	VKTileKeyList* _decoding;
	VKTileKeyList* _failedTiles;
	VKStylesheet* _stylesheet;
	int loadingTiles;
	NSError* _recentError;
}
@property(readonly, assign, nonatomic) GEOTileSource* tileSource;
@property(readonly, assign, nonatomic) int maximumDownloadZoomLevel;
@property(readonly, assign, nonatomic) int minimumDownloadZoomLevel;
@property(readonly, assign, nonatomic) int zEquivalenceClass;
@property(readonly, assign, nonatomic) BOOL maximumZoomLevelBoundsCamera;
@property(readonly, assign, nonatomic) BOOL minimumZoomLevelBoundsCamera;
@property(readonly, assign, nonatomic) int maximumZoomLevel;
@property(readonly, assign, nonatomic) int minimumZoomLevel;
@property(readonly, assign, nonatomic) int tileSize;
@property(retain, nonatomic) VKStylesheet* stylesheet;	// @synthesize=_stylesheet
@property(assign, nonatomic) id<VKTileSourceClient> client;	// @synthesize=_client
// declared property setter: -(void)setStylesheet:(id)stylesheet;
// declared property getter: -(id)stylesheet;
// declared property getter: -(id)client;
-(void)tileSource:(id)source declinedToLoadTileKey:(const GEOTileKey*)loadTileKey;
-(void)tileSource:(id)source didFailToLoadTileKey:(const GEOTileKey*)loadTileKey error:(id)error;
-(void)tileSourceDidFinishWithNetwork:(id)tileSource;
-(void)tileSourceWillGoToNetwork:(id)tileSource;
-(void)tileSource:(id)source didFetchData:(id)data forKey:(const GEOTileKey*)key;
-(void)_failedToLoadSourceKey:(const VKTileKey*)loadSourceKey downloadKey:(const GEOTileKey*)key error:(id)error;
-(void)tileAvailabilityChanged:(id)changed;
-(void)populateVisibleTileSets:(id)sets withTiles:(id)tiles;
-(void)decodeData:(id)data downloadKey:(const GEOTileKey*)key sourceKey:(const VKTileKey*)key3;
-(void)didLoadTile:(id)tile forKey:(const VKTileKey*)key;
-(void)fetchedTile:(id)tile forKey:(const VKTileKey*)key;
-(void)failedToDecodeSourceKey:(const VKTileKey*)decodeSourceKey;
-(BOOL)_shouldDecodeTile:(const VKTileKey*)tile;
-(void)fetchTileForKey:(const VKTileKey*)key;
-(void)fetchTileForKey:(const VKTileKey*)key sourceKey:(const VKTileKey*)key2;
-(id)tileForKey:(const VKTileKey*)key;
-(id)tileForSourceKey:(const VKTileKey*)sourceKey renderKey:(const VKTileKey*)key;
-(BOOL)canFetchTileForKey:(const VKTileKey*)key;
-(void)_fetchedTile:(id)tile;
-(VKTileKey)sourceKeyForDownloadKey:(const GEOTileKey*)downloadKey;
-(GEOTileKey)downloadKeyForSourceKey:(const VKTileKey*)sourceKey;
-(VKTileKey)sourceKeyForRenderKey:(const VKTileKey*)renderKey;
-(VKTileKey)nativeKeyForRenderKey:(const VKTileKey*)renderKey;
// declared property getter: -(int)maximumZoomLevel;
// declared property getter: -(BOOL)maximumZoomLevelBoundsCamera;
// declared property getter: -(int)minimumZoomLevel;
// declared property getter: -(BOOL)minimumZoomLevelBoundsCamera;
// declared property getter: -(int)zEquivalenceClass;
// declared property getter: -(id)tileSource;
-(Class)tileSourceClass;
-(GEOTileKey)downloadKeyAtX:(unsigned)x y:(unsigned)y z:(unsigned)z;
-(id)tileForData:(id)data downloadKey:(const GEOTileKey*)key sourceKey:(const VKTileKey*)key3;
// declared property getter: -(int)maximumDownloadZoomLevel;
// declared property getter: -(int)minimumDownloadZoomLevel;
// declared property getter: -(int)tileSize;
-(id)detailedDescription;
-(BOOL)mayUseNetwork;
-(void)foreachTileInPool:(id)pool;
-(void)clearCaches;
-(void)dealloc;
-(id)init;
// declared property setter: -(void)setClient:(id)client;
@end

