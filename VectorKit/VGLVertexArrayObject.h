/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "NSCoding.h"

@class EAGLContext;

__attribute__((visibility("hidden")))
@interface VGLVertexArrayObject : XXUnknownSuperclass <NSCoding> {
@private
	unsigned _VAO;
	unsigned _VBO;
	unsigned _EBO[2];
	int _stride;
	XXStruct_peQPEB* _attributes;
	int _vertexCount;
	int _indexCount[2];
	int _vertexPrimitiveType[2];
	unsigned _indexBufferMode;
	unsigned _bindedIndexBuffer;
	unsigned _indicesDirty : 1;
	unsigned _verticesDirty : 1;
	unsigned _vertexUsage : 2;
	unsigned _indexUsage : 2;
	unsigned _attributeCount : 8;
	EAGLContext* _context;
	vector<unsigned char, vk_allocator<unsigned char> > _vertices;
	vector<unsigned short, vk_allocator<unsigned short> > _indices[2];
}
@property(assign, nonatomic) unsigned indexBufferMode;	// @synthesize=_indexBufferMode
@property(readonly, assign, nonatomic) unsigned char vertsPerPrimitive;
@property(readonly, assign, nonatomic) int currentPrimitiveType;
@property(readonly, assign, nonatomic) unsigned short* indices;
@property(readonly, assign, nonatomic) int indexCount;
@property(readonly, assign, nonatomic) void* vertices;
@property(readonly, assign, nonatomic) int vertexCount;	// @synthesize=_vertexCount
@property(readonly, assign, nonatomic) unsigned VAO;	// @synthesize=_VAO
// declared property getter: -(unsigned)indexBufferMode;
// declared property getter: -(int)vertexCount;
// declared property getter: -(unsigned)VAO;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)checkIndexList:(int)list offset:(int)offset;
-(void)bindWithContext:(id)context;
-(void)freezeIndices;
-(void)freezeVertices;
-(void)freeze;
-(void)appendIndices:(const unsigned short*)indices count:(int)count forIndexMode:(unsigned)indexMode;
-(void)appendIndices:(const unsigned short*)indices count:(int)count;
-(void)appendVertices:(const void*)vertices count:(int)count;
-(unsigned short*)reserveIndices:(int)indices forIndexMode:(unsigned)indexMode;
-(unsigned short*)reserveIndices:(int)indices;
-(void*)reserveVertices:(int)vertices;
-(void)resetIndices;
-(void)resetVertices;
-(void)dealloc;
-(id)initWithStride:(int)stride primitiveType:(int)type attributes:(const XXStruct_peQPEB*)attributes attributeCount:(unsigned char)count vertexCapacity:(int)capacity;
-(id)initWithStride:(int)stride primitiveType:(int)type attributes:(const XXStruct_peQPEB*)attributes attributeCount:(unsigned char)count vertexCapacity:(int)capacity indexCapacity:(int)capacity6;
-(id)initWithStride:(int)stride primitiveType:(int)type attributes:(const XXStruct_peQPEB*)attributes attributeCount:(unsigned char)count vertices:(const void*)vertices vertexCount:(int)count6 indices:(const unsigned short*)indices indexCount:(int)count8;
-(id)initWithStride:(int)stride primitiveType:(int)type attributes:(const XXStruct_peQPEB*)attributes attributeCount:(unsigned char)count vertices:(const void*)vertices vertexCount:(int)count6;
-(void)encodeWithCoder:(id)coder;
-(id)initWithCoder:(id)coder;
-(void)setPrimitiveType:(int)type forMode:(unsigned)mode;
// declared property getter: -(int)currentPrimitiveType;
-(int)primitiveTypeForMode:(unsigned)mode;
-(unsigned short*)indicesForMode:(unsigned)mode;
-(int)indexCountForMode:(unsigned)mode;
// declared property getter: -(int)indexCount;
// declared property getter: -(unsigned short*)indices;
// declared property getter: -(void*)vertices;
// declared property getter: -(unsigned char)vertsPerPrimitive;
// declared property setter: -(void)setIndexBufferMode:(unsigned)mode;
@end

