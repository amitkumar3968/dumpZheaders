/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, VKLabelNavRoadGraph, NSMutableSet, VKPolylineOverlayPainter, NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface VKLabelNavSupport : XXUnknownSuperclass {
@private
	BOOL _needsLayout;
	BOOL _drawRoadSigns;
	VKPolylineOverlayPainter* _route;
	NSString* _currentLocationText;
	BOOL _isOnRoute;
	RouteCalibration _routeUserOffset;
	unsigned _stepIndex;
	NSMutableSet* _tiles;
	NSMutableSet* _pendingTiles;
	NSMutableArray* _junctions;
	VKLabelNavRoadGraph* _roadGraph;
	vector<std::__1::shared_ptr<vk::Label>, vk_allocator<std::__1::shared_ptr<vk::Label>> > _activeSigns;
	NSMutableArray* _fadingLabels;
	NSMutableDictionary* _visibleLabelsByName;
	NSMutableArray* _visibleLabels;
	int _countVisibleRoadSigns;
	NSMutableSet* _roadNamesInGuidance;
	NSMutableArray* _routeRoadInfos;
	NSString* _currentRoadName;
	int _currentRoadNameIndex;
	NSString* _currentShieldGroup;
	BOOL _checkIfRouteSubrangeChanged;
	BOOL _useRouteSubrange;
	RouteCalibration _routeSubrangeStart;
	RouteCalibration _routeSubrangeEnd;
}
@property(readonly, assign, nonatomic) BOOL needsLayout;	// @synthesize=_needsLayout
@property(readonly, assign, nonatomic) const vector<std::__1::shared_ptr<vk::Label>, vk_allocator<std::__1::shared_ptr<vk::Label>> >* activeSigns;	// @synthesize=_activeSigns
@property(assign, nonatomic) RouteCalibration routeUserOffset;	// @synthesize=_routeUserOffset
@property(retain, nonatomic) NSString* currentShieldGroup;	// @synthesize=_currentShieldGroup
@property(retain, nonatomic) NSString* currentRoadName;	// @synthesize=_currentRoadName
@property(retain, nonatomic) NSString* currentLocationText;	// @synthesize=_currentLocationText
@property(retain, nonatomic) VKPolylineOverlayPainter* route;	// @synthesize=_route
@property(assign, nonatomic) BOOL drawRoadSigns;	// @synthesize=_drawRoadSigns
// declared property setter: -(void)setCurrentShieldGroup:(id)group;
// declared property getter: -(id)currentShieldGroup;
// declared property setter: -(void)setCurrentRoadName:(id)name;
// declared property getter: -(id)currentRoadName;
// declared property getter: -(const vector<std::__1::shared_ptr<vk::Label>, vk_allocator<std::__1::shared_ptr<vk::Label>> >*)activeSigns;
// declared property getter: -(id)currentLocationText;
// declared property getter: -(RouteCalibration)routeUserOffset;
// declared property setter: -(void)setDrawRoadSigns:(BOOL)signs;
// declared property getter: -(BOOL)drawRoadSigns;
// declared property getter: -(id)route;
// declared property getter: -(BOOL)needsLayout;
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)_updateActiveRouteRange;
-(BOOL)_findRouteOverlappingJunctionFrom:(int)from routeJunctions:(vector<RouteJunctionInfo, vk_allocator<RouteJunctionInfo> >*)junctions lookBackward:(BOOL)backward firstOverlap:(int*)overlap secondOverlap:(int*)overlap5;
// declared property setter: -(void)setCurrentLocationText:(id)text;
-(void)_updateCurrentRoadInfo;
-(void)_initalizeCurrentRoadInfo;
-(void)_updatePreferredLabelPlacements;
-(void)_updateRoadsInGuidance;
-(void)_updateRoadStarts;
-(void)_updateUniqueOffRouteRoads;
-(BOOL)_addJunctionsForTile:(id)tile;
-(void)_addLabelsForJunctions:(id)junctions withContext:(LabelContext*)context maxVisibleLabels:(unsigned)labels useAllJunctions:(BOOL)junctions4;
-(void)layoutWithLabelContext:(LabelContext*)labelContext;
-(BOOL)_collideLabel:(id)label activeLabel:(id)label2 labelsToRemove:(id)remove;
-(void)_tryAddLabel:(id)label labelContext:(LabelContext*)context labelCollisionEnabled:(BOOL)enabled;
-(void)_tryAddRoadSignForRoad:(id)road isShield:(BOOL)shield labelContext:(LabelContext*)context labelCollisionEnabled:(BOOL)enabled;
-(void)_setTiles:(id)tiles;
-(void)grabTilesFromScene:(id)scene;
-(void)_refreshGuidanceRoadNames;
// declared property setter: -(void)setRoute:(id)route;
-(void)_reloadRouteJunctions;
-(void)clearScene;
-(BOOL)isNavMode;
-(void)dealloc;
// declared property setter: -(void)setRouteUserOffset:(RouteCalibration)offset;
-(id)init;
@end

