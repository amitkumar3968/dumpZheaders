/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "VKTileHeightInformation.h"

@class VGLMesh, VGLMultiTexturedMesh, VGLGroupCullableMesh, GEOVectorTile, VGLTexture, VGLCullableMesh, VKStylesheet, VKHeightfield, VKAnimation;

__attribute__((visibility("hidden")))
@interface VKBuildingFootprintMaker : XXUnknownSuperclass <VKTileHeightInformation> {
@private
	VGLMultiTexturedMesh* _landmarksMesh;
	VGLMesh* _landmarkShadowsMesh;
	float _maxHeight;
	VKHeightfield* _heightfield;
	VKAnimation* _animateOut;
	VKAnimation* _animateIn;
	float _alpha;
	float _scale;
	GEOVectorTile* _geotile;
	VKStylesheet* _stylesheet;
	VKAnimation* _animateBuildingMode;
	vector<VGLGroupCullableMesh *, vk_allocator<VGLGroupCullableMesh *> > _realisticTopMeshes;
	vector<VGLGroupCullableMesh *, vk_allocator<VGLGroupCullableMesh *> > _regularTopMeshes;
	vector<std::__1::vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *>>, vk_allocator<std::__1::vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *>>> > _regularFacadeCollections;
	vector<std::__1::vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *>>, vk_allocator<std::__1::vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *>>> > _realisticFacadeCollections;
	VGLCullableMesh* _pointyBuildingsMesh;
	VGLCullableMesh* _footprintsMesh;
	VGLGroupCullableMesh* _sharedTopMesh;
	VGLGroupCullableMesh* _regularTopMesh;
	vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *> > _sharedFacadeCollection;
	vector<VGLSingleTexturedGroupCullableMesh *, vk_allocator<VGLSingleTexturedGroupCullableMesh *> > _regularFacadeCollection;
	VGLTexture* _shadowTexture;
	XXStruct_$zuyAD _shadowTextureMatrix;
	vector<VKBuildingHeightMap, vk_allocator<VKBuildingHeightMap> > _landmarkHeights;
}
@property(retain, nonatomic) VKAnimation* animateBuildingMode;	// @synthesize=_animateBuildingMode
@property(assign, nonatomic) float scale;	// @synthesize=_scale
@property(assign, nonatomic) float alpha;	// @synthesize=_alpha
@property(retain, nonatomic) VKAnimation* animateIn;	// @synthesize=_animateIn
@property(retain, nonatomic) VKAnimation* animateOut;	// @synthesize=_animateOut
@property(readonly, assign, nonatomic) float maxHeight;	// @synthesize=_maxHeight
@property(readonly, assign, nonatomic) VGLMesh* landmarkShadowsMesh;	// @synthesize=_landmarkShadowsMesh
@property(readonly, assign, nonatomic) VGLMultiTexturedMesh* landmarksMesh;	// @synthesize=_landmarksMesh
@property(readonly, assign, nonatomic) const XXStruct_$zuyAD* shadowTextureMatrix;
@property(readonly, assign, nonatomic) VGLTexture* shadowTexture;
@property(readonly, assign, nonatomic) VGLCullableMesh* footprintsMesh;
@property(readonly, assign, nonatomic) VGLCullableMesh* pointyBuildingsMesh;
// declared property setter: -(void)setAnimateBuildingMode:(id)mode;
// declared property getter: -(id)animateBuildingMode;
// declared property setter: -(void)setScale:(float)scale;
// declared property getter: -(float)scale;
// declared property setter: -(void)setAlpha:(float)alpha;
// declared property getter: -(float)alpha;
// declared property setter: -(void)setAnimateIn:(id)anIn;
// declared property getter: -(id)animateIn;
// declared property setter: -(void)setAnimateOut:(id)anOut;
// declared property getter: -(id)animateOut;
// declared property getter: -(id)landmarkShadowsMesh;
// declared property getter: -(id)landmarksMesh;
// declared property getter: -(float)maxHeight;
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)heightAtX:(float)x Y:(float)y outZ:(float*)z;
-(void)_makeShadowTextureWithVectorTile:(id)vectorTile skipLandmarks:(BOOL)landmarks pointyFootprints:(const unordered_map<unsigned int, std::__1::vector<GEOVectorTilePoint, vk_allocator<GEOVectorTilePoint>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, std::__1::vector<GEOVectorTilePoint, vk_allocator<GEOVectorTilePoint>>>> >*)footprints;
-(BOOL)_makeThreeDBuildingsMesh;
-(void)_makeMeshesWithLandmarksPresent:(BOOL)landmarksPresent makeFacades:(BOOL)facades pointyFootprints:(unordered_map<unsigned int, std::__1::vector<GEOVectorTilePoint, vk_allocator<GEOVectorTilePoint>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, std::__1::vector<GEOVectorTilePoint, vk_allocator<GEOVectorTilePoint>>>> >*)footprints;
-(void)_makeFootprintsMesh;
-(void)dealloc;
-(id)initWithVectorTile:(id)vectorTile stylesheet:(id)stylesheet makeFacades:(BOOL)facades;
// declared property getter: -(const XXStruct_$zuyAD*)shadowTextureMatrix;
// declared property getter: -(id)shadowTexture;
// declared property getter: -(id)pointyBuildingsMesh;
-(const vector<std::__1::vector<VGLSingleTexturedGroupCullableMesh* , vk_allocator<VGLSingleTexturedGroupCullableMesh* >>, vk_allocator<std::__1::vector<VGLSingleTexturedGroupCullableMesh* , vk_allocator<VGLSingleTexturedGroupCullableMesh* >>> >*)facadeCollectionsWithVectorType:(int)vectorType;
-(const vector<VGLGroupCullableMesh* , vk_allocator<VGLGroupCullableMesh* > >*)topMeshesWithVectorType:(int)vectorType;
// declared property getter: -(id)footprintsMesh;
@end

