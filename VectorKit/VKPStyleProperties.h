/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "VectorKit-Structs.h"

@class NSString, VKPTrafficStyle;

__attribute__((visibility("hidden")))
@interface VKPStyleProperties : XXUnknownSuperclass {
@private
	XXStruct_Dp6gGD _dropShadowOffsets;
	XXStruct_Dp6gGD _fillDashPatterns;
	XXStruct_Dp6gGD _genericShieldDropShadowOffsets;
	XXStruct_stqouA _labelIconGradients;
	XXStruct_Dp6gGD _strokeDashPatterns;
	float _arrowHeight;
	float _arrowHeightLarge;
	float _arrowHeightMedium;
	float _arrowHeightSmall;
	float _arrowSpacing;
	unsigned _buildingFacadeColor;
	unsigned _buildingFlatColor;
	unsigned _buildingLandmarkColor;
	unsigned _buildingOutlineColor;
	int _buildingRoofStyle;
	unsigned _buildingTopColor;
	unsigned _casingsColor;
	float _casingsHeight;
	float _casingsShadowRamp;
	float _casingsShadowWidth;
	float _casingsStrokeColor;
	float _casingsStrokeWidth;
	float _casingsWidth;
	unsigned _dropShadowColor;
	unsigned _fancyCasingsColor;
	unsigned _fancyCasingsStrokeColor;
	float _fancyCasingsStrokeWidth;
	float _fancyCasingsWidth;
	unsigned _fillColor;
	NSString* _fillTexture;
	int _fillTextureBlendMode;
	float _fillTextureOpacity;
	unsigned _fillZIndex;
	unsigned _genericShieldBackgroundColor;
	unsigned _genericShieldBorderColor;
	unsigned _genericShieldDropShadowColor;
	float _genericShieldDropShadowSize;
	unsigned _genericShieldHaloColor;
	float _genericShieldHaloSize;
	int _genericShieldStyle;
	unsigned _genericShieldTextColor;
	float _insetShadowAngle;
	unsigned _insetShadowColor;
	float _insetShadowHeight;
	unsigned _labelColor;
	unsigned _labelDedupeRank;
	float _labelFontExpansion;
	float _labelFontExpansionLarge;
	float _labelFontExpansionMedium;
	float _labelFontExpansionSmall;
	NSString* _labelFontFamily;
	unsigned _labelHaloColor;
	float _labelHaloSize;
	float _labelHaloSizeLarge;
	float _labelHaloSizeMedium;
	float _labelHaloSizeSmall;
	float _labelHeight;
	int _labelHeightCurve;
	float _labelHeightCurveLimit;
	float _labelHeightLarge;
	int _labelHeightLargeCurve;
	float _labelHeightLargeCurveLimit;
	float _labelHeightMedium;
	int _labelHeightMediumCurve;
	float _labelHeightMediumCurveLimit;
	float _labelHeightSmall;
	int _labelHeightSmallCurve;
	float _labelHeightSmallCurveLimit;
	NSString* _labelIcon;
	unsigned _labelIconBadgeColor;
	unsigned _labelIconGlyphColor;
	unsigned _labelIconHaloColor;
	int _labelIconStyle;
	unsigned _labelLineWrap;
	float _labelRoadRank;
	NSString* _labelShield;
	float _labelShieldRank;
	float _labelSpacing;
	float _labelSpacingLarge;
	float _labelSpacingMedium;
	float _labelSpacingSmall;
	int _labelTextVisibility;
	float _labelTiltLimit;
	float _layerShadowsRamp;
	float _layerShadowsTaper;
	float _layerShadowsWidth;
	int _lineDrawStyle;
	unsigned _outerStrokeColor;
	float _outerStrokeWidth;
	int _polygonType;
	NSString* _secondFillTexture;
	int _secondFillTextureBlendMode;
	float _secondFillTextureOpacity;
	float _shieldTiltLimit;
	unsigned _strokeColor;
	float _strokeWidth;
	int _strokeWidthCurve;
	float _strokeWidthCurveLimit;
	NSString* _thirdFillTexture;
	int _thirdFillTextureBlendMode;
	float _thirdFillTextureOpacity;
	VKPTrafficStyle* _trafficClosed;
	VKPTrafficStyle* _trafficFast;
	VKPTrafficStyle* _trafficMedium;
	VKPTrafficStyle* _trafficSlow;
	float _width;
	int _widthCurve;
	float _widthCurveLimit;
	float _widthDropoff;
	unsigned _zIndex;
	BOOL _arrowVisible;
	BOOL _buildingOutlineVisible;
	BOOL _casingsVisible;
	BOOL _fancyCasingsVisible;
	BOOL _fillColorInterpolate;
	BOOL _labelRaisedInitial;
	BOOL _labelSmallCaps;
	BOOL _labelUpcase;
	BOOL _layerShadowsVisible;
	BOOL _onlyShowIfTappable;
	BOOL _shieldVisible;
	BOOL _showShieldTextAsLabel;
	BOOL _simpleLine;
	BOOL _strokeColorInterpolate;
	BOOL _trafficVisible;
	BOOL _visible;
	BOOL _yieldsToOnscreenLabels;
	struct {
		unsigned arrowHeight : 1;
		unsigned arrowHeightLarge : 1;
		unsigned arrowHeightMedium : 1;
		unsigned arrowHeightSmall : 1;
		unsigned arrowSpacing : 1;
		unsigned buildingFacadeColor : 1;
		unsigned buildingFlatColor : 1;
		unsigned buildingLandmarkColor : 1;
		unsigned buildingOutlineColor : 1;
		unsigned buildingRoofStyle : 1;
		unsigned buildingTopColor : 1;
		unsigned casingsColor : 1;
		unsigned casingsHeight : 1;
		unsigned casingsShadowRamp : 1;
		unsigned casingsShadowWidth : 1;
		unsigned casingsStrokeColor : 1;
		unsigned casingsStrokeWidth : 1;
		unsigned casingsWidth : 1;
		unsigned dropShadowColor : 1;
		unsigned fancyCasingsColor : 1;
		unsigned fancyCasingsStrokeColor : 1;
		unsigned fancyCasingsStrokeWidth : 1;
		unsigned fancyCasingsWidth : 1;
		unsigned fillColor : 1;
		unsigned fillTextureBlendMode : 1;
		unsigned fillTextureOpacity : 1;
		unsigned fillZIndex : 1;
		unsigned genericShieldBackgroundColor : 1;
		unsigned genericShieldBorderColor : 1;
		unsigned genericShieldDropShadowColor : 1;
		unsigned genericShieldDropShadowSize : 1;
		unsigned genericShieldHaloColor : 1;
		unsigned genericShieldHaloSize : 1;
		unsigned genericShieldStyle : 1;
		unsigned genericShieldTextColor : 1;
		unsigned insetShadowAngle : 1;
		unsigned insetShadowColor : 1;
		unsigned insetShadowHeight : 1;
		unsigned labelColor : 1;
		unsigned labelDedupeRank : 1;
		unsigned labelFontExpansion : 1;
		unsigned labelFontExpansionLarge : 1;
		unsigned labelFontExpansionMedium : 1;
		unsigned labelFontExpansionSmall : 1;
		unsigned labelHaloColor : 1;
		unsigned labelHaloSize : 1;
		unsigned labelHaloSizeLarge : 1;
		unsigned labelHaloSizeMedium : 1;
		unsigned labelHaloSizeSmall : 1;
		unsigned labelHeight : 1;
		unsigned labelHeightCurve : 1;
		unsigned labelHeightCurveLimit : 1;
		unsigned labelHeightLarge : 1;
		unsigned labelHeightLargeCurve : 1;
		unsigned labelHeightLargeCurveLimit : 1;
		unsigned labelHeightMedium : 1;
		unsigned labelHeightMediumCurve : 1;
		unsigned labelHeightMediumCurveLimit : 1;
		unsigned labelHeightSmall : 1;
		unsigned labelHeightSmallCurve : 1;
		unsigned labelHeightSmallCurveLimit : 1;
		unsigned labelIconBadgeColor : 1;
		unsigned labelIconGlyphColor : 1;
		unsigned labelIconHaloColor : 1;
		unsigned labelIconStyle : 1;
		unsigned labelLineWrap : 1;
		unsigned labelRoadRank : 1;
		unsigned labelShieldRank : 1;
		unsigned labelSpacing : 1;
		unsigned labelSpacingLarge : 1;
		unsigned labelSpacingMedium : 1;
		unsigned labelSpacingSmall : 1;
		unsigned labelTextVisibility : 1;
		unsigned labelTiltLimit : 1;
		unsigned layerShadowsRamp : 1;
		unsigned layerShadowsTaper : 1;
		unsigned layerShadowsWidth : 1;
		unsigned lineDrawStyle : 1;
		unsigned outerStrokeColor : 1;
		unsigned outerStrokeWidth : 1;
		unsigned polygonType : 1;
		unsigned secondFillTextureBlendMode : 1;
		unsigned secondFillTextureOpacity : 1;
		unsigned shieldTiltLimit : 1;
		unsigned strokeColor : 1;
		unsigned strokeWidth : 1;
		unsigned strokeWidthCurve : 1;
		unsigned strokeWidthCurveLimit : 1;
		unsigned thirdFillTextureBlendMode : 1;
		unsigned thirdFillTextureOpacity : 1;
		unsigned width : 1;
		unsigned widthCurve : 1;
		unsigned widthCurveLimit : 1;
		unsigned widthDropoff : 1;
		unsigned zIndex : 1;
		unsigned arrowVisible : 1;
		unsigned buildingOutlineVisible : 1;
		unsigned casingsVisible : 1;
		unsigned fancyCasingsVisible : 1;
		unsigned fillColorInterpolate : 1;
		unsigned labelRaisedInitial : 1;
		unsigned labelSmallCaps : 1;
		unsigned labelUpcase : 1;
		unsigned layerShadowsVisible : 1;
		unsigned onlyShowIfTappable : 1;
		unsigned shieldVisible : 1;
		unsigned showShieldTextAsLabel : 1;
		unsigned simpleLine : 1;
		unsigned strokeColorInterpolate : 1;
		unsigned trafficVisible : 1;
		unsigned visible : 1;
		unsigned yieldsToOnscreenLabels : 1;
	} _has;
}
@property(assign, nonatomic) float arrowHeightLarge;	// @synthesize=_arrowHeightLarge
@property(assign, nonatomic) BOOL hasArrowHeightLarge;
@property(assign, nonatomic) float arrowHeightMedium;	// @synthesize=_arrowHeightMedium
@property(assign, nonatomic) BOOL hasArrowHeightMedium;
@property(assign, nonatomic) float arrowHeightSmall;	// @synthesize=_arrowHeightSmall
@property(assign, nonatomic) BOOL hasArrowHeightSmall;
@property(assign, nonatomic) float labelSpacingLarge;	// @synthesize=_labelSpacingLarge
@property(assign, nonatomic) BOOL hasLabelSpacingLarge;
@property(assign, nonatomic) float labelSpacingMedium;	// @synthesize=_labelSpacingMedium
@property(assign, nonatomic) BOOL hasLabelSpacingMedium;
@property(assign, nonatomic) float labelSpacingSmall;	// @synthesize=_labelSpacingSmall
@property(assign, nonatomic) BOOL hasLabelSpacingSmall;
@property(assign, nonatomic) float labelFontExpansionLarge;	// @synthesize=_labelFontExpansionLarge
@property(assign, nonatomic) BOOL hasLabelFontExpansionLarge;
@property(assign, nonatomic) float labelFontExpansionMedium;	// @synthesize=_labelFontExpansionMedium
@property(assign, nonatomic) BOOL hasLabelFontExpansionMedium;
@property(assign, nonatomic) float labelFontExpansionSmall;	// @synthesize=_labelFontExpansionSmall
@property(assign, nonatomic) BOOL hasLabelFontExpansionSmall;
@property(assign, nonatomic) float labelHaloSizeLarge;	// @synthesize=_labelHaloSizeLarge
@property(assign, nonatomic) BOOL hasLabelHaloSizeLarge;
@property(assign, nonatomic) float labelHaloSizeMedium;	// @synthesize=_labelHaloSizeMedium
@property(assign, nonatomic) BOOL hasLabelHaloSizeMedium;
@property(assign, nonatomic) float labelHaloSizeSmall;	// @synthesize=_labelHaloSizeSmall
@property(assign, nonatomic) BOOL hasLabelHaloSizeSmall;
@property(assign, nonatomic) float labelHeightLargeCurveLimit;	// @synthesize=_labelHeightLargeCurveLimit
@property(assign, nonatomic) BOOL hasLabelHeightLargeCurveLimit;
@property(assign, nonatomic) int labelHeightLargeCurve;	// @synthesize=_labelHeightLargeCurve
@property(assign, nonatomic) BOOL hasLabelHeightLargeCurve;
@property(assign, nonatomic) float labelHeightLarge;	// @synthesize=_labelHeightLarge
@property(assign, nonatomic) BOOL hasLabelHeightLarge;
@property(assign, nonatomic) float labelHeightMediumCurveLimit;	// @synthesize=_labelHeightMediumCurveLimit
@property(assign, nonatomic) BOOL hasLabelHeightMediumCurveLimit;
@property(assign, nonatomic) int labelHeightMediumCurve;	// @synthesize=_labelHeightMediumCurve
@property(assign, nonatomic) BOOL hasLabelHeightMediumCurve;
@property(assign, nonatomic) float labelHeightMedium;	// @synthesize=_labelHeightMedium
@property(assign, nonatomic) BOOL hasLabelHeightMedium;
@property(assign, nonatomic) float labelHeightSmallCurveLimit;	// @synthesize=_labelHeightSmallCurveLimit
@property(assign, nonatomic) BOOL hasLabelHeightSmallCurveLimit;
@property(assign, nonatomic) int labelHeightSmallCurve;	// @synthesize=_labelHeightSmallCurve
@property(assign, nonatomic) BOOL hasLabelHeightSmallCurve;
@property(assign, nonatomic) float labelHeightSmall;	// @synthesize=_labelHeightSmall
@property(assign, nonatomic) BOOL hasLabelHeightSmall;
@property(assign, nonatomic) BOOL showShieldTextAsLabel;	// @synthesize=_showShieldTextAsLabel
@property(assign, nonatomic) BOOL hasShowShieldTextAsLabel;
@property(assign, nonatomic) unsigned genericShieldDropShadowColor;	// @synthesize=_genericShieldDropShadowColor
@property(assign, nonatomic) BOOL hasGenericShieldDropShadowColor;
@property(assign, nonatomic) float genericShieldDropShadowSize;	// @synthesize=_genericShieldDropShadowSize
@property(assign, nonatomic) BOOL hasGenericShieldDropShadowSize;
@property(readonly, assign, nonatomic) float* genericShieldDropShadowOffsets;
@property(readonly, assign, nonatomic) unsigned genericShieldDropShadowOffsetsCount;
@property(assign, nonatomic) unsigned genericShieldHaloColor;	// @synthesize=_genericShieldHaloColor
@property(assign, nonatomic) BOOL hasGenericShieldHaloColor;
@property(assign, nonatomic) float genericShieldHaloSize;	// @synthesize=_genericShieldHaloSize
@property(assign, nonatomic) BOOL hasGenericShieldHaloSize;
@property(assign, nonatomic) unsigned genericShieldTextColor;	// @synthesize=_genericShieldTextColor
@property(assign, nonatomic) BOOL hasGenericShieldTextColor;
@property(assign, nonatomic) unsigned genericShieldBorderColor;	// @synthesize=_genericShieldBorderColor
@property(assign, nonatomic) BOOL hasGenericShieldBorderColor;
@property(assign, nonatomic) unsigned genericShieldBackgroundColor;	// @synthesize=_genericShieldBackgroundColor
@property(assign, nonatomic) BOOL hasGenericShieldBackgroundColor;
@property(assign, nonatomic) int genericShieldStyle;	// @synthesize=_genericShieldStyle
@property(assign, nonatomic) BOOL hasGenericShieldStyle;
@property(assign, nonatomic) float layerShadowsTaper;	// @synthesize=_layerShadowsTaper
@property(assign, nonatomic) BOOL hasLayerShadowsTaper;
@property(assign, nonatomic) float layerShadowsRamp;	// @synthesize=_layerShadowsRamp
@property(assign, nonatomic) BOOL hasLayerShadowsRamp;
@property(assign, nonatomic) float layerShadowsWidth;	// @synthesize=_layerShadowsWidth
@property(assign, nonatomic) BOOL hasLayerShadowsWidth;
@property(assign, nonatomic) BOOL layerShadowsVisible;	// @synthesize=_layerShadowsVisible
@property(assign, nonatomic) BOOL hasLayerShadowsVisible;
@property(assign, nonatomic) float fancyCasingsStrokeWidth;	// @synthesize=_fancyCasingsStrokeWidth
@property(assign, nonatomic) BOOL hasFancyCasingsStrokeWidth;
@property(assign, nonatomic) unsigned fancyCasingsStrokeColor;	// @synthesize=_fancyCasingsStrokeColor
@property(assign, nonatomic) BOOL hasFancyCasingsStrokeColor;
@property(assign, nonatomic) float fancyCasingsWidth;	// @synthesize=_fancyCasingsWidth
@property(assign, nonatomic) BOOL hasFancyCasingsWidth;
@property(assign, nonatomic) unsigned fancyCasingsColor;	// @synthesize=_fancyCasingsColor
@property(assign, nonatomic) BOOL hasFancyCasingsColor;
@property(assign, nonatomic) BOOL fancyCasingsVisible;	// @synthesize=_fancyCasingsVisible
@property(assign, nonatomic) BOOL hasFancyCasingsVisible;
@property(assign, nonatomic) float casingsShadowWidth;	// @synthesize=_casingsShadowWidth
@property(assign, nonatomic) BOOL hasCasingsShadowWidth;
@property(assign, nonatomic) float casingsShadowRamp;	// @synthesize=_casingsShadowRamp
@property(assign, nonatomic) BOOL hasCasingsShadowRamp;
@property(assign, nonatomic) float casingsStrokeWidth;	// @synthesize=_casingsStrokeWidth
@property(assign, nonatomic) BOOL hasCasingsStrokeWidth;
@property(assign, nonatomic) float casingsStrokeColor;	// @synthesize=_casingsStrokeColor
@property(assign, nonatomic) BOOL hasCasingsStrokeColor;
@property(assign, nonatomic) float casingsHeight;	// @synthesize=_casingsHeight
@property(assign, nonatomic) BOOL hasCasingsHeight;
@property(assign, nonatomic) float casingsWidth;	// @synthesize=_casingsWidth
@property(assign, nonatomic) BOOL hasCasingsWidth;
@property(assign, nonatomic) unsigned casingsColor;	// @synthesize=_casingsColor
@property(assign, nonatomic) BOOL hasCasingsColor;
@property(assign, nonatomic) BOOL casingsVisible;	// @synthesize=_casingsVisible
@property(assign, nonatomic) BOOL hasCasingsVisible;
@property(assign, nonatomic) int thirdFillTextureBlendMode;	// @synthesize=_thirdFillTextureBlendMode
@property(assign, nonatomic) BOOL hasThirdFillTextureBlendMode;
@property(assign, nonatomic) float thirdFillTextureOpacity;	// @synthesize=_thirdFillTextureOpacity
@property(assign, nonatomic) BOOL hasThirdFillTextureOpacity;
@property(retain, nonatomic) NSString* thirdFillTexture;	// @synthesize=_thirdFillTexture
@property(readonly, assign, nonatomic) BOOL hasThirdFillTexture;
@property(assign, nonatomic) int secondFillTextureBlendMode;	// @synthesize=_secondFillTextureBlendMode
@property(assign, nonatomic) BOOL hasSecondFillTextureBlendMode;
@property(assign, nonatomic) float secondFillTextureOpacity;	// @synthesize=_secondFillTextureOpacity
@property(assign, nonatomic) BOOL hasSecondFillTextureOpacity;
@property(retain, nonatomic) NSString* secondFillTexture;	// @synthesize=_secondFillTexture
@property(readonly, assign, nonatomic) BOOL hasSecondFillTexture;
@property(assign, nonatomic) int fillTextureBlendMode;	// @synthesize=_fillTextureBlendMode
@property(assign, nonatomic) BOOL hasFillTextureBlendMode;
@property(assign, nonatomic) float fillTextureOpacity;	// @synthesize=_fillTextureOpacity
@property(assign, nonatomic) BOOL hasFillTextureOpacity;
@property(assign, nonatomic) float outerStrokeWidth;	// @synthesize=_outerStrokeWidth
@property(assign, nonatomic) BOOL hasOuterStrokeWidth;
@property(assign, nonatomic) unsigned outerStrokeColor;	// @synthesize=_outerStrokeColor
@property(assign, nonatomic) BOOL hasOuterStrokeColor;
@property(assign, nonatomic) unsigned labelIconHaloColor;	// @synthesize=_labelIconHaloColor
@property(assign, nonatomic) BOOL hasLabelIconHaloColor;
@property(assign, nonatomic) unsigned labelIconGlyphColor;	// @synthesize=_labelIconGlyphColor
@property(assign, nonatomic) BOOL hasLabelIconGlyphColor;
@property(readonly, assign, nonatomic) unsigned* labelIconGradients;
@property(readonly, assign, nonatomic) unsigned labelIconGradientsCount;
@property(assign, nonatomic) unsigned labelIconBadgeColor;	// @synthesize=_labelIconBadgeColor
@property(assign, nonatomic) BOOL hasLabelIconBadgeColor;
@property(assign, nonatomic) int labelIconStyle;	// @synthesize=_labelIconStyle
@property(assign, nonatomic) BOOL hasLabelIconStyle;
@property(assign, nonatomic) int lineDrawStyle;	// @synthesize=_lineDrawStyle
@property(assign, nonatomic) BOOL hasLineDrawStyle;
@property(retain, nonatomic) VKPTrafficStyle* trafficFast;	// @synthesize=_trafficFast
@property(readonly, assign, nonatomic) BOOL hasTrafficFast;
@property(retain, nonatomic) VKPTrafficStyle* trafficMedium;	// @synthesize=_trafficMedium
@property(readonly, assign, nonatomic) BOOL hasTrafficMedium;
@property(retain, nonatomic) VKPTrafficStyle* trafficSlow;	// @synthesize=_trafficSlow
@property(readonly, assign, nonatomic) BOOL hasTrafficSlow;
@property(retain, nonatomic) VKPTrafficStyle* trafficClosed;	// @synthesize=_trafficClosed
@property(readonly, assign, nonatomic) BOOL hasTrafficClosed;
@property(assign, nonatomic) BOOL trafficVisible;	// @synthesize=_trafficVisible
@property(assign, nonatomic) BOOL hasTrafficVisible;
@property(assign, nonatomic) unsigned buildingFlatColor;	// @synthesize=_buildingFlatColor
@property(assign, nonatomic) BOOL hasBuildingFlatColor;
@property(assign, nonatomic) unsigned buildingLandmarkColor;	// @synthesize=_buildingLandmarkColor
@property(assign, nonatomic) BOOL hasBuildingLandmarkColor;
@property(assign, nonatomic) int buildingRoofStyle;	// @synthesize=_buildingRoofStyle
@property(assign, nonatomic) BOOL hasBuildingRoofStyle;
@property(assign, nonatomic) BOOL buildingOutlineVisible;	// @synthesize=_buildingOutlineVisible
@property(assign, nonatomic) BOOL hasBuildingOutlineVisible;
@property(assign, nonatomic) unsigned buildingOutlineColor;	// @synthesize=_buildingOutlineColor
@property(assign, nonatomic) BOOL hasBuildingOutlineColor;
@property(assign, nonatomic) unsigned buildingFacadeColor;	// @synthesize=_buildingFacadeColor
@property(assign, nonatomic) BOOL hasBuildingFacadeColor;
@property(assign, nonatomic) unsigned buildingTopColor;	// @synthesize=_buildingTopColor
@property(assign, nonatomic) BOOL hasBuildingTopColor;
@property(readonly, assign, nonatomic) float* strokeDashPatterns;
@property(readonly, assign, nonatomic) unsigned strokeDashPatternsCount;
@property(readonly, assign, nonatomic) float* fillDashPatterns;
@property(readonly, assign, nonatomic) unsigned fillDashPatternsCount;
@property(assign, nonatomic) unsigned dropShadowColor;	// @synthesize=_dropShadowColor
@property(assign, nonatomic) BOOL hasDropShadowColor;
@property(readonly, assign, nonatomic) float* dropShadowOffsets;
@property(readonly, assign, nonatomic) unsigned dropShadowOffsetsCount;
@property(assign, nonatomic) unsigned insetShadowColor;	// @synthesize=_insetShadowColor
@property(assign, nonatomic) BOOL hasInsetShadowColor;
@property(assign, nonatomic) float insetShadowAngle;	// @synthesize=_insetShadowAngle
@property(assign, nonatomic) BOOL hasInsetShadowAngle;
@property(assign, nonatomic) float insetShadowHeight;	// @synthesize=_insetShadowHeight
@property(assign, nonatomic) BOOL hasInsetShadowHeight;
@property(assign, nonatomic) int polygonType;	// @synthesize=_polygonType
@property(assign, nonatomic) BOOL hasPolygonType;
@property(retain, nonatomic) NSString* fillTexture;	// @synthesize=_fillTexture
@property(readonly, assign, nonatomic) BOOL hasFillTexture;
@property(assign, nonatomic) float arrowSpacing;	// @synthesize=_arrowSpacing
@property(assign, nonatomic) BOOL hasArrowSpacing;
@property(assign, nonatomic) float arrowHeight;	// @synthesize=_arrowHeight
@property(assign, nonatomic) BOOL hasArrowHeight;
@property(assign, nonatomic) BOOL arrowVisible;	// @synthesize=_arrowVisible
@property(assign, nonatomic) BOOL hasArrowVisible;
@property(assign, nonatomic) float shieldTiltLimit;	// @synthesize=_shieldTiltLimit
@property(assign, nonatomic) BOOL hasShieldTiltLimit;
@property(assign, nonatomic) BOOL shieldVisible;	// @synthesize=_shieldVisible
@property(assign, nonatomic) BOOL hasShieldVisible;
@property(assign, nonatomic) BOOL yieldsToOnscreenLabels;	// @synthesize=_yieldsToOnscreenLabels
@property(assign, nonatomic) BOOL hasYieldsToOnscreenLabels;
@property(assign, nonatomic) unsigned labelDedupeRank;	// @synthesize=_labelDedupeRank
@property(assign, nonatomic) BOOL hasLabelDedupeRank;
@property(assign, nonatomic) BOOL onlyShowIfTappable;	// @synthesize=_onlyShowIfTappable
@property(assign, nonatomic) BOOL hasOnlyShowIfTappable;
@property(assign, nonatomic) int labelTextVisibility;	// @synthesize=_labelTextVisibility
@property(assign, nonatomic) BOOL hasLabelTextVisibility;
@property(assign, nonatomic) float labelSpacing;	// @synthesize=_labelSpacing
@property(assign, nonatomic) BOOL hasLabelSpacing;
@property(assign, nonatomic) float labelShieldRank;	// @synthesize=_labelShieldRank
@property(assign, nonatomic) BOOL hasLabelShieldRank;
@property(assign, nonatomic) float labelRoadRank;	// @synthesize=_labelRoadRank
@property(assign, nonatomic) BOOL hasLabelRoadRank;
@property(assign, nonatomic) float labelFontExpansion;	// @synthesize=_labelFontExpansion
@property(assign, nonatomic) BOOL hasLabelFontExpansion;
@property(assign, nonatomic) float labelTiltLimit;	// @synthesize=_labelTiltLimit
@property(assign, nonatomic) BOOL hasLabelTiltLimit;
@property(assign, nonatomic) BOOL labelSmallCaps;	// @synthesize=_labelSmallCaps
@property(assign, nonatomic) BOOL hasLabelSmallCaps;
@property(retain, nonatomic) NSString* labelShield;	// @synthesize=_labelShield
@property(readonly, assign, nonatomic) BOOL hasLabelShield;
@property(assign, nonatomic) unsigned labelHaloColor;	// @synthesize=_labelHaloColor
@property(assign, nonatomic) BOOL hasLabelHaloColor;
@property(assign, nonatomic) unsigned labelColor;	// @synthesize=_labelColor
@property(assign, nonatomic) BOOL hasLabelColor;
@property(retain, nonatomic) NSString* labelFontFamily;	// @synthesize=_labelFontFamily
@property(readonly, assign, nonatomic) BOOL hasLabelFontFamily;
@property(retain, nonatomic) NSString* labelIcon;	// @synthesize=_labelIcon
@property(readonly, assign, nonatomic) BOOL hasLabelIcon;
@property(assign, nonatomic) unsigned labelLineWrap;	// @synthesize=_labelLineWrap
@property(assign, nonatomic) BOOL hasLabelLineWrap;
@property(assign, nonatomic) BOOL labelUpcase;	// @synthesize=_labelUpcase
@property(assign, nonatomic) BOOL hasLabelUpcase;
@property(assign, nonatomic) BOOL labelRaisedInitial;	// @synthesize=_labelRaisedInitial
@property(assign, nonatomic) BOOL hasLabelRaisedInitial;
@property(assign, nonatomic) float labelHaloSize;	// @synthesize=_labelHaloSize
@property(assign, nonatomic) BOOL hasLabelHaloSize;
@property(assign, nonatomic) BOOL fillColorInterpolate;	// @synthesize=_fillColorInterpolate
@property(assign, nonatomic) BOOL hasFillColorInterpolate;
@property(assign, nonatomic) BOOL strokeColorInterpolate;	// @synthesize=_strokeColorInterpolate
@property(assign, nonatomic) BOOL hasStrokeColorInterpolate;
@property(assign, nonatomic) unsigned fillZIndex;	// @synthesize=_fillZIndex
@property(assign, nonatomic) BOOL hasFillZIndex;
@property(assign, nonatomic) BOOL simpleLine;	// @synthesize=_simpleLine
@property(assign, nonatomic) BOOL hasSimpleLine;
@property(assign, nonatomic) unsigned zIndex;	// @synthesize=_zIndex
@property(assign, nonatomic) BOOL hasZIndex;
@property(assign, nonatomic) float widthDropoff;	// @synthesize=_widthDropoff
@property(assign, nonatomic) BOOL hasWidthDropoff;
@property(assign, nonatomic) float labelHeightCurveLimit;	// @synthesize=_labelHeightCurveLimit
@property(assign, nonatomic) BOOL hasLabelHeightCurveLimit;
@property(assign, nonatomic) int labelHeightCurve;	// @synthesize=_labelHeightCurve
@property(assign, nonatomic) BOOL hasLabelHeightCurve;
@property(assign, nonatomic) float labelHeight;	// @synthesize=_labelHeight
@property(assign, nonatomic) BOOL hasLabelHeight;
@property(assign, nonatomic) float strokeWidthCurveLimit;	// @synthesize=_strokeWidthCurveLimit
@property(assign, nonatomic) BOOL hasStrokeWidthCurveLimit;
@property(assign, nonatomic) int strokeWidthCurve;	// @synthesize=_strokeWidthCurve
@property(assign, nonatomic) BOOL hasStrokeWidthCurve;
@property(assign, nonatomic) float strokeWidth;	// @synthesize=_strokeWidth
@property(assign, nonatomic) BOOL hasStrokeWidth;
@property(assign, nonatomic) float widthCurveLimit;	// @synthesize=_widthCurveLimit
@property(assign, nonatomic) BOOL hasWidthCurveLimit;
@property(assign, nonatomic) int widthCurve;	// @synthesize=_widthCurve
@property(assign, nonatomic) BOOL hasWidthCurve;
@property(assign, nonatomic) float width;	// @synthesize=_width
@property(assign, nonatomic) BOOL hasWidth;
@property(assign, nonatomic) unsigned strokeColor;	// @synthesize=_strokeColor
@property(assign, nonatomic) BOOL hasStrokeColor;
@property(assign, nonatomic) unsigned fillColor;	// @synthesize=_fillColor
@property(assign, nonatomic) BOOL hasFillColor;
@property(assign, nonatomic) BOOL visible;	// @synthesize=_visible
@property(assign, nonatomic) BOOL hasVisible;
// declared property getter: -(float)arrowHeightLarge;
// declared property getter: -(float)arrowHeightMedium;
// declared property getter: -(float)arrowHeightSmall;
// declared property getter: -(float)labelSpacingLarge;
// declared property getter: -(float)labelSpacingMedium;
// declared property getter: -(float)labelSpacingSmall;
// declared property getter: -(float)labelFontExpansionLarge;
// declared property getter: -(float)labelFontExpansionMedium;
// declared property getter: -(float)labelFontExpansionSmall;
// declared property getter: -(float)labelHaloSizeLarge;
// declared property getter: -(float)labelHaloSizeMedium;
// declared property getter: -(float)labelHaloSizeSmall;
// declared property getter: -(float)labelHeightLargeCurveLimit;
// declared property getter: -(int)labelHeightLargeCurve;
// declared property getter: -(float)labelHeightLarge;
// declared property getter: -(float)labelHeightMediumCurveLimit;
// declared property getter: -(int)labelHeightMediumCurve;
// declared property getter: -(float)labelHeightMedium;
// declared property getter: -(float)labelHeightSmallCurveLimit;
// declared property getter: -(int)labelHeightSmallCurve;
// declared property getter: -(float)labelHeightSmall;
// declared property getter: -(BOOL)showShieldTextAsLabel;
// declared property getter: -(float)genericShieldDropShadowSize;
// declared property getter: -(unsigned)genericShieldHaloColor;
// declared property getter: -(float)genericShieldHaloSize;
// declared property getter: -(float)layerShadowsTaper;
// declared property getter: -(float)layerShadowsRamp;
// declared property getter: -(float)layerShadowsWidth;
// declared property getter: -(float)fancyCasingsStrokeWidth;
// declared property getter: -(float)fancyCasingsWidth;
// declared property getter: -(float)casingsShadowWidth;
// declared property getter: -(float)casingsShadowRamp;
// declared property getter: -(float)casingsStrokeWidth;
// declared property getter: -(float)casingsStrokeColor;
// declared property getter: -(float)casingsHeight;
// declared property getter: -(float)casingsWidth;
// declared property getter: -(int)thirdFillTextureBlendMode;
// declared property getter: -(float)thirdFillTextureOpacity;
// declared property setter: -(void)setThirdFillTexture:(id)texture;
// declared property getter: -(id)thirdFillTexture;
// declared property getter: -(int)secondFillTextureBlendMode;
// declared property getter: -(float)secondFillTextureOpacity;
// declared property setter: -(void)setSecondFillTexture:(id)texture;
// declared property getter: -(id)secondFillTexture;
// declared property getter: -(int)fillTextureBlendMode;
// declared property getter: -(float)fillTextureOpacity;
// declared property getter: -(float)outerStrokeWidth;
// declared property getter: -(unsigned)outerStrokeColor;
// declared property getter: -(unsigned)labelIconHaloColor;
// declared property setter: -(void)setTrafficFast:(id)fast;
// declared property getter: -(id)trafficFast;
// declared property setter: -(void)setTrafficMedium:(id)medium;
// declared property getter: -(id)trafficMedium;
// declared property setter: -(void)setTrafficSlow:(id)slow;
// declared property getter: -(id)trafficSlow;
// declared property setter: -(void)setTrafficClosed:(id)closed;
// declared property getter: -(id)trafficClosed;
// declared property getter: -(float)insetShadowAngle;
// declared property getter: -(float)insetShadowHeight;
// declared property getter: -(int)polygonType;
// declared property setter: -(void)setFillTexture:(id)texture;
// declared property getter: -(id)fillTexture;
// declared property getter: -(BOOL)arrowVisible;
// declared property getter: -(float)shieldTiltLimit;
// declared property getter: -(BOOL)shieldVisible;
// declared property getter: -(float)labelShieldRank;
// declared property getter: -(float)labelRoadRank;
// declared property getter: -(float)labelFontExpansion;
// declared property getter: -(float)labelTiltLimit;
// declared property getter: -(BOOL)labelSmallCaps;
// declared property setter: -(void)setLabelShield:(id)shield;
// declared property getter: -(id)labelShield;
// declared property setter: -(void)setLabelFontFamily:(id)family;
// declared property getter: -(id)labelFontFamily;
// declared property setter: -(void)setLabelIcon:(id)icon;
// declared property getter: -(id)labelIcon;
// declared property getter: -(float)labelHaloSize;
// declared property getter: -(unsigned)fillZIndex;
// declared property getter: -(unsigned)zIndex;
// declared property getter: -(float)widthDropoff;
// declared property getter: -(float)labelHeightCurveLimit;
// declared property getter: -(int)labelHeightCurve;
// declared property getter: -(float)labelHeight;
// declared property getter: -(float)strokeWidthCurveLimit;
// declared property getter: -(int)strokeWidthCurve;
// declared property getter: -(float)strokeWidth;
// declared property getter: -(float)widthCurveLimit;
// declared property getter: -(int)widthCurve;
// declared property getter: -(float)width;
// declared property getter: -(BOOL)visible;
-(unsigned)hash;
-(BOOL)isEqual:(id)equal;
-(void)copyTo:(id)to;
-(void)writeTo:(id)to;
-(BOOL)readFrom:(id)from;
-(id)dictionaryRepresentation;
-(id)description;
// declared property getter: -(BOOL)hasArrowHeightLarge;
// declared property setter: -(void)setHasArrowHeightLarge:(BOOL)large;
// declared property setter: -(void)setArrowHeightLarge:(float)large;
// declared property getter: -(BOOL)hasArrowHeightMedium;
// declared property setter: -(void)setHasArrowHeightMedium:(BOOL)medium;
// declared property setter: -(void)setArrowHeightMedium:(float)medium;
// declared property getter: -(BOOL)hasArrowHeightSmall;
// declared property setter: -(void)setHasArrowHeightSmall:(BOOL)small;
// declared property setter: -(void)setArrowHeightSmall:(float)small;
// declared property getter: -(BOOL)hasLabelSpacingLarge;
// declared property setter: -(void)setHasLabelSpacingLarge:(BOOL)large;
// declared property setter: -(void)setLabelSpacingLarge:(float)large;
// declared property getter: -(BOOL)hasLabelSpacingMedium;
// declared property setter: -(void)setHasLabelSpacingMedium:(BOOL)medium;
// declared property setter: -(void)setLabelSpacingMedium:(float)medium;
// declared property getter: -(BOOL)hasLabelSpacingSmall;
// declared property setter: -(void)setHasLabelSpacingSmall:(BOOL)small;
// declared property setter: -(void)setLabelSpacingSmall:(float)small;
// declared property getter: -(BOOL)hasLabelFontExpansionLarge;
// declared property setter: -(void)setHasLabelFontExpansionLarge:(BOOL)large;
// declared property setter: -(void)setLabelFontExpansionLarge:(float)large;
// declared property getter: -(BOOL)hasLabelFontExpansionMedium;
// declared property setter: -(void)setHasLabelFontExpansionMedium:(BOOL)medium;
// declared property setter: -(void)setLabelFontExpansionMedium:(float)medium;
// declared property getter: -(BOOL)hasLabelFontExpansionSmall;
// declared property setter: -(void)setHasLabelFontExpansionSmall:(BOOL)small;
// declared property setter: -(void)setLabelFontExpansionSmall:(float)small;
// declared property getter: -(BOOL)hasLabelHaloSizeLarge;
// declared property setter: -(void)setHasLabelHaloSizeLarge:(BOOL)large;
// declared property setter: -(void)setLabelHaloSizeLarge:(float)large;
// declared property getter: -(BOOL)hasLabelHaloSizeMedium;
// declared property setter: -(void)setHasLabelHaloSizeMedium:(BOOL)medium;
// declared property setter: -(void)setLabelHaloSizeMedium:(float)medium;
// declared property getter: -(BOOL)hasLabelHaloSizeSmall;
// declared property setter: -(void)setHasLabelHaloSizeSmall:(BOOL)small;
// declared property setter: -(void)setLabelHaloSizeSmall:(float)small;
// declared property getter: -(BOOL)hasLabelHeightLargeCurveLimit;
// declared property setter: -(void)setHasLabelHeightLargeCurveLimit:(BOOL)limit;
// declared property setter: -(void)setLabelHeightLargeCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasLabelHeightLargeCurve;
// declared property setter: -(void)setHasLabelHeightLargeCurve:(BOOL)curve;
// declared property setter: -(void)setLabelHeightLargeCurve:(int)curve;
// declared property getter: -(BOOL)hasLabelHeightLarge;
// declared property setter: -(void)setHasLabelHeightLarge:(BOOL)large;
// declared property setter: -(void)setLabelHeightLarge:(float)large;
// declared property getter: -(BOOL)hasLabelHeightMediumCurveLimit;
// declared property setter: -(void)setHasLabelHeightMediumCurveLimit:(BOOL)limit;
// declared property setter: -(void)setLabelHeightMediumCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasLabelHeightMediumCurve;
// declared property setter: -(void)setHasLabelHeightMediumCurve:(BOOL)curve;
// declared property setter: -(void)setLabelHeightMediumCurve:(int)curve;
// declared property getter: -(BOOL)hasLabelHeightMedium;
// declared property setter: -(void)setHasLabelHeightMedium:(BOOL)medium;
// declared property setter: -(void)setLabelHeightMedium:(float)medium;
// declared property getter: -(BOOL)hasLabelHeightSmallCurveLimit;
// declared property setter: -(void)setHasLabelHeightSmallCurveLimit:(BOOL)limit;
// declared property setter: -(void)setLabelHeightSmallCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasLabelHeightSmallCurve;
// declared property setter: -(void)setHasLabelHeightSmallCurve:(BOOL)curve;
// declared property setter: -(void)setLabelHeightSmallCurve:(int)curve;
// declared property getter: -(BOOL)hasLabelHeightSmall;
// declared property setter: -(void)setHasLabelHeightSmall:(BOOL)small;
// declared property setter: -(void)setLabelHeightSmall:(float)small;
// declared property getter: -(BOOL)hasShowShieldTextAsLabel;
// declared property setter: -(void)setHasShowShieldTextAsLabel:(BOOL)label;
// declared property setter: -(void)setShowShieldTextAsLabel:(BOOL)label;
// declared property getter: -(BOOL)hasGenericShieldDropShadowColor;
// declared property setter: -(void)setHasGenericShieldDropShadowColor:(BOOL)color;
// declared property setter: -(void)setGenericShieldDropShadowColor:(unsigned)color;
// declared property getter: -(unsigned)genericShieldDropShadowColor;
// declared property getter: -(BOOL)hasGenericShieldDropShadowSize;
// declared property setter: -(void)setHasGenericShieldDropShadowSize:(BOOL)size;
// declared property setter: -(void)setGenericShieldDropShadowSize:(float)size;
-(void)setGenericShieldDropShadowOffsets:(float*)offsets count:(unsigned)count;
-(float)genericShieldDropShadowOffsetAtIndex:(unsigned)index;
-(void)addGenericShieldDropShadowOffset:(float)offset;
-(void)clearGenericShieldDropShadowOffsets;
// declared property getter: -(float*)genericShieldDropShadowOffsets;
// declared property getter: -(unsigned)genericShieldDropShadowOffsetsCount;
// declared property getter: -(BOOL)hasGenericShieldHaloColor;
// declared property setter: -(void)setHasGenericShieldHaloColor:(BOOL)color;
// declared property setter: -(void)setGenericShieldHaloColor:(unsigned)color;
// declared property getter: -(BOOL)hasGenericShieldHaloSize;
// declared property setter: -(void)setHasGenericShieldHaloSize:(BOOL)size;
// declared property setter: -(void)setGenericShieldHaloSize:(float)size;
// declared property getter: -(BOOL)hasGenericShieldTextColor;
// declared property setter: -(void)setHasGenericShieldTextColor:(BOOL)color;
// declared property setter: -(void)setGenericShieldTextColor:(unsigned)color;
// declared property getter: -(unsigned)genericShieldTextColor;
// declared property getter: -(BOOL)hasGenericShieldBorderColor;
// declared property setter: -(void)setHasGenericShieldBorderColor:(BOOL)color;
// declared property setter: -(void)setGenericShieldBorderColor:(unsigned)color;
// declared property getter: -(unsigned)genericShieldBorderColor;
// declared property getter: -(BOOL)hasGenericShieldBackgroundColor;
// declared property setter: -(void)setHasGenericShieldBackgroundColor:(BOOL)color;
// declared property setter: -(void)setGenericShieldBackgroundColor:(unsigned)color;
// declared property getter: -(unsigned)genericShieldBackgroundColor;
// declared property getter: -(BOOL)hasGenericShieldStyle;
// declared property setter: -(void)setHasGenericShieldStyle:(BOOL)style;
// declared property setter: -(void)setGenericShieldStyle:(int)style;
// declared property getter: -(int)genericShieldStyle;
// declared property getter: -(BOOL)hasLayerShadowsTaper;
// declared property setter: -(void)setHasLayerShadowsTaper:(BOOL)taper;
// declared property setter: -(void)setLayerShadowsTaper:(float)taper;
// declared property getter: -(BOOL)hasLayerShadowsRamp;
// declared property setter: -(void)setHasLayerShadowsRamp:(BOOL)ramp;
// declared property setter: -(void)setLayerShadowsRamp:(float)ramp;
// declared property getter: -(BOOL)hasLayerShadowsWidth;
// declared property setter: -(void)setHasLayerShadowsWidth:(BOOL)width;
// declared property setter: -(void)setLayerShadowsWidth:(float)width;
// declared property getter: -(BOOL)hasLayerShadowsVisible;
// declared property setter: -(void)setHasLayerShadowsVisible:(BOOL)visible;
// declared property setter: -(void)setLayerShadowsVisible:(BOOL)visible;
// declared property getter: -(BOOL)layerShadowsVisible;
// declared property getter: -(BOOL)hasFancyCasingsStrokeWidth;
// declared property setter: -(void)setHasFancyCasingsStrokeWidth:(BOOL)width;
// declared property setter: -(void)setFancyCasingsStrokeWidth:(float)width;
// declared property getter: -(BOOL)hasFancyCasingsStrokeColor;
// declared property setter: -(void)setHasFancyCasingsStrokeColor:(BOOL)color;
// declared property setter: -(void)setFancyCasingsStrokeColor:(unsigned)color;
// declared property getter: -(unsigned)fancyCasingsStrokeColor;
// declared property getter: -(BOOL)hasFancyCasingsWidth;
// declared property setter: -(void)setHasFancyCasingsWidth:(BOOL)width;
// declared property setter: -(void)setFancyCasingsWidth:(float)width;
// declared property getter: -(BOOL)hasFancyCasingsColor;
// declared property setter: -(void)setHasFancyCasingsColor:(BOOL)color;
// declared property setter: -(void)setFancyCasingsColor:(unsigned)color;
// declared property getter: -(unsigned)fancyCasingsColor;
// declared property getter: -(BOOL)hasFancyCasingsVisible;
// declared property setter: -(void)setHasFancyCasingsVisible:(BOOL)visible;
// declared property setter: -(void)setFancyCasingsVisible:(BOOL)visible;
// declared property getter: -(BOOL)fancyCasingsVisible;
// declared property getter: -(BOOL)hasCasingsShadowWidth;
// declared property setter: -(void)setHasCasingsShadowWidth:(BOOL)width;
// declared property setter: -(void)setCasingsShadowWidth:(float)width;
// declared property getter: -(BOOL)hasCasingsShadowRamp;
// declared property setter: -(void)setHasCasingsShadowRamp:(BOOL)ramp;
// declared property setter: -(void)setCasingsShadowRamp:(float)ramp;
// declared property getter: -(BOOL)hasCasingsStrokeWidth;
// declared property setter: -(void)setHasCasingsStrokeWidth:(BOOL)width;
// declared property setter: -(void)setCasingsStrokeWidth:(float)width;
// declared property getter: -(BOOL)hasCasingsStrokeColor;
// declared property setter: -(void)setHasCasingsStrokeColor:(BOOL)color;
// declared property setter: -(void)setCasingsStrokeColor:(float)color;
// declared property getter: -(BOOL)hasCasingsHeight;
// declared property setter: -(void)setHasCasingsHeight:(BOOL)height;
// declared property setter: -(void)setCasingsHeight:(float)height;
// declared property getter: -(BOOL)hasCasingsWidth;
// declared property setter: -(void)setHasCasingsWidth:(BOOL)width;
// declared property setter: -(void)setCasingsWidth:(float)width;
// declared property getter: -(BOOL)hasCasingsColor;
// declared property setter: -(void)setHasCasingsColor:(BOOL)color;
// declared property setter: -(void)setCasingsColor:(unsigned)color;
// declared property getter: -(unsigned)casingsColor;
// declared property getter: -(BOOL)hasCasingsVisible;
// declared property setter: -(void)setHasCasingsVisible:(BOOL)visible;
// declared property setter: -(void)setCasingsVisible:(BOOL)visible;
// declared property getter: -(BOOL)casingsVisible;
// declared property getter: -(BOOL)hasThirdFillTextureBlendMode;
// declared property setter: -(void)setHasThirdFillTextureBlendMode:(BOOL)mode;
// declared property setter: -(void)setThirdFillTextureBlendMode:(int)mode;
// declared property getter: -(BOOL)hasThirdFillTextureOpacity;
// declared property setter: -(void)setHasThirdFillTextureOpacity:(BOOL)opacity;
// declared property setter: -(void)setThirdFillTextureOpacity:(float)opacity;
// declared property getter: -(BOOL)hasThirdFillTexture;
// declared property getter: -(BOOL)hasSecondFillTextureBlendMode;
// declared property setter: -(void)setHasSecondFillTextureBlendMode:(BOOL)mode;
// declared property setter: -(void)setSecondFillTextureBlendMode:(int)mode;
// declared property getter: -(BOOL)hasSecondFillTextureOpacity;
// declared property setter: -(void)setHasSecondFillTextureOpacity:(BOOL)opacity;
// declared property setter: -(void)setSecondFillTextureOpacity:(float)opacity;
// declared property getter: -(BOOL)hasSecondFillTexture;
// declared property getter: -(BOOL)hasFillTextureBlendMode;
// declared property setter: -(void)setHasFillTextureBlendMode:(BOOL)mode;
// declared property setter: -(void)setFillTextureBlendMode:(int)mode;
// declared property getter: -(BOOL)hasFillTextureOpacity;
// declared property setter: -(void)setHasFillTextureOpacity:(BOOL)opacity;
// declared property setter: -(void)setFillTextureOpacity:(float)opacity;
// declared property getter: -(BOOL)hasOuterStrokeWidth;
// declared property setter: -(void)setHasOuterStrokeWidth:(BOOL)width;
// declared property setter: -(void)setOuterStrokeWidth:(float)width;
// declared property getter: -(BOOL)hasOuterStrokeColor;
// declared property setter: -(void)setHasOuterStrokeColor:(BOOL)color;
// declared property setter: -(void)setOuterStrokeColor:(unsigned)color;
// declared property getter: -(BOOL)hasLabelIconHaloColor;
// declared property setter: -(void)setHasLabelIconHaloColor:(BOOL)color;
// declared property setter: -(void)setLabelIconHaloColor:(unsigned)color;
// declared property getter: -(BOOL)hasLabelIconGlyphColor;
// declared property setter: -(void)setHasLabelIconGlyphColor:(BOOL)color;
// declared property setter: -(void)setLabelIconGlyphColor:(unsigned)color;
// declared property getter: -(unsigned)labelIconGlyphColor;
-(void)setLabelIconGradients:(unsigned*)gradients count:(unsigned)count;
-(unsigned)labelIconGradientAtIndex:(unsigned)index;
-(void)addLabelIconGradient:(unsigned)gradient;
-(void)clearLabelIconGradients;
// declared property getter: -(unsigned*)labelIconGradients;
// declared property getter: -(unsigned)labelIconGradientsCount;
// declared property getter: -(BOOL)hasLabelIconBadgeColor;
// declared property setter: -(void)setHasLabelIconBadgeColor:(BOOL)color;
// declared property setter: -(void)setLabelIconBadgeColor:(unsigned)color;
// declared property getter: -(unsigned)labelIconBadgeColor;
// declared property getter: -(BOOL)hasLabelIconStyle;
// declared property setter: -(void)setHasLabelIconStyle:(BOOL)style;
// declared property setter: -(void)setLabelIconStyle:(int)style;
// declared property getter: -(int)labelIconStyle;
// declared property getter: -(BOOL)hasLineDrawStyle;
// declared property setter: -(void)setHasLineDrawStyle:(BOOL)style;
// declared property setter: -(void)setLineDrawStyle:(int)style;
// declared property getter: -(int)lineDrawStyle;
// declared property getter: -(BOOL)hasTrafficFast;
// declared property getter: -(BOOL)hasTrafficMedium;
// declared property getter: -(BOOL)hasTrafficSlow;
// declared property getter: -(BOOL)hasTrafficClosed;
// declared property getter: -(BOOL)hasTrafficVisible;
// declared property setter: -(void)setHasTrafficVisible:(BOOL)visible;
// declared property setter: -(void)setTrafficVisible:(BOOL)visible;
// declared property getter: -(BOOL)trafficVisible;
// declared property getter: -(BOOL)hasBuildingFlatColor;
// declared property setter: -(void)setHasBuildingFlatColor:(BOOL)color;
// declared property setter: -(void)setBuildingFlatColor:(unsigned)color;
// declared property getter: -(unsigned)buildingFlatColor;
// declared property getter: -(BOOL)hasBuildingLandmarkColor;
// declared property setter: -(void)setHasBuildingLandmarkColor:(BOOL)color;
// declared property setter: -(void)setBuildingLandmarkColor:(unsigned)color;
// declared property getter: -(unsigned)buildingLandmarkColor;
// declared property getter: -(BOOL)hasBuildingRoofStyle;
// declared property setter: -(void)setHasBuildingRoofStyle:(BOOL)style;
// declared property setter: -(void)setBuildingRoofStyle:(int)style;
// declared property getter: -(int)buildingRoofStyle;
// declared property getter: -(BOOL)hasBuildingOutlineVisible;
// declared property setter: -(void)setHasBuildingOutlineVisible:(BOOL)visible;
// declared property setter: -(void)setBuildingOutlineVisible:(BOOL)visible;
// declared property getter: -(BOOL)buildingOutlineVisible;
// declared property getter: -(BOOL)hasBuildingOutlineColor;
// declared property setter: -(void)setHasBuildingOutlineColor:(BOOL)color;
// declared property setter: -(void)setBuildingOutlineColor:(unsigned)color;
// declared property getter: -(unsigned)buildingOutlineColor;
// declared property getter: -(BOOL)hasBuildingFacadeColor;
// declared property setter: -(void)setHasBuildingFacadeColor:(BOOL)color;
// declared property setter: -(void)setBuildingFacadeColor:(unsigned)color;
// declared property getter: -(unsigned)buildingFacadeColor;
// declared property getter: -(BOOL)hasBuildingTopColor;
// declared property setter: -(void)setHasBuildingTopColor:(BOOL)color;
// declared property setter: -(void)setBuildingTopColor:(unsigned)color;
// declared property getter: -(unsigned)buildingTopColor;
-(void)setStrokeDashPatterns:(float*)patterns count:(unsigned)count;
-(float)strokeDashPatternAtIndex:(unsigned)index;
-(void)addStrokeDashPattern:(float)pattern;
-(void)clearStrokeDashPatterns;
// declared property getter: -(float*)strokeDashPatterns;
// declared property getter: -(unsigned)strokeDashPatternsCount;
-(void)setFillDashPatterns:(float*)patterns count:(unsigned)count;
-(float)fillDashPatternAtIndex:(unsigned)index;
-(void)addFillDashPattern:(float)pattern;
-(void)clearFillDashPatterns;
// declared property getter: -(float*)fillDashPatterns;
// declared property getter: -(unsigned)fillDashPatternsCount;
// declared property getter: -(BOOL)hasDropShadowColor;
// declared property setter: -(void)setHasDropShadowColor:(BOOL)color;
// declared property setter: -(void)setDropShadowColor:(unsigned)color;
// declared property getter: -(unsigned)dropShadowColor;
-(void)setDropShadowOffsets:(float*)offsets count:(unsigned)count;
-(float)dropShadowOffsetAtIndex:(unsigned)index;
-(void)addDropShadowOffset:(float)offset;
-(void)clearDropShadowOffsets;
// declared property getter: -(float*)dropShadowOffsets;
// declared property getter: -(unsigned)dropShadowOffsetsCount;
// declared property getter: -(BOOL)hasInsetShadowColor;
// declared property setter: -(void)setHasInsetShadowColor:(BOOL)color;
// declared property setter: -(void)setInsetShadowColor:(unsigned)color;
// declared property getter: -(unsigned)insetShadowColor;
// declared property getter: -(BOOL)hasInsetShadowAngle;
// declared property setter: -(void)setHasInsetShadowAngle:(BOOL)angle;
// declared property setter: -(void)setInsetShadowAngle:(float)angle;
// declared property getter: -(BOOL)hasInsetShadowHeight;
// declared property setter: -(void)setHasInsetShadowHeight:(BOOL)height;
// declared property setter: -(void)setInsetShadowHeight:(float)height;
// declared property getter: -(BOOL)hasPolygonType;
// declared property setter: -(void)setHasPolygonType:(BOOL)type;
// declared property setter: -(void)setPolygonType:(int)type;
// declared property getter: -(BOOL)hasFillTexture;
// declared property getter: -(BOOL)hasArrowSpacing;
// declared property setter: -(void)setHasArrowSpacing:(BOOL)spacing;
// declared property setter: -(void)setArrowSpacing:(float)spacing;
// declared property getter: -(float)arrowSpacing;
// declared property getter: -(BOOL)hasArrowHeight;
// declared property setter: -(void)setHasArrowHeight:(BOOL)height;
// declared property setter: -(void)setArrowHeight:(float)height;
// declared property getter: -(float)arrowHeight;
// declared property getter: -(BOOL)hasArrowVisible;
// declared property setter: -(void)setHasArrowVisible:(BOOL)visible;
// declared property setter: -(void)setArrowVisible:(BOOL)visible;
// declared property getter: -(BOOL)hasShieldTiltLimit;
// declared property setter: -(void)setHasShieldTiltLimit:(BOOL)limit;
// declared property setter: -(void)setShieldTiltLimit:(float)limit;
// declared property getter: -(BOOL)hasShieldVisible;
// declared property setter: -(void)setHasShieldVisible:(BOOL)visible;
// declared property setter: -(void)setShieldVisible:(BOOL)visible;
// declared property getter: -(BOOL)hasYieldsToOnscreenLabels;
// declared property setter: -(void)setHasYieldsToOnscreenLabels:(BOOL)onscreenLabels;
// declared property setter: -(void)setYieldsToOnscreenLabels:(BOOL)onscreenLabels;
// declared property getter: -(BOOL)yieldsToOnscreenLabels;
// declared property getter: -(BOOL)hasLabelDedupeRank;
// declared property setter: -(void)setHasLabelDedupeRank:(BOOL)rank;
// declared property setter: -(void)setLabelDedupeRank:(unsigned)rank;
// declared property getter: -(unsigned)labelDedupeRank;
// declared property getter: -(BOOL)hasOnlyShowIfTappable;
// declared property setter: -(void)setHasOnlyShowIfTappable:(BOOL)tappable;
// declared property setter: -(void)setOnlyShowIfTappable:(BOOL)tappable;
// declared property getter: -(BOOL)onlyShowIfTappable;
// declared property getter: -(BOOL)hasLabelTextVisibility;
// declared property setter: -(void)setHasLabelTextVisibility:(BOOL)visibility;
// declared property setter: -(void)setLabelTextVisibility:(int)visibility;
// declared property getter: -(int)labelTextVisibility;
// declared property getter: -(BOOL)hasLabelSpacing;
// declared property setter: -(void)setHasLabelSpacing:(BOOL)spacing;
// declared property setter: -(void)setLabelSpacing:(float)spacing;
// declared property getter: -(float)labelSpacing;
// declared property getter: -(BOOL)hasLabelShieldRank;
// declared property setter: -(void)setHasLabelShieldRank:(BOOL)rank;
// declared property setter: -(void)setLabelShieldRank:(float)rank;
// declared property getter: -(BOOL)hasLabelRoadRank;
// declared property setter: -(void)setHasLabelRoadRank:(BOOL)rank;
// declared property setter: -(void)setLabelRoadRank:(float)rank;
// declared property getter: -(BOOL)hasLabelFontExpansion;
// declared property setter: -(void)setHasLabelFontExpansion:(BOOL)expansion;
// declared property setter: -(void)setLabelFontExpansion:(float)expansion;
// declared property getter: -(BOOL)hasLabelTiltLimit;
// declared property setter: -(void)setHasLabelTiltLimit:(BOOL)limit;
// declared property setter: -(void)setLabelTiltLimit:(float)limit;
// declared property getter: -(BOOL)hasLabelSmallCaps;
// declared property setter: -(void)setHasLabelSmallCaps:(BOOL)caps;
// declared property setter: -(void)setLabelSmallCaps:(BOOL)caps;
// declared property getter: -(BOOL)hasLabelShield;
// declared property getter: -(BOOL)hasLabelHaloColor;
// declared property setter: -(void)setHasLabelHaloColor:(BOOL)color;
// declared property setter: -(void)setLabelHaloColor:(unsigned)color;
// declared property getter: -(unsigned)labelHaloColor;
// declared property getter: -(BOOL)hasLabelColor;
// declared property setter: -(void)setHasLabelColor:(BOOL)color;
// declared property setter: -(void)setLabelColor:(unsigned)color;
// declared property getter: -(unsigned)labelColor;
// declared property getter: -(BOOL)hasLabelFontFamily;
// declared property getter: -(BOOL)hasLabelIcon;
// declared property getter: -(BOOL)hasLabelLineWrap;
// declared property setter: -(void)setHasLabelLineWrap:(BOOL)wrap;
// declared property setter: -(void)setLabelLineWrap:(unsigned)wrap;
// declared property getter: -(unsigned)labelLineWrap;
// declared property getter: -(BOOL)hasLabelUpcase;
// declared property setter: -(void)setHasLabelUpcase:(BOOL)upcase;
// declared property setter: -(void)setLabelUpcase:(BOOL)upcase;
// declared property getter: -(BOOL)labelUpcase;
// declared property getter: -(BOOL)hasLabelRaisedInitial;
// declared property setter: -(void)setHasLabelRaisedInitial:(BOOL)initial;
// declared property setter: -(void)setLabelRaisedInitial:(BOOL)initial;
// declared property getter: -(BOOL)labelRaisedInitial;
// declared property getter: -(BOOL)hasLabelHaloSize;
// declared property setter: -(void)setHasLabelHaloSize:(BOOL)size;
// declared property setter: -(void)setLabelHaloSize:(float)size;
// declared property getter: -(BOOL)hasFillColorInterpolate;
// declared property setter: -(void)setHasFillColorInterpolate:(BOOL)interpolate;
// declared property setter: -(void)setFillColorInterpolate:(BOOL)interpolate;
// declared property getter: -(BOOL)fillColorInterpolate;
// declared property getter: -(BOOL)hasStrokeColorInterpolate;
// declared property setter: -(void)setHasStrokeColorInterpolate:(BOOL)interpolate;
// declared property setter: -(void)setStrokeColorInterpolate:(BOOL)interpolate;
// declared property getter: -(BOOL)strokeColorInterpolate;
// declared property getter: -(BOOL)hasFillZIndex;
// declared property setter: -(void)setHasFillZIndex:(BOOL)index;
// declared property setter: -(void)setFillZIndex:(unsigned)index;
// declared property getter: -(BOOL)hasSimpleLine;
// declared property setter: -(void)setHasSimpleLine:(BOOL)line;
// declared property setter: -(void)setSimpleLine:(BOOL)line;
// declared property getter: -(BOOL)simpleLine;
// declared property getter: -(BOOL)hasZIndex;
// declared property setter: -(void)setHasZIndex:(BOOL)index;
// declared property setter: -(void)setZIndex:(unsigned)index;
// declared property getter: -(BOOL)hasWidthDropoff;
// declared property setter: -(void)setHasWidthDropoff:(BOOL)dropoff;
// declared property setter: -(void)setWidthDropoff:(float)dropoff;
// declared property getter: -(BOOL)hasLabelHeightCurveLimit;
// declared property setter: -(void)setHasLabelHeightCurveLimit:(BOOL)limit;
// declared property setter: -(void)setLabelHeightCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasLabelHeightCurve;
// declared property setter: -(void)setHasLabelHeightCurve:(BOOL)curve;
// declared property setter: -(void)setLabelHeightCurve:(int)curve;
// declared property getter: -(BOOL)hasLabelHeight;
// declared property setter: -(void)setHasLabelHeight:(BOOL)height;
// declared property setter: -(void)setLabelHeight:(float)height;
// declared property getter: -(BOOL)hasStrokeWidthCurveLimit;
// declared property setter: -(void)setHasStrokeWidthCurveLimit:(BOOL)limit;
// declared property setter: -(void)setStrokeWidthCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasStrokeWidthCurve;
// declared property setter: -(void)setHasStrokeWidthCurve:(BOOL)curve;
// declared property setter: -(void)setStrokeWidthCurve:(int)curve;
// declared property getter: -(BOOL)hasStrokeWidth;
// declared property setter: -(void)setHasStrokeWidth:(BOOL)width;
// declared property setter: -(void)setStrokeWidth:(float)width;
// declared property getter: -(BOOL)hasWidthCurveLimit;
// declared property setter: -(void)setHasWidthCurveLimit:(BOOL)limit;
// declared property setter: -(void)setWidthCurveLimit:(float)limit;
// declared property getter: -(BOOL)hasWidthCurve;
// declared property setter: -(void)setHasWidthCurve:(BOOL)curve;
// declared property setter: -(void)setWidthCurve:(int)curve;
// declared property getter: -(BOOL)hasWidth;
// declared property setter: -(void)setHasWidth:(BOOL)width;
// declared property setter: -(void)setWidth:(float)width;
// declared property getter: -(BOOL)hasStrokeColor;
// declared property setter: -(void)setHasStrokeColor:(BOOL)color;
// declared property setter: -(void)setStrokeColor:(unsigned)color;
// declared property getter: -(unsigned)strokeColor;
// declared property getter: -(BOOL)hasFillColor;
// declared property setter: -(void)setHasFillColor:(BOOL)color;
// declared property setter: -(void)setFillColor:(unsigned)color;
// declared property getter: -(unsigned)fillColor;
// declared property getter: -(BOOL)hasVisible;
// declared property setter: -(void)setHasVisible:(BOOL)visible;
// declared property setter: -(void)setVisible:(BOOL)visible;
-(void)dealloc;
@end

