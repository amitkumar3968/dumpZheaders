/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

#import "VectorKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSArray, VKPolylineTile;

__attribute__((visibility("hidden")))
@interface VKPolylinePath : XXUnknownSuperclass {
@private
	VKPolylineTile* _tile;
	CGSize* _points;
	unsigned _pointCount;
	RouteCalibration _routeStart;
	RouteCalibration _routeEnd;
	BOOL _pathEntersTile;
	BOOL _pathExitsTile;
	BOOL _isMapMatched;
	float _totalCost;
	NSArray* _edges;
	unsigned* _simplifiedIndices;
	unsigned _simplifiedIndexCount;
	double _simplifiedEpsilon;
	BOOL _trafficSpeed;
}
@property(assign, nonatomic) BOOL trafficSpeed;	// @synthesize=_trafficSpeed
@property(readonly, assign, nonatomic) double simplifiedEpsilon;	// @synthesize=_simplifiedEpsilon
@property(readonly, assign, nonatomic) unsigned simplifiedIndexCount;	// @synthesize=_simplifiedIndexCount
@property(readonly, assign, nonatomic) const unsigned* simplifiedIndices;	// @synthesize=_simplifiedIndices
@property(readonly, assign, nonatomic) BOOL pathExitsTile;	// @synthesize=_pathExitsTile
@property(readonly, assign, nonatomic) BOOL pathEntersTile;	// @synthesize=_pathEntersTile
@property(readonly, assign, nonatomic) VKPolylineTile* tile;	// @synthesize=_tile
@property(readonly, assign, nonatomic) NSArray* edges;	// @synthesize=_edges
@property(readonly, assign, nonatomic) BOOL isMapMatched;	// @synthesize=_isMapMatched
@property(assign, nonatomic) RouteCalibration routeEnd;	// @synthesize=_routeEnd
@property(assign, nonatomic) RouteCalibration routeStart;	// @synthesize=_routeStart
@property(readonly, assign, nonatomic) unsigned pointCount;	// @synthesize=_pointCount
@property(readonly, assign, nonatomic) CGSize* points;	// @synthesize=_points
// declared property setter: -(void)setTrafficSpeed:(BOOL)speed;
// declared property getter: -(BOOL)trafficSpeed;
// declared property getter: -(double)simplifiedEpsilon;
// declared property getter: -(unsigned)simplifiedIndexCount;
// declared property getter: -(const unsigned*)simplifiedIndices;
// declared property getter: -(BOOL)pathExitsTile;
// declared property getter: -(BOOL)pathEntersTile;
// declared property getter: -(id)tile;
// declared property getter: -(id)edges;
// declared property getter: -(BOOL)isMapMatched;
// declared property setter: -(void)setRouteEnd:(RouteCalibration)end;
// declared property getter: -(RouteCalibration)routeEnd;
// declared property setter: -(void)setRouteStart:(RouteCalibration)start;
// declared property getter: -(RouteCalibration)routeStart;
// declared property getter: -(unsigned)pointCount;
// declared property getter: -(CGSize*)points;
-(id).cxx_construct;
-(void)splitTrafficSegmentationAndAddTo:(id)to with:(id)with;
-(void)assignTo:(id)to withSegment:(const TrafficSegment*)segment;
-(CGSize)interpolateAt:(const RouteCalibration*)at;
-(RouteCalibration)pathIndexFromRouteIndex:(RouteCalibration)routeIndex;
-(void)clearSimplification;
-(void)simplifyWithEpsilon:(double)epsilon;
-(void)checkEdgeList:(id)list;
-(void)sortCandidates:(id)candidates;
-(BOOL)addRoadEdge:(XXStruct_E6zS0B*)edge prevEdge:(id)edge2 toList:(id)list maxCost:(float)cost;
-(void)followEdge:(id)edge edgeList:(id)list;
-(void)findEdges;
-(float)_maxDistanceToEdgeOfTile;
-(void)_printPointsOnRoadEdge:(const XXStruct_E6zS0B*)edge;
-(void)assignPoints:(CGSize*)points count:(unsigned)count;
-(void)addPoints:(const CGSize*)points count:(unsigned)count;
-(void)postUpdate;
-(void)dealloc;
-(id)initWithTile:(id)tile;
@end

