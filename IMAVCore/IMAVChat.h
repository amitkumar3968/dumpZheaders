/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import "IMSystemMonitorListener.h"
#import "IMAVCore-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSNumber, IMAVChatParticipant, NSDate, NSObject, NSTimer, IMAVChatFeature, NSError, IMPair, IMAccount, NSArray, NSData, NSMutableDictionary, NSString, NSDictionary, IMHandle, NSMutableArray;
@protocol OS_dispatch_queue;

@interface IMAVChat : XXUnknownSuperclass <IMSystemMonitorListener> {
	NSString* _GUID;
	NSString* _conferenceID;
	NSMutableArray* _participants;
	IMHandle* _initiator;
	IMAVChatParticipant* _localParticipant;
	NSNumber* _natType;
	NSMutableDictionary* _extraServerContext;
	NSDictionary* _errorDict;
	NSDate* _dateCreated;
	NSDate* _dateStartedConnecting;
	NSDate* _dateConnected;
	NSDate* _dateEnded;
	NSDate* _dateReceivedRelayInitiate;
	NSDate* _dateReceivedRelayUpdate;
	NSDate* _interruptionBegan;
	NSString* _participantNames;
	NSDictionary* _pingTestResults;
	NSNumber* _frontCameraCaptureTime;
	NSNumber* _backCameraCaptureTime;
	NSNumber* _dataRate;
	NSNumber* _dataUploaded;
	NSNumber* _dataDownloaded;
	unsigned _localNetworkConnectionType;
	unsigned _remoteNetworkConnectionType;
	NSData* _connectData;
	NSDictionary* _callerProperties;
	NSMutableDictionary* _unknownPartyStates;
	NSObject<OS_dispatch_queue>* _queue;
	NSTimer* _inviteTimeoutTimer;
	NSDate* _inviteTimeoutTimerStart;
	NSTimer* _firstFrameTimeoutTimer;
	NSTimer* _connectionTimeoutTimer;
	NSTimer* _breakBeforeMakeTimeoutTimer;
	id _conferenceController;
	int _callID;
	unsigned _sessionID;
	unsigned _addStatus;
	NSError* _error;
	int _addableParticipants;
	unsigned _localState;
	unsigned _lastPostedState;
	IMPair* _pendingPreemptiveRelayInitate;
	NSString* _callStatisticsGUID;
	CGSize _portraitAspectRatios;
	CGSize _landscapeAspectRatios;
	double _connectionTimeoutTime;
	double _invitationTimeoutTime;
	BOOL _hasGatheredInfo;
	BOOL _hasReceivedFirstFrame;
	BOOL _isListening;
	BOOL _isCounterProposalConnect;
	BOOL _hasPendingAccept;
	BOOL _hasPendingInit;
	BOOL _isTerminating;
	BOOL _Q8IrisOpen;
	BOOL _usingCoercedIDs;
	BOOL _suppressBeginChat;
	BOOL _isCaller;
	BOOL _isVideo;
	BOOL _dataOut;
	BOOL _dataIn;
	BOOL _didRemoteMute;
	BOOL _didRemotePause;
	BOOL _participantOrderFinal;
	int _connectionType;
	BOOL _needsVideoRestart;
	BOOL _needsAudioRestart;
	BOOL _airplaneModeEnabled;
	BOOL _isVideoInterrupted;
	BOOL _isAudioInterrupted;
	IMAVChatFeature* _recorder;
	IMAVChatFeature* _auxVideo;
	IMAVChatFeature* _ard;
	BOOL __isCallUpgrade;
}
@property(readonly, assign, nonatomic) NSDate* dateConnected;	// @synthesize=_dateConnected
@property(readonly, assign, nonatomic) NSDate* dateCreated;	// @synthesize=_dateCreated
@property(readonly, assign, nonatomic) BOOL canUseRelay;	// @dynamic
@property(retain, nonatomic, setter=_setConnectData:) NSData* _connectData;	// @synthesize
@property(assign, nonatomic, setter=_setIsCounterProposalConnect:) BOOL _isCounterProposalConnect;	// @synthesize
@property(assign, nonatomic, setter=_setSuppressBeginChat:) BOOL suppressBeginChat;	// @synthesize=_suppressBeginChat
@property(assign, nonatomic, setter=_setParticipantOrderFinal:) BOOL participantOrderFinal;	// @synthesize=_participantOrderFinal
@property(assign, nonatomic, setter=_setUsingCoercedIDs:) BOOL _usingCoercedIDs;	// @synthesize
@property(assign, nonatomic, setter=_setHasPendingAccept:) BOOL _hasPendingAccept;	// @synthesize
@property(assign, nonatomic, setter=_setHasPendingInit:) BOOL _hasPendingInit;	// @synthesize
@property(readonly, assign, nonatomic) BOOL _isTeminating;	// @synthesize=_isTerminating
@property(retain, nonatomic, setter=_setDateEnded:) NSDate* dateEnded;	// @synthesize=_dateEnded
@property(assign, nonatomic, setter=_setIsListening:) BOOL _isListening;	// @synthesize
@property(assign, nonatomic, setter=_setIsVideo:) BOOL isVideo;	// @synthesize=_isVideo
@property(assign, nonatomic, setter=_setIsCaller:) BOOL isCaller;	// @synthesize=_isCaller
@property(retain, nonatomic, setter=_setPingTestResults:) NSDictionary* _pingTestResults;	// @synthesize
@property(assign, nonatomic, setter=_setQueue:) NSObject<OS_dispatch_queue>* _queue;	// @synthesize
@property(assign, nonatomic, setter=_setNeedsVideoRestart:) BOOL _needsVideoRestart;	// @synthesize
@property(assign, nonatomic, setter=_setNeedsAudioRestart:) BOOL _needsAudioRestart;	// @synthesize
@property(assign, nonatomic, setter=_setRemoteNetworkConnectionType:) unsigned _remoteNetworkConnectionType;	// @synthesize
@property(assign, nonatomic, setter=_setLocalNetworkConnectionType:) unsigned _localNetworkConnectionType;	// @synthesize
@property(assign, nonatomic, setter=_setIsCallUpgrade:) BOOL _isCallUpgrade;	// @synthesize=__isCallUpgrade
@property(assign, nonatomic, setter=_setIsAudioInterrupted:) BOOL _isAudioInterrupted;	// @synthesize
@property(assign, nonatomic, setter=_setIsVideoInterrupted:) BOOL _isVideoInterrupted;	// @synthesize
@property(retain, nonatomic, setter=_setDataDownloaded:) NSNumber* _dataDownloaded;	// @synthesize
@property(retain, nonatomic, setter=_setDataUploaded:) NSNumber* _dataUploaded;	// @synthesize
@property(retain, nonatomic, setter=_setDataRate:) NSNumber* _dataRate;	// @synthesize
@property(retain, nonatomic, setter=_setBackCameraCaptureTime:) NSNumber* _backCameraCaptureTime;	// @synthesize
@property(retain, nonatomic, setter=_setFrontCameraCaptureTime:) NSNumber* _frontCameraCaptureTime;	// @synthesize
@property(retain, nonatomic, setter=_setInterruptionBegan:) NSDate* _interruptionBegan;	// @synthesize
@property(readonly, assign, nonatomic) BOOL _usesRelay;
@property(readonly, assign, nonatomic) NSNumber* _relayConnectDuration;
@property(readonly, assign, nonatomic) NSNumber* _callDuration;
@property(readonly, assign, nonatomic) NSNumber* _connectDuration;
@property(assign, nonatomic, setter=_setConnectionType:) int _connectionType;	// @synthesize
@property(readonly, assign, nonatomic) NSNumber* _currentNatType;
@property(readonly, assign, nonatomic) NSNumber* _remoteNatType;
@property(retain, nonatomic, setter=_setNatType:) NSNumber* _natType;	// @synthesize
@property(assign, nonatomic, setter=_setConferenceController:) id _conferenceController;	// @synthesize
@property(retain, nonatomic, setter=_setCallStatisticsGUID:) NSString* _callStatisticsGUID;	// @synthesize
@property(readonly, assign) NSDictionary* _extraServerContext;	// @synthesize
@property(readonly, assign, nonatomic) NSString* participantNames;
@property(readonly, assign, nonatomic) int numActiveParticipants;	// @dynamic
@property(readonly, assign, nonatomic) unsigned addStatus;	// @synthesize=_addStatus
@property(readonly, assign, nonatomic) int addableParticipants;	// @synthesize=_addableParticipants
@property(retain, nonatomic, setter=_setCallerProperties:) NSDictionary* callerProperties;	// @synthesize=_callerProperties
@property(readonly, assign, nonatomic) BOOL isQ8IrisOpen;	// @synthesize=_Q8IrisOpen
@property(readonly, assign, nonatomic) BOOL dataIn;	// @synthesize=_dataIn
@property(readonly, assign, nonatomic) BOOL dataOut;	// @synthesize=_dataOut
@property(readonly, assign, nonatomic) NSDictionary* errorDictionary;
@property(readonly, assign, nonatomic) unsigned endedReason;
@property(readonly, assign, nonatomic) int endedError;
@property(readonly, assign, nonatomic) BOOL isStateFinal;	// @dynamic
@property(readonly, assign, nonatomic) BOOL isActive;	// @dynamic
@property(assign, nonatomic) unsigned state;	// @synthesize=_localState
@property(readonly, assign, nonatomic) NSArray* remoteParticipants;	// @dynamic
@property(retain, nonatomic) NSArray* participants;	// @synthesize=_participants
@property(readonly, assign, nonatomic) IMAVChatParticipant* localParticipant;	// @synthesize=_localParticipant
@property(readonly, assign, nonatomic) IMAVChatParticipant* initiatorParticipant;	// @dynamic
@property(readonly, assign, nonatomic) IMAccount* account;
@property(readonly, assign, nonatomic) IMHandle* otherIMHandle;
@property(retain, nonatomic) IMHandle* initiatorIMHandle;	// @synthesize=_initiator
@property(retain, nonatomic) NSString* GUID;	// @synthesize=_GUID
@property(retain, nonatomic) NSString* conferenceID;	// @synthesize=_conferenceID
@property(assign, nonatomic) int callID;	// @synthesize=_callID
@property(assign, nonatomic) unsigned sessionID;	// @synthesize=_sessionID
@property(readonly, assign, nonatomic) BOOL _allParticipantsUsingICE;
@property(readonly, assign, nonatomic) BOOL didRemotePause;
@property(assign, nonatomic) BOOL allowsVideo;
@property(assign, nonatomic) BOOL isSendingVideo;
@property(readonly, assign, nonatomic) BOOL hasReceivedFirstFrame;
@property(readonly, assign, nonatomic) BOOL isChatPaused;
@property(assign, nonatomic, setter=setRemotePaused:) BOOL isRemotePaused;
@property(assign, nonatomic, setter=setPaused:) BOOL isPaused;
@property(readonly, assign, nonatomic) BOOL didRemoteMute;
@property(assign, nonatomic) BOOL isSendingAudio;
@property(readonly, assign, nonatomic) BOOL isChatMute;
@property(assign, nonatomic, setter=setRemoteMute:) BOOL isRemoteMute;
@property(assign, nonatomic, setter=setMute:) BOOL isMute;
@property(assign, nonatomic) double connectionTimeoutTime;
@property(assign, nonatomic) double invitationTimeoutTime;
@property(assign, nonatomic) BOOL lockCamera;
@property(assign, nonatomic) unsigned cameraType;
@property(assign, nonatomic) unsigned cameraOrientation;
@property(assign, nonatomic) void* localVideoBackLayer;
@property(assign, nonatomic) void* localVideoLayer;
+(int)systemSupportsNewOutgoingConferenceTo:(id)to isVideo:(BOOL)video;
+(id)allowedClassesForArchives;
+(id)alloc;
+(void)setDefaultConnectionTimeoutTime:(double)time;
+(double)defaultConnectionTimeoutTime;
+(void)setDefaultInvitationTimeoutTime:(double)time;
+(double)defaultInvitationTimeoutTime;
+(BOOL)isStateActive:(unsigned)active;
+(BOOL)isStateFinal:(unsigned)final;
+(int)maxRemoteParticipantsVideo:(BOOL)video;
+(id)avChatWithMatchingIMHandles:(id)matchingIMHandles video:(BOOL)video;
+(id)avChatConnectingFromIMHandle:(id)imhandle;
+(id)avChatWaitingForReplyFromIMHandle:(id)imhandle orConferenceID:(id)anId;
+(id)avChatInvitedByIMHandle:(id)handle orConferenceID:(id)anId;
+(id)bestGuessAVChatWithIMHandle:(id)imhandle conferenceID:(id)anId sessionID:(unsigned)anId3 properties:(id)properties;
+(id)chatsWithIMAVChatState:(unsigned)imavchatState;
+(id)acceptedChats;
+(id)connectedChats;
+(id)connectingChats;
+(id)outgoingInvitations;
+(id)incomingInvitations;
+(id)avChatWithConferenceID:(id)conferenceID;
+(id)nonFinalChat;
+(id)activeChat;
+(id)connectedChat;
+(id)chatList;
+(id)chatWithSessionID:(unsigned)sessionID;
+(id)_avChatArray;
// declared property setter: -(void)_setIsCallUpgrade:(BOOL)upgrade;
// declared property getter: -(BOOL)_isCallUpgrade;
// declared property setter: -(void)_setPingTestResults:(id)results;
// declared property getter: -(id)_pingTestResults;
// declared property getter: -(id)_extraServerContext;
// declared property getter: -(id)participants;
// declared property getter: -(id)localParticipant;
-(void)_setState:(unsigned)state;
// declared property getter: -(unsigned)state;
// declared property getter: -(unsigned)addStatus;
// declared property getter: -(int)addableParticipants;
// declared property setter: -(void)_setDateEnded:(id)ended;
// declared property getter: -(id)dateEnded;
// declared property getter: -(id)dateCreated;
// declared property getter: -(id)dateConnected;
// declared property setter: -(void)_setConferenceController:(id)controller;
// declared property getter: -(id)_conferenceController;
-(void)_setGUID:(id)guid;
// declared property getter: -(id)GUID;
// declared property getter: -(id)conferenceID;
// declared property getter: -(int)callID;
// declared property getter: -(BOOL)dataIn;
// declared property getter: -(BOOL)dataOut;
// declared property setter: -(void)_setIsCaller:(BOOL)caller;
// declared property getter: -(BOOL)isCaller;
// declared property setter: -(void)_setIsCounterProposalConnect:(BOOL)connect;
// declared property getter: -(BOOL)_isCounterProposalConnect;
// declared property setter: -(void)_setSuppressBeginChat:(BOOL)chat;
// declared property getter: -(BOOL)suppressBeginChat;
// declared property setter: -(void)_setParticipantOrderFinal:(BOOL)final;
// declared property getter: -(BOOL)participantOrderFinal;
// declared property setter: -(void)_setIsAudioInterrupted:(BOOL)interrupted;
// declared property getter: -(BOOL)_isAudioInterrupted;
// declared property setter: -(void)_setIsVideoInterrupted:(BOOL)interrupted;
// declared property getter: -(BOOL)_isVideoInterrupted;
// declared property setter: -(void)_setDataDownloaded:(id)downloaded;
// declared property getter: -(id)_dataDownloaded;
// declared property setter: -(void)_setDataUploaded:(id)uploaded;
// declared property getter: -(id)_dataUploaded;
// declared property setter: -(void)_setDataRate:(id)rate;
// declared property getter: -(id)_dataRate;
// declared property setter: -(void)_setBackCameraCaptureTime:(id)time;
// declared property getter: -(id)_backCameraCaptureTime;
// declared property setter: -(void)_setFrontCameraCaptureTime:(id)time;
// declared property getter: -(id)_frontCameraCaptureTime;
// declared property setter: -(void)_setInterruptionBegan:(id)began;
// declared property getter: -(id)_interruptionBegan;
// declared property setter: -(void)_setUsingCoercedIDs:(BOOL)ids;
// declared property getter: -(BOOL)_usingCoercedIDs;
// declared property setter: -(void)_setHasPendingAccept:(BOOL)accept;
// declared property getter: -(BOOL)_hasPendingAccept;
// declared property setter: -(void)_setHasPendingInit:(BOOL)init;
// declared property getter: -(BOOL)_hasPendingInit;
// declared property getter: -(BOOL)_isTeminating;
// declared property setter: -(void)_setConnectData:(id)data;
// declared property getter: -(id)_connectData;
// declared property setter: -(void)_setIsListening:(BOOL)listening;
// declared property getter: -(BOOL)_isListening;
// declared property setter: -(void)_setIsVideo:(BOOL)video;
// declared property getter: -(BOOL)isVideo;
// declared property setter: -(void)_setNeedsVideoRestart:(BOOL)restart;
// declared property getter: -(BOOL)_needsVideoRestart;
// declared property setter: -(void)_setNeedsAudioRestart:(BOOL)restart;
// declared property getter: -(BOOL)_needsAudioRestart;
// declared property setter: -(void)_setRemoteNetworkConnectionType:(unsigned)type;
// declared property getter: -(unsigned)_remoteNetworkConnectionType;
// declared property setter: -(void)_setLocalNetworkConnectionType:(unsigned)type;
// declared property setter: -(void)_setNatType:(id)type;
-(void)_setInitiatorIMHandle:(id)handle;
// declared property getter: -(id)initiatorIMHandle;
// declared property getter: -(id)callerProperties;
-(void)_setSessionID:(unsigned)anId;
// declared property getter: -(unsigned)sessionID;
// declared property getter: -(BOOL)isQ8IrisOpen;
// declared property setter: -(void)_setCallStatisticsGUID:(id)guid;
// declared property getter: -(id)_callStatisticsGUID;
// declared property setter: -(void)_setConnectionType:(int)type;
// declared property getter: -(int)_connectionType;
// declared property setter: -(void)_setQueue:(id)queue;
// declared property getter: -(id)_queue;
-(void)_noteFirstFrame;
-(void)_postNotificationName:(id)name participant:(id)participant userInfo:(id)info;
-(void)_postNotificationName:(id)name userInfo:(id)info;
-(void)_reportError:(id)error;
-(void)_setErrorDictionary:(id)dictionary;
// declared property getter: -(id)errorDictionary;
-(void)_handleAVError:(id)error;
// declared property getter: -(unsigned)_localNetworkConnectionType;
// declared property getter: -(id)_natType;
// declared property getter: -(BOOL)_usesRelay;
// declared property getter: -(id)_relayConnectDuration;
// declared property getter: -(id)_callDuration;
// declared property getter: -(id)_connectDuration;
// declared property getter: -(id)_currentNatType;
// declared property getter: -(id)_remoteNatType;
-(BOOL)isConferenceSilent;
-(void)_setLocalParticipant:(id)participant;
-(void)_setParticipants:(id)participants;
-(void)_setAddableParticipants:(int)participants;
-(void)_setAddStatus:(unsigned)status;
-(void)_setQ8IrisOpen:(BOOL)open;
-(void)_setDataIn:(BOOL)anIn;
-(void)_setDataOut:(BOOL)anOut;
-(void)_setCreationDate;
// declared property getter: -(unsigned)endedReason;
// declared property getter: -(int)endedError;
// declared property setter: -(void)setCallID:(int)anId;
-(void)_setConferenceID:(id)anId;
// declared property getter: -(id)account;
// declared property getter: -(id)otherIMHandle;
// declared property setter: -(void)_setCallerProperties:(id)properties;
-(id)participantMatchingIMHandle:(id)handle;
-(id)vcPartyIDForIMHandle:(id)imhandle;
-(id)participantWithID:(id)anId;
// declared property getter: -(id)participantNames;
-(void)invalidateParticipantNames;
-(void)handleVideoConferenceNotification:(id)notification;
-(void)_participantsChanged:(id)changed;
-(void)_inviteeInfoChanged:(id)changed;
-(void)_initiatorInfoChanged:(id)changed;
-(void)handleGenericAVMessageFromParticipant:(id)participant type:(unsigned)type userInfo:(id)info;
-(void)_handleGenericAVMessageFromParticipant:(id)participant type:(unsigned)type userInfo:(id)info handled:(BOOL)handled;
-(void)_VCCounterProposal:(id)proposal;
-(void)_responseToVCInvite:(id)vcinvite;
-(void)__responseToVCInvite:(id)vcinvite;
-(void)_counterPropose:(id)propose;
-(BOOL)_checkVCResponseDict:(id)dict;
-(void)_threadedPrepareConnectionForInvitedParty:(id)invitedParty;
-(void)_mainThreadFinishPrepareConnectionForInvitedParty:(id)invitedParty;
-(void)_prepareConnectionForParticipant:(id)participant;
-(void)_connectTo:(id)to withData:(id)data;
-(void)_setStateDisconnected;
-(void)sendARDFileTransferAuthorization:(id)authorization to:(id)to;
-(void)declineInvitation;
-(void)declineInvitationWithResponse:(unsigned)response;
-(void)acceptInvitation;
-(void)invite:(id)invite;
-(void)_sendVCUpdateTo:(id)to skipConnected:(BOOL)connected;
-(void)cancelInvitation;
-(void)_cancelInvitationWithReason:(unsigned)reason error:(int)error;
-(void)inviteAll;
-(id)inviteesInfoAsPlist:(BOOL)plist account:(id)account;
-(void)endChatWithReason:(unsigned)reason error:(int)error;
-(void)_endChatWithReason:(unsigned)reason andError:(int)error;
-(void)_sendEndCallMetricWithReason:(unsigned)reason andError:(int)error;
-(void)endChatWithError:(int)error;
-(void)endChatWithReason:(unsigned)reason;
-(void)_reallyEndChatWithError:(id)error;
-(void)endChat;
-(void)beginChat;
-(id)description;
-(void)dealloc;
-(id)initOutgoingTo:(id)to isVideo:(BOOL)video;
-(id)initIncomingFrom:(id)from isVideo:(BOOL)video callerProperties:(id)properties;
-(id)_initWith:(id)with invitedBy:(id)by sessionID:(unsigned)anId video:(BOOL)video extraProperties:(id)properties;
-(void)_determineDataIn;
// declared property setter: -(void)setLocalVideoBackLayer:(void*)layer;
// declared property getter: -(void*)localVideoBackLayer;
// declared property setter: -(void)setLocalVideoLayer:(void*)layer;
// declared property getter: -(void*)localVideoLayer;
-(void)setLocalAspectRatio:(CGSize)ratio cameraOrientation:(unsigned)orientation cameraType:(unsigned)type;
-(CGSize)localAspectRatioForCameraOrientation:(unsigned)cameraOrientation cameraType:(unsigned)type;
// declared property setter: -(void)setLockCamera:(BOOL)camera;
// declared property getter: -(BOOL)lockCamera;
// declared property setter: -(void)setCameraOrientation:(unsigned)orientation;
// declared property getter: -(unsigned)cameraOrientation;
// declared property setter: -(void)setCameraType:(unsigned)type;
// declared property getter: -(unsigned)cameraType;
-(void)_postParticipantMediaChangeNotification:(id)notification cameraChanged:(BOOL)changed orientationChanged:(BOOL)changed3 aspectChanged:(BOOL)changed4 cameraWillSwitch:(BOOL)camera camera:(unsigned)camera6 orientation:(unsigned)orientation aspect:(CGSize)aspect;
-(BOOL)stopPreview;
-(BOOL)startPreviewWithError:(id*)error;
-(BOOL)closeCamera;
-(BOOL)openCamera;
// declared property setter: -(void)setConnectionTimeoutTime:(double)time;
// declared property getter: -(double)connectionTimeoutTime;
// declared property setter: -(void)setInvitationTimeoutTime:(double)time;
// declared property getter: -(double)invitationTimeoutTime;
-(void)_breakBeforeMakeTimer:(id)timer;
-(void)_setBreakBeforeMakeTimer;
-(void)_clearBreakBeforeMakeTimer;
-(void)_firstFrameTimeout:(id)timeout;
-(void)_setFirstFrameTimeoutTimer;
-(void)_clearFirstFrameTimeoutTimer;
-(void)_reduceInvitationTimeoutTime;
-(void)_invitationTimeout:(id)timeout;
-(void)_setInvitationTimeoutTimer;
-(void)_clearInvitationTimeoutTimer;
-(void)_connectionTimeout:(id)timeout;
-(void)_setConnectionTimeoutTimer;
-(void)_clearConnectionTimeoutTimer;
-(void)auxVideoEndedForPersonWithID:(id)anId;
-(void)auxVideoBeganForPersonWithID:(id)anId;
-(void)conferencePersonWithID:(id)anId approvedAuxVideo:(BOOL)video;
-(BOOL)shouldConferenceAcceptAuxVideoFromUser:(id)user;
-(void)_vccInitDidFinish:(id)_vccInit;
-(void)startVCOnMainThread:(id)thread;
-(void)_noteConferenceConnected:(id)connected;
-(void)conferencePersonWithID:(id)anId sendRelayCancel:(id)cancel;
-(void)conferencePersonWithID:(id)anId sendRelayUpdate:(id)update;
-(void)conferencePersonWithID:(id)anId sendRelayRequest:(id)request;
-(void)conferenceHasTimedOut;
-(void)conferenceHasVideoError;
-(void)conferencePersonWithID:(id)anId hasInfoForNoPackets:(id)noPackets;
-(void)conferencePersonWithID:(id)anId hasInfoForInsufficientBandwidth:(id)insufficientBandwidth;
-(void)conferencePersonWithID:(id)anId mediaDidStall:(BOOL)media;
-(void)conferencePersonWithID:(id)anId didDegrade:(BOOL)degrade;
-(void)conferencePersonWithID:(id)anId didStall:(BOOL)stall;
-(void)conferencePersonWithID:(id)anId didPause:(BOOL)pause;
-(void)conferencePersonWithID:(id)anId didMute:(BOOL)mute;
-(void)conferencePersonWithID:(id)anId didCancel:(BOOL)cancel;
-(void)conferencePersonWithID:(id)anId didConnect:(BOOL)connect;
-(void)conferenceHungUpByPersonWithID:(id)anId;
-(void)conferencePersonWithID:(id)anId completedWithInfo:(id)info;
-(void)_unknownParty:(id)party muteOrPause:(unsigned)pause didChange:(BOOL)change;
-(void)_unknownParty:(id)party didConnect:(BOOL)connect;
-(void)toggleSendingAudio;
// declared property setter: -(void)setIsSendingAudio:(BOOL)audio;
// declared property getter: -(BOOL)isSendingAudio;
// declared property getter: -(BOOL)didRemoteMute;
-(void)toggleChatMute;
// declared property getter: -(BOOL)isChatMute;
-(void)toggleRemoteMute;
// declared property getter: -(BOOL)isRemoteMute;
// declared property setter: -(void)setRemoteMute:(BOOL)mute;
-(void)toggleMute;
// declared property getter: -(BOOL)isMute;
// declared property setter: -(void)setMute:(BOOL)mute;
-(BOOL)isLocalNetworkStalled;
-(void)toggleSendingVideo;
// declared property setter: -(void)setAllowsVideo:(BOOL)video;
// declared property getter: -(BOOL)allowsVideo;
// declared property setter: -(void)setIsSendingVideo:(BOOL)video;
// declared property getter: -(BOOL)isSendingVideo;
// declared property getter: -(BOOL)didRemotePause;
-(void)toggleChatPaused;
// declared property getter: -(BOOL)isChatPaused;
-(void)toggleRemotePaused;
// declared property getter: -(BOOL)isRemotePaused;
// declared property setter: -(void)setRemotePaused:(BOOL)paused;
-(void)togglePaused;
// declared property getter: -(BOOL)isPaused;
// declared property setter: -(void)setPaused:(BOOL)paused;
// declared property getter: -(BOOL)hasReceivedFirstFrame;
-(int)_initialRelayStatus;
// declared property getter: -(BOOL)canUseRelay;
-(void)_relayPropose:(id)propose;
-(void)_handleRelayCancel:(id)cancel fromParticipant:(id)participant;
-(void)_handleRelayUpdate:(id)update fromParticipant:(id)participant;
-(void)_handleRelayInitate:(id)initate fromParticipant:(id)participant;
-(void)_entitlementsChanged:(id)changed;
-(void)_airplaneModeChanged:(id)changed;
-(void)systemWillShutdown;
-(void)notificationCenterDidDisappear;
-(void)notificationCenterWillAppear;
-(void)systemApplicationDidResumeForEventsOnly;
-(void)systemApplicationDidResume;
-(void)systemApplicationDidSuspend;
-(void)systemApplicationWillEnterForeground;
-(void)systemApplicationDidEnterBackground;
-(void)systemApplicationDidBecomeActive;
-(void)_resumeVideoState;
-(void)_resumeAudioState;
-(void)_saveVideoRestartState;
-(void)_saveAudioRestartState;
-(void)systemDidFastUserSwitchOut;
-(void)_postStateToDelegateIfNecessary;
-(void)participant:(id)participant changedFromState:(unsigned)state toState:(unsigned)state3;
-(void)_setActiveConference;
// declared property getter: -(BOOL)isActive;
// declared property getter: -(BOOL)isStateFinal;
-(void)finalizeOrderWithVideoFrom:(id)from;
-(id)orderedRemotePartyIDs;
-(id)stringForAddStatus;
-(id)stringForAddStatus:(unsigned)addStatus;
-(id)_participantMatchingVCPartyID:(id)anId;
-(void)_refreshAddableStatus;
// declared property getter: -(BOOL)_allParticipantsUsingICE;
// declared property getter: -(int)numActiveParticipants;
// declared property getter: -(id)remoteParticipants;
// declared property getter: -(id)initiatorParticipant;
-(BOOL)_participantsCheckOut;
-(void)_initParticipantsWithNuggets:(id)nuggets;
-(void)_initParticipantsWithIMHandles:(id)imhandles;
-(BOOL)_imHandlesRequireCoercedIDs:(id)ids;
-(void)_updateParticipantsWithData:(id)data;
-(id)participantsNotInNuggets:(id)nuggets;
-(void)_finalizeParticipantOrder:(id)order andNotify:(BOOL)notify;
-(BOOL)_moveVCPartyID:(id)anId toIndex:(unsigned)index inCount:(unsigned)count;
-(void)_insertRemoteParticipant:(id)participant atIndex:(unsigned)index;
-(void)_updateIMHandleInBuddyList:(id)buddyList;
-(void)_peerID:(id)anId changedTo:(id)to;
@end

