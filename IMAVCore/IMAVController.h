/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import <XXUnknownSuperclass.h> // Unknown library

@protocol IMAVControllerDelegate;

@interface IMAVController : XXUnknownSuperclass {
	id<IMAVControllerDelegate> _delegate;
	BOOL _blockMultipleIncomingInvitations;
	BOOL _blockOutgoingInvitationsDuringCall;
	BOOL _blockIncomingInvitationsDuringCall;
}
@property(readonly, assign, nonatomic) BOOL _ready;
@property(readonly, assign, nonatomic) BOOL canUseSmallDataBlobs;
@property(assign, nonatomic) id<IMAVControllerDelegate> delegate;	// @synthesize=_delegate
@property(assign, nonatomic) BOOL softwareMicrophoneEnabled;
@property(assign, nonatomic) BOOL softwareCameraEnabled;
@property(readonly, assign, nonatomic) BOOL softwareMicrophoneSupported;
@property(readonly, assign, nonatomic) BOOL softwareCameraSupported;
@property(readonly, assign, nonatomic) BOOL ARDClientCapable;
@property(readonly, assign, nonatomic) BOOL ARDServerCapable;
@property(assign, nonatomic) BOOL blockOutgoingInvitationsDuringCall;	// @synthesize=_blockOutgoingInvitationsDuringCall
@property(assign, nonatomic) BOOL blockIncomingInvitationsDuringCall;	// @synthesize=_blockIncomingInvitationsDuringCall
@property(assign, nonatomic) BOOL blockMultipleIncomingInvitations;	// @synthesize=_blockMultipleIncomingInvitations
@property(assign, nonatomic) BOOL blockAudioOnlyCalls;
@property(assign, nonatomic) BOOL blockARDCapable;
@property(assign, nonatomic) BOOL blockCameraCapable;
@property(assign, nonatomic) BOOL blockMicrophoneCapable;
@property(readonly, assign, nonatomic) BOOL microphoneConnected;
@property(readonly, assign, nonatomic) BOOL cameraConnected;
@property(readonly, assign, nonatomic) BOOL multiVideoCapable;
@property(readonly, assign, nonatomic) BOOL multiAudioCapable;
@property(readonly, assign, nonatomic) BOOL microphoneCapable;
@property(readonly, assign, nonatomic) BOOL cameraCapable;
@property(readonly, assign, nonatomic) unsigned overallChatState;
@property(readonly, assign, nonatomic) BOOL hasRunningConference;
@property(readonly, assign, nonatomic) BOOL hasActiveConference;
+(id)sharedInstance;
// declared property setter: -(void)setBlockIncomingInvitationsDuringCall:(BOOL)call;
// declared property getter: -(BOOL)blockIncomingInvitationsDuringCall;
// declared property setter: -(void)setBlockOutgoingInvitationsDuringCall:(BOOL)call;
// declared property getter: -(BOOL)blockOutgoingInvitationsDuringCall;
// declared property setter: -(void)setBlockMultipleIncomingInvitations:(BOOL)invitations;
// declared property getter: -(BOOL)blockMultipleIncomingInvitations;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
// declared property getter: -(BOOL)_ready;
-(void)requestPendingVCInvitations;
-(void)currentAVChatInfoChanged:(id)changed;
// declared property setter: -(void)setBlockARDCapable:(BOOL)capable;
// declared property getter: -(BOOL)blockARDCapable;
// declared property setter: -(void)setBlockCameraCapable:(BOOL)capable;
// declared property getter: -(BOOL)blockCameraCapable;
// declared property setter: -(void)setBlockMicrophoneCapable:(BOOL)capable;
// declared property getter: -(BOOL)blockMicrophoneCapable;
// declared property setter: -(void)setBlockAudioOnlyCalls:(BOOL)calls;
// declared property getter: -(BOOL)blockAudioOnlyCalls;
// declared property setter: -(void)setSoftwareMicrophoneEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)softwareMicrophoneEnabled;
// declared property setter: -(void)setSoftwareCameraEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)softwareCameraEnabled;
// declared property getter: -(BOOL)softwareMicrophoneSupported;
// declared property getter: -(BOOL)softwareCameraSupported;
-(BOOL)ardMuxingSupported;
// declared property getter: -(BOOL)microphoneCapable;
// declared property getter: -(BOOL)cameraCapable;
// declared property getter: -(BOOL)ARDServerCapable;
-(BOOL)canReceiveWidescreen;
// declared property getter: -(BOOL)canUseSmallDataBlobs;
// declared property getter: -(BOOL)ARDClientCapable;
// declared property getter: -(BOOL)hasRunningConference;
// declared property getter: -(BOOL)hasActiveConference;
// declared property getter: -(BOOL)microphoneConnected;
// declared property getter: -(BOOL)cameraConnected;
// declared property getter: -(BOOL)multiVideoCapable;
// declared property getter: -(BOOL)multiAudioCapable;
-(void)updateActiveConference;
-(void)setHasActiveConference:(BOOL)conference;
-(void)setHasRunningConference:(BOOL)conference;
// declared property getter: -(unsigned)overallChatState;
-(void)pushCachedVCCapsToDaemon;
-(void)vcCapabilitiesChanged:(unsigned long long)changed;
-(void)setIMAVCapabilities:(int)capabilities toCaps:(int)caps;
-(void)_setServiceVCCaps:(unsigned long long)caps toCaps:(unsigned long long)caps2;
-(void)dumpCaps;
-(void)cancelVCRequestWithBuddy:(id)buddy vcProps:(id)props forAccount:(id)account conferenceID:(id)anId;
-(void)declineVCRequestWithBuddy:(id)buddy response:(unsigned)response vcProps:(id)props forAccount:(id)account conferenceID:(id)anId;
-(id)vcResponseInfoWithSessionID:(unsigned)sessionID;
-(id)vcResponseInfoWithSessionID:(unsigned)sessionID ICEData:(id)data natType:(id)type natIP:(id)ip ardChannelInfo:(id)info forParticipant:(id)participant relaySupported:(BOOL)supported;
-(void)declineVCRequestWithBuddy:(id)buddy response:(unsigned)response vcProps:(id)props conferenceID:(id)anId;
-(id)init;
-(void)setupIMAVController;
-(void)_markSetup;
-(BOOL)_shouldRunConferences;
-(BOOL)_shouldHandleInvites;
-(BOOL)_runningInLegacyVCApp;
@end

