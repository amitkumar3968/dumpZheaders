/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "IMAVCore-Structs.h"

@class NSString, NSMutableArray, NSObject, NSLock, IMRemoteObject, IMAVDaemonListener, IMLocalObject, NSProtocolChecker;
@protocol IMAVDaemonProtocol, OS_dispatch_queue;

@interface IMAVDaemonController : XXUnknownSuperclass {
	IMRemoteObject<IMAVDaemonProtocol>* _remoteObject;
	IMLocalObject* _localObject;
	IMAVDaemonListener* _daemonListener;
	NSProtocolChecker* _protocol;
	NSString* _listenerID;
	NSMutableArray* _listeners;
	NSLock* _connectionLock;
	NSObject<OS_dispatch_queue>* _listenerLockQueue;
	NSObject<OS_dispatch_queue>* _remoteDaemonLockQueue;
	NSObject<OS_dispatch_queue>* _remoteMessageQueue;
	NSObject<OS_dispatch_queue>* _localObjectLockQueue;
	CFRunLoopSourceRef _runLoopSource;
	BOOL _hasCheckedForDaemon;
	BOOL _acquiringDaemonConnection;
}
@property(readonly, assign, nonatomic) NSObject<OS_dispatch_queue>* _remoteMessageQueue;	// @synthesize
@property(readonly, assign, nonatomic) IMAVDaemonListener* listener;	// @synthesize=_daemonListener
+(id)sharedInstance;
// declared property getter: -(id)_remoteMessageQueue;
// declared property getter: -(id)listener;
-(void)forwardInvocation:(id)invocation;
-(id)methodSignatureForSelector:(SEL)selector;
-(void)remoteObjectDiedNotification:(id)notification;
-(void)localObjectDiedNotification:(id)notification;
-(void)_remoteObjectDiedNotification:(id)notification;
-(void)_localObjectDiedNotification:(id)notification;
-(void)_disconnectFromDaemon;
-(void)_cleanUpConnection;
-(void)_connectToDaemon;
-(BOOL)_makeConnectionWithCompletionBlock:(id)completionBlock;
-(BOOL)removeListenerID:(id)anId;
-(BOOL)hasListenerForID:(id)anId;
-(BOOL)addListenerID:(id)anId;
-(void)_listenerSetUpdated;
-(void)_remoteObjectCleanup;
-(void)_localObjectCleanup;
-(BOOL)localObjectExists;
-(BOOL)remoteObjectExists;
-(void)_noteSetupComplete;
-(BOOL)isConnected;
-(BOOL)isConnecting;
-(BOOL)__isRemoteObjectValidOnQueue:(id)queue;
-(BOOL)__isLocalObjectValidOnQueue:(id)queue;
-(void)dealloc;
-(id)init;
@end

