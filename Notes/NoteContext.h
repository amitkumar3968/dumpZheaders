/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import "Notes-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSNumber, NSManagedObjectModel, NSManagedObjectContext, NSPersistentStoreCoordinator, NSPredicate, CPExclusiveLock, NoteStoreObject, NoteAccountObject, NSMutableDictionary, NSString;

@interface NoteContext : XXUnknownSuperclass {
@private
	NSManagedObjectModel* _managedObjectModel;
	NSManagedObjectContext* _managedObjectContext;
	NSPersistentStoreCoordinator* _persistentStoreCoordinator;
	NSPredicate* _searchPredicate;
	NoteStoreObject* _localStore;
	NoteAccountObject* _localAccount;
	CXIndexRef __SharedNoteStoreSearchIndex;
	CPExclusiveLock* __SharedNoteStoreSearchIndexLock;
	int __SharedNoteStoreSearchIndexCount;
	BOOL _isIndexing;
	NSManagedObjectContext* _nextIdContext;
	CPExclusiveLock* _nextIdLock;
	NSNumber* _nextId;
	CPExclusiveLock* _objectCreationLock;
	unsigned _notificationCount;
	BOOL _logChanges;
	BOOL _indexInBatches;
	BOOL _hasPriorityInSaveConflicts;
	BOOL _inMigrator;
	NSString* _testingFilePrefix;
	NSString* _testingFilePath;
	NSMutableDictionary* _notePropertyObjectsRealized;
}
@property(readonly, assign, nonatomic) NSManagedObjectContext* managedObjectContext;
@property(readonly, assign, nonatomic) BOOL isIndexing;	// @synthesize=_isIndexing
@property(readonly, retain) NSManagedObjectModel* managedObjectModel;	// converted property
@property(readonly, retain) NSPersistentStoreCoordinator* persistentStoreCoordinator;	// converted property
@property(readonly, retain) NoteStoreObject* localStore;	// converted property
@property(readonly, retain) NoteAccountObject* localAccount;	// converted property
+(BOOL)databaseIsCorrupt:(id)corrupt;
+(BOOL)shouldLogIndexing;
// declared property getter: -(BOOL)isIndexing;
-(void).cxx_destruct;
-(BOOL)deleteIndexFile;
-(BOOL)noteIsSafeToAccess:(id)access;
-(void)cleanUpLocks;
-(id)findNotesWithText:(id)text betweenDate:(id)date andDate:(id)date3;
-(id)copyNotesForSearch:(void*)search predicate:(id)predicate complete:(char*)complete;
-(id)copyNotesForSearch:(void*)search complete:(char*)complete;
-(void*)newSearchContextWithText:(id)text;
-(void)trackChanges:(id)changes;
-(id)noteChangeWithType:(int)type store:(id)store;
-(void)updateSearchIndex:(id)index;
-(void)resetNotificationCount;
-(void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;
-(void)indexInBatches:(BOOL)batches;
-(void)resumeIndexing;
-(void)wrapUpIndexing;
-(void)destroySearchIndex;
-(CXIndexRef)searchIndex:(char*)index;
-(void)indexNotes:(id)notes;
-(id)notesToResumeIndexing;
-(BOOL)shouldResumeIndexing;
-(void)saveNotesToResumeIndexing:(id)resumeIndexing;
// converted property getter: -(id)persistentStoreCoordinator;
// converted property getter: -(id)managedObjectModel;
// declared property getter: -(id)managedObjectContext;
-(void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;
-(id)urlForPersistentStore;
-(id)pathForIndex;
-(id)pathForPersistentStore;
-(id)rootDirectory;
-(id)nextIndex;
-(id)getNextIdObject;
-(void)handleMigration;
-(id)propertyValueForKey:(id)key;
-(void)setPropertyValue:(id)value forKey:(id)key;
-(id)_notePropertyObjectForKey:(id)key;
-(BOOL)hasMultipleEnabledStores;
-(BOOL)shouldDisableLocalStore;
-(BOOL)deleteStore:(id)store;
-(BOOL)deleteAccount:(id)account;
-(BOOL)forceDeleteAccount:(id)account;
// converted property getter: -(id)localAccount;
// converted property getter: -(id)localStore;
-(id)defaultStoreForNewNote;
-(id)accountForAccountId:(id)accountId;
-(id)newlyAddedAccount;
-(id)allAccounts;
-(unsigned)countOfStores;
-(id)allStores;
-(id)newlyAddedStore;
-(id)collectionForInfo:(id)info;
-(id)allNotesWithoutBodiesInCollection:(id)collection;
-(id)notesForIntegerIds:(id)integerIds;
-(id)noteForObjectID:(id)objectID;
-(unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;
-(id)allNotesMatchingPredicate:(id)predicate;
-(unsigned)countOfNotesInCollection:(id)collection;
-(id)allNotesInCollection:(id)collection;
-(unsigned)countOfNotes;
-(id)allNotes;
-(id)visibleNotesForIntegerIds:(id)integerIds;
-(id)visibleNoteForObjectID:(id)objectID;
-(unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;
-(id)allVisibleNotesMatchingPredicate:(id)predicate;
-(unsigned)countOfVisibleNotesInCollection:(id)collection;
-(id)allVisibleNotesInCollection:(id)collection;
-(unsigned)countOfVisibleNotes;
-(id)allVisibleNotes;
-(BOOL)saveSilently:(id*)silently;
-(BOOL)handleSaveErrors:(id)errors;
-(BOOL)save:(id*)save;
-(BOOL)saveOutsideApp:(id*)app;
-(void)invalidate;
-(void)enableChangeLogging:(BOOL)logging;
-(void)deleteChanges:(id)changes;
-(void)deleteNoteRegardlessOfConstraints:(id)constraints;
-(void)deleteNote:(id)note;
-(id)storeForObjectID:(id)objectID;
-(id)collectionForObjectID:(id)objectID;
-(id)newlyAddedNote;
-(void)sortNotes:(id)notes;
-(void)clearCaches;
-(id)newFetchRequestForNotes;
-(id)newFRCForCollection:(id)collection delegate:(id)delegate;
-(id)liveNotesNeedingBodiesPredicate;
-(id)visibleNotesPredicate;
-(void)dealloc;
-(id)init;
-(id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;
-(id)initWithTestingFilePrefix:(id)testingFilePrefix;
-(id)initForMigrator;
-(id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;
-(void)tearDownCoreDataStack;
-(void)setUpCoreDataStack;
-(void)removeConflictingSqliteAndIdxFiles;
-(void)removeSqliteAndIdxFiles;
-(void)setUpUniqueObjects;
-(void)forceSetUpUniqueObjects;
-(BOOL)setUpLastIndexTid;
-(BOOL)setUpLocalAccountAndStore;
-(void)_createLocalAccount:(id*)account andStore:(id*)store;
-(id)storeOptions;
@end

