/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class BKSSignal, NSObject, BKSApplicationActivationAssertion, NSString, NSMutableArray, NSMutableDictionary, BKSMachSendRight;
@protocol OS_dispatch_queue, BKSWorkspaceDelegate, OS_xpc_object;

@interface BKSWorkspace : XXUnknownSuperclass {
@private
	BKSSignal* _invalidationSignal;
	NSObject<OS_dispatch_queue>* _queue;
	NSObject<OS_dispatch_queue>* _connectionQueue;
	NSObject<OS_dispatch_queue>* _applicationInfoQueue;
	id<BKSWorkspaceDelegate> _delegate;
	NSObject<OS_xpc_object>* _serverConnection;
	NSString* _topApplicationBundleID;
	NSMutableArray* _runningApplicationInfo;
	NSMutableArray* _activatingApplications;
	NSMutableDictionary* _activationTokens;
	BKSMachSendRight* _topEventPortOverride;
	unsigned _serverPort;
	BOOL _suspended;
	BOOL _locked;
	BOOL _workspaceOwner;
	BKSApplicationActivationAssertion* _topApplicationAssertion;
}
@property(retain, nonatomic) BKSMachSendRight* topEventPortOverride;	// @synthesize=_topEventPortOverride
@property(readonly, assign, nonatomic) BOOL suspended;	// @synthesize=_suspended
@property(readonly, assign, nonatomic) unsigned serverPort;	// @synthesize=_serverPort
@property(assign, nonatomic) id<BKSWorkspaceDelegate> delegate;	// @synthesize=_delegate
@property(assign, getter=isLocked) BOOL locked;	// converted property
@property(readonly, retain) NSMutableArray* activatingApplications;	// converted property
// declared property getter: -(id)topEventPortOverride;
// declared property getter: -(BOOL)suspended;
// declared property getter: -(unsigned)serverPort;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(void)_receiveApplicationIsBeingDebuggedStateChanged:(id)changed;
-(void)_receiveWorkspaceActivationResponse:(id)response;
-(void)_receiveWorkspaceIsSuspended:(id)suspended;
-(void)_receiveApplicationSuspensionSettingsUpdated:(id)updated;
-(void)_receiveApplicationSuspended:(id)suspended;
-(void)_receiveApplicationExited:(id)exited;
-(void)_receiveApplicationDidActivate:(id)_receiveApplication;
-(void)_receiveApplicationLaunchBegan:(id)began;
-(void)_receiveHandleStatusBarReturnActionFromApplication:(id)application;
-(void)_receiveHandleOpenURL:(id)url;
-(void)_receiveDidBecomeReceiver:(id)_receive;
-(void)_receiveWillBecomeReceiver:(id)_receive;
-(void)_sendReleaseApplicationActivationAssertion:(id)assertion;
-(void)_sendAcquireApplicationActivationAssertion:(id)assertion uniqueID:(id)anId name:(id)name;
-(void)_sendApplication:(id)application simpleGSEvent:(int)event withSubtype:(int)subtype;
-(void)_sendApplication:(id)application simpleGSEvent:(int)event;
-(void)_sendApplication:(id)application setNowPlayingAudio:(BOOL)audio;
-(void)_sendApplication:(id)application setTaskPort:(id)port;
-(void)_sendApplication:(id)application setIsConnectionToEA:(BOOL)ea;
-(void)_sendApplication:(id)application setRecordingAudio:(BOOL)audio;
-(void)_sendTopEventPortOverride:(id)override;
-(void)_sendShutdown:(BOOL)shutdown;
-(void)_sendLocked:(BOOL)locked;
-(void)_sendResume:(id)resume;
-(void)_sendSuspend:(id)suspend;
-(void)_sendActivate:(id)activate withActivation:(id)activation withDeactivation:(id)deactivation token:(id)token;
-(void)_sendClientBundleIdentifier:(id)identifier;
-(void)_sendMessage:(long long)message withMessagePacker:(id)messagePacker replyHandler:(id)handler replyQueue:(id)queue;
-(void)_sendMessage:(long long)message withMessagePacker:(id)messagePacker replyHandler:(id)handler;
-(void)_sendMessage:(long long)message withMessagePacker:(id)messagePacker;
-(void)_handleMessage:(id)message;
-(void)_releaseApplicationActivationAssertion:(id)assertion;
-(void)_acquireApplicationActivationAssertion:(id)assertion uniqueID:(id)anId name:(id)name;
-(id)newActivationAssertionForApplication:(id)application named:(id)named;
-(void)_handleDidBecomeReceiverFrom:(id)_handle to:(id)to workspaceWillResume:(BOOL)workspace;
-(id)_handleWillBecomeReceiverFrom:(id)_handle to:(id)to activationToken:(id)token;
-(void)application:(id)application resumeActiveForReason:(int)reason;
-(void)application:(id)application resignActiveForReason:(int)reason;
-(void)application:(id)application sendSimpleGSEvent:(int)event withSubtype:(int)subtype;
-(void)application:(id)application sendSimpleGSEvent:(int)event;
-(void)application:(id)application setNowPlayingWithAudio:(BOOL)audio;
-(void)application:(id)application setTaskPort:(id)port;
-(BOOL)isApplicationConnectedToExternalAccessory:(id)externalAccessory;
-(void)application:(id)application setIsConnectedToExternalAccessory:(BOOL)externalAccessory;
-(double)backgroundTimeRemaining:(id)remaining;
-(BOOL)isBeingDebugged:(id)debugged;
-(void)elapsedCPUTimesForApplications:(id)applications completion:(id)completion;
-(BOOL)isApplicationRecordingAudio:(id)audio;
-(void)application:(id)application setRecordingAudio:(BOOL)audio;
-(id)_infoForBundleIdentifier:(id)bundleIdentifier;
// declared property setter: -(void)setTopEventPortOverride:(id)override;
-(void)shutdown:(BOOL)shutdown;
-(BOOL)isBusy;
// converted property getter: -(BOOL)isLocked;
// converted property setter: -(void)setLocked:(BOOL)locked;
-(void)resume:(id)resume;
-(void)suspend:(id)suspend;
-(void)kill:(id)kill withReason:(int)reason description:(id)description;
-(void)kill:(id)kill;
-(void)killall:(BOOL)killall;
-(id)runningBundleIDForPID:(int)pid;
-(id)runningApplications;
-(void)activate:(id)activate withActivation:(id)activation;
-(void)_noteWillActivateBundleIdentifier:(id)_note suspended:(BOOL)suspended activationToken:(id)token;
-(void)_clearActivationStateForBundleID:(id)bundleID;
-(id)_activationTokenForBundleID:(id)bundleID;
// converted property getter: -(id)activatingApplications;
-(id)topActivatingApplication;
-(id)topApplication;
-(id)description;
-(BOOL)_isServerBeingDebugged;
-(void)invalidate;
-(void)_invalidateConnection;
-(void)_reregister;
-(void)_registerWithServer;
-(void)dealloc;
-(id)initWithQueue:(id)queue;
-(id)init;
@end

