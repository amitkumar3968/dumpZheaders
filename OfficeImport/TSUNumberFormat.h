/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "TSUNumberFormatting.h"
#import "OfficeImport-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSArray, NSString, NSIndexSet;

__attribute__((visibility("hidden")))
@interface TSUNumberFormat : XXUnknownSuperclass <TSUNumberFormatting> {
@private
	int mValueType;
	NSString* mFormatString;
	unsigned short mDecimalPlaces;
	NSString* mCurrencyCode;
	BOOL mUseAccountingStyle;
	int mNegativeStyle;
	BOOL mShowThousandsSeparator;
	int mFractionAccuracy;
	BOOL mFormatStringRequiresSuppressionOfMinusSign;
	BOOL mUseScientificFormattingAutomatically;
	BOOL mIgnoreDecimalPlacesForZeroValue;
	NSString* mPrefixString;
	NSString* mSuffixString;
	unsigned char mBase;
	unsigned short mBasePlaces;
	BOOL mBaseUseMinusSign;
	BOOL mIsCustom;
	double mScaleFactor;
	BOOL mFormatStringContainsTabCharacter;
	BOOL mFormatContainsSpecialTokens;
	BOOL mFormatContainsIntegerToken;
	unsigned char mNumberOfHashDecimalPlaceholders;
	unsigned char mTotalNumberOfDecimalPlaceholdersInFormat;
	BOOL mRequiresFractionReplacement;
	NSArray* mInterstitialStrings;
	NSIndexSet* mInterstitialStringInsertionIndexes;
	unsigned short mIndexFromRightOfLastDigitPlaceholder;
	BOOL mIsTextFormat;
	unsigned char mMinimumIntegerWidth;
	unsigned char mDecimalWidth;
	unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;
	unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;
	NSString* mFormatName;
}
@property(assign) BOOL ignoreDecimalPlacesForZeroValue;	// converted property
@property(assign) BOOL useScientificFormattingAutomatically;	// converted property
@property(retain) id formatName;	// converted property
+(id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy prefixString:(id)string9 suffixString:(id)string10 scaleFactor:(double)factor base:(unsigned short)base basePlaces:(unsigned short)places13 baseUseMinusSign:(BOOL)sign isCustom:(BOOL)custom formatName:(id)name;
+(id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy scaleFactor:(double)factor isCustom:(BOOL)custom formatName:(id)name;
+(id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy base:(unsigned short)base basePlaces:(unsigned short)places10 baseUseMinusSign:(BOOL)sign;
+(id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy suffixString:(id)string9;
+(id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy;
-(id)copyWithZone:(NSZone*)zone;
-(id)description;
-(BOOL)isEqual:(id)equal;
-(unsigned)hash;
-(id)customNumberFormatTokens;
-(BOOL)isEquivalent:(id)equivalent;
-(id)stringFromString:(id)string;
-(id)stringFromDouble:(double)aDouble decimalPlaces:(unsigned short)places minimumDecimalPlaces:(unsigned short)places3 forceSuppressMinusSign:(BOOL)sign;
-(id)stringFromDouble:(double)aDouble decimalPlaces:(unsigned short)places minimumDecimalPlaces:(unsigned short)places3;
-(id)stringFromDouble:(double)aDouble minimumDecimalPlaces:(unsigned short)places;
-(id)stringFromDouble:(double)aDouble minimumDecimalPlaces:(unsigned short)places forceSuppressMinusSign:(BOOL)sign;
-(id)stringFromDouble:(double)aDouble;
-(id)stringFromDouble:(double)aDouble forceSuppressMinusSign:(BOOL)sign;
-(id)chartLabelStringFromDouble:(double)aDouble forceSuppressMinusSign:(BOOL)sign;
-(id)chartLabelStringFromDouble:(double)aDouble;
-(id)chartLabelStringNofixFromDouble:(double)aDouble;
-(BOOL)requiresParensToBeReplacedWithSpacesForDouble:(double)aDouble;
-(BOOL)usesTabs;
// converted property setter: -(void)setIgnoreDecimalPlacesForZeroValue:(BOOL)zeroValue;
// converted property getter: -(BOOL)ignoreDecimalPlacesForZeroValue;
// converted property setter: -(void)setUseScientificFormattingAutomatically:(BOOL)automatically;
// converted property getter: -(BOOL)useScientificFormattingAutomatically;
-(BOOL)customFormatShouldAutoInsertPercentSymbol;
-(BOOL)hasValidDecimalPlaces;
-(BOOL)baseUseMinusSign;
-(unsigned short)basePlaces;
-(unsigned short)base;
-(BOOL)usesTextFormatForValue:(double)value;
-(BOOL)canFormatText;
-(BOOL)isTextFormat;
-(double)scaleFactor;
-(BOOL)usesAccountingStyle;
-(int)fractionAccuracy;
-(BOOL)showThousandsSeparator;
-(int)negativeStyle;
-(id)currencyCode;
-(id)formatString;
-(id)suffixString;
-(id)prefixString;
-(unsigned short)decimalPlaces;
-(int)valueType;
-(BOOL)isCustom;
// converted property getter: -(id)formatName;
// converted property setter: -(void)setFormatName:(id)name;
-(void)dealloc;
-(id)numberFormatBySettingBaseRepresentNegativeWithMinus:(BOOL)minus;
-(id)numberFormatBySettingBasePlaces:(unsigned short)places;
-(id)numberFormatBySettingBase:(unsigned short)base;
-(id)numberFormatBySettingUseAccountingStyle:(BOOL)style;
-(id)numberFormatBySettingFractionAccuracy:(int)accuracy;
-(id)numberFormatBySettingShowThousandsSeparator:(BOOL)separator;
-(id)numberFormatBySettingDecimalPlaces:(unsigned short)places andNegativeStyle:(int)style;
-(id)numberFormatBySettingNegativeStyle:(int)style;
-(id)numberFormatBySettingCurrencyCode:(id)code;
-(id)numberFormatByIncrementingDecimalPlaces:(short)places;
-(id)numberFormatBySettingSuffixString:(id)string;
-(id)numberFormatBySettingPrefixString:(id)string;
-(id)numberFormatBySettingDecimalPlaces:(unsigned short)places;
-(id)numberFormatBySettingValueType:(int)type;
-(id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy prefixString:(id)string9 suffixString:(id)string10 scaleFactor:(double)factor base:(unsigned short)base basePlaces:(unsigned short)places13 baseUseMinusSign:(BOOL)sign isCustom:(BOOL)custom interstitialStrings:(id)strings interstitialStringInsertionIndexes:(id)indexes indexFromRightOfLastDigitPlaceholder:(unsigned short)lastDigitPlaceholder minimumIntegerWidth:(unsigned char)width decimalWidth:(unsigned char)width20 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)nonSpaceIntegerPlaceholderDigits numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)nonSpaceDecimalPlaceholderDigits isTextFormat:(BOOL)format formatName:(id)name;
-(id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy suffixString:(id)string9;
-(id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy base:(unsigned short)base basePlaces:(unsigned short)places10 baseUseMinusSign:(BOOL)sign;
-(id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy;
-(id)initCustomFormatWithFormatString:(id)formatString currencyCode:(id)code showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy scaleFactor:(double)factor interstitialStrings:(id)strings interstitialStringInsertionIndexes:(id)indexes indexFromRightOfLastDigitPlaceholder:(unsigned short)lastDigitPlaceholder minimumIntegerWidth:(unsigned char)width decimalWidth:(unsigned char)width10 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)nonSpaceIntegerPlaceholderDigits numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)nonSpaceDecimalPlaceholderDigits isTextFormat:(BOOL)format formatName:(id)name;
-(id)init;
-(id)baseStringFromDouble:(double)aDouble;
-(id)fractionStringFromDouble:(double)aDouble;
@end

