/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class TSUNoCopyDictionary, NSMutableDictionary, PBOfficeArtWriterState, ESDContainer, ESDObject, ESDRoot, PDPresentation, PDSlideBase;
@protocol OCCancelDelegate;

__attribute__((visibility("hidden")))
@interface PBPresentationWriterState : XXUnknownSuperclass {
@private
	PBOfficeArtWriterState* mOfficeArtState;
	PDPresentation* mSrcPresentation;
	OcSummary* mTgtSummary;
	ESDRoot* mTgtDocumentRoot;
	ESDRoot* mTgtPicturesRoot;
	ESDContainer* mTgtMasterSlideListHolder;
	ESDContainer* mTgtRegularSlideListHolder;
	ESDContainer* mTgtNotesSlideListHolder;
	CFDictionaryRef mSrcFontNameToTgtFontIndexMap;
	ESDContainer* mTgtFontCollectionHolder;
	PptDocumentAtom* mTgtDocumentAtom;
	ESDObject* mTgtObjectListAtomHolder;
	ESDObject* mTgtSoundCollectionAtomHolder;
	ESDContainer* mTgtBinaryTagData9;
	NSMutableDictionary* mTgtDocProgTagDatas;
	vector<PBWriterMasterStyleInfo, std::allocator<PBWriterMasterStyleInfo> >* mDocMasterStyleInfoVector;
	PDSlideBase* mCurrentSrcSlideBase;
	hash_map<PDSlideBase* , PBWriterMasterSlideInfo, PBPointerHash, std::equal_to<PDSlideBase* >, std::allocator<PBWriterMasterSlideInfo> >* mSrcSlideMasterOrLayoutInfoMap;
	PBWriterMasterSlideInfo* mCurrentMasterSlideInfo;
	id<OCCancelDelegate> mCancel;
	TSUNoCopyDictionary* mTransitionMap;
	TSUNoCopyDictionary* mEntranceBuildMap;
	TSUNoCopyDictionary* mExitBuildMap;
}
@property(retain, nonatomic) id<OCCancelDelegate> cancelDelegate;	// @synthesize=mCancel
@property(retain, nonatomic) TSUNoCopyDictionary* exitBuildMap;	// @synthesize=mExitBuildMap
@property(retain, nonatomic) TSUNoCopyDictionary* entranceBuildMap;	// @synthesize=mEntranceBuildMap
@property(retain, nonatomic) TSUNoCopyDictionary* transitionMap;	// @synthesize=mTransitionMap
@property(assign) ESDObject* targetSoundCollectionAtomHolder;	// @synthesize=mTgtSoundCollectionAtomHolder
@property(assign) ESDObject* targetObjectListAtomHolder;	// @synthesize=mTgtObjectListAtomHolder
@property(assign) PptDocumentAtom* targetDocumentAtom;	// @synthesize=mTgtDocumentAtom
@property(assign) PDSlideBase* currentSourceSlideBase;
@property(assign) ESDContainer* targetFontCollectionHolder;	// @synthesize=mTgtFontCollectionHolder
@property(assign) ESDContainer* targetNotesSlideListHolder;	// @synthesize=mTgtNotesSlideListHolder
@property(assign) ESDContainer* targetRegularSlideListHolder;	// @synthesize=mTgtRegularSlideListHolder
@property(assign) ESDContainer* targetMasterSlideListHolder;	// @synthesize=mTgtMasterSlideListHolder
@property(retain, nonatomic) ESDRoot* targetPicturesRoot;	// @synthesize=mTgtPicturesRoot
@property(retain) ESDRoot* targetDocumentRoot;	// @synthesize=mTgtDocumentRoot
@property(assign) OcSummary* targetSummary;	// @synthesize=mTgtSummary
@property(readonly, assign) PDPresentation* sourcePresentation;	// @synthesize=mSrcPresentation
@property(readonly, assign) PBOfficeArtWriterState* officeArtState;	// @synthesize=mOfficeArtState
// declared property setter: -(void)setCancelDelegate:(id)delegate;
// declared property getter: -(id)cancelDelegate;
// declared property setter: -(void)setExitBuildMap:(id)map;
// declared property getter: -(id)exitBuildMap;
// declared property setter: -(void)setEntranceBuildMap:(id)map;
// declared property getter: -(id)entranceBuildMap;
// declared property setter: -(void)setTransitionMap:(id)map;
// declared property getter: -(id)transitionMap;
// declared property setter: -(void)setTargetSummary:(OcSummary*)summary;
// declared property getter: -(OcSummary*)targetSummary;
// declared property setter: -(void)setTargetSoundCollectionAtomHolder:(id)holder;
// declared property getter: -(id)targetSoundCollectionAtomHolder;
// declared property setter: -(void)setTargetObjectListAtomHolder:(id)holder;
// declared property getter: -(id)targetObjectListAtomHolder;
// declared property setter: -(void)setTargetDocumentAtom:(PptDocumentAtom*)atom;
// declared property getter: -(PptDocumentAtom*)targetDocumentAtom;
// declared property setter: -(void)setTargetFontCollectionHolder:(id)holder;
// declared property getter: -(id)targetFontCollectionHolder;
// declared property setter: -(void)setTargetNotesSlideListHolder:(id)holder;
// declared property getter: -(id)targetNotesSlideListHolder;
// declared property setter: -(void)setTargetRegularSlideListHolder:(id)holder;
// declared property getter: -(id)targetRegularSlideListHolder;
// declared property setter: -(void)setTargetMasterSlideListHolder:(id)holder;
// declared property getter: -(id)targetMasterSlideListHolder;
// declared property getter: -(id)officeArtState;
// declared property setter: -(void)setTargetPicturesRoot:(id)root;
// declared property getter: -(id)targetPicturesRoot;
// declared property setter: -(void)setTargetDocumentRoot:(id)root;
// declared property getter: -(id)targetDocumentRoot;
// declared property getter: -(id)sourcePresentation;
-(BOOL)isCancelled;
-(PBWriterMasterStyleInfo*)docTargetMasterStyleInfoOfType:(int)type;
-(PBWriterMasterSlideInfo*)currentMasterSlideInfo;
// declared property setter: -(void)setCurrentSourceSlideBase:(id)base;
// declared property getter: -(id)currentSourceSlideBase;
-(unsigned short)targetIndexForSourceFontName:(id)sourceFontName;
-(id)targetOutlineTextFormatContainerWithProgTagName:(const unsigned short*)progTagName;
-(void)setTargetDocProgTagData:(id)data withName:(const unsigned short*)name;
-(id)targetDocProgTagDataWithName:(const unsigned short*)name;
-(void)dealloc;
-(id)initWithSourcePresentation:(id)sourcePresentation;
@end

