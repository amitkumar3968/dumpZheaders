/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "OfficeImport-Structs.h"
#import "NSCopying.h"


__attribute__((visibility("hidden")))
@interface TSUColor : XXUnknownSuperclass <NSCopying> {
@private
	CGColorRef mCGColor;
}
@property(readonly, assign) CGColorRef CGColor;	// @synthesize=mCGColor
+(id)brownColor;
+(id)purpleColor;
+(id)orangeColor;
+(id)magentaColor;
+(id)yellowColor;
+(id)cyanColor;
+(id)blueColor;
+(id)greenColor;
+(id)redColor;
+(id)lightGrayColor;
+(id)grayColor;
+(id)whiteColor;
+(id)blackColor;
+(id)clearColor;
+(id)randomColor;
+(id)colorWithUIColor:(id)uicolor;
+(id)colorWithHue:(float)hue saturation:(float)saturation brightness:(float)brightness alpha:(float)alpha;
+(id)colorWithWhite:(float)white alpha:(float)alpha;
+(id)colorWithRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha;
+(id)colorWithCGColor:(CGColorRef)cgcolor;
+(id)stringForColor:(id)color;
+(id)stringForSystemColorID:(int)systemColorID;
+(id)colorWithSystemColorID:(int)systemColorID;
+(id)colorWithBGR:(unsigned long)bgr;
+(id)colorWithBinaryRed:(int)binaryRed green:(int)green blue:(int)blue alpha:(int)alpha;
+(id)colorWithBinaryRed:(int)binaryRed green:(int)green blue:(int)blue;
+(id)colorWithPatternImage:(id)patternImage;
+(id)colorWithCalibratedHue:(float)calibratedHue saturation:(float)saturation brightness:(float)brightness alpha:(float)alpha;
+(id)colorWithCalibratedRed:(float)calibratedRed green:(float)green blue:(float)blue alpha:(float)alpha;
+(id)colorWithRGBValue:(long)rgbvalue;
+(id)colorWithBGRValue:(long)bgrvalue;
+(id)colorWithEshColor:(const EshColor*)eshColor;
+(id)colorWithCsColour:(const CsColour*)csColour;
+(id)colorWithRGBBytes:(unsigned char)rgbbytes :(unsigned char)arg2 :(unsigned char)arg3;
+(id)colorWithDeviceRed:(float)deviceRed green:(float)green blue:(float)blue alpha:(float)alpha;
// declared property getter: -(CGColorRef)CGColor;
-(void)paintPath:(CGPathRef)path inContext:(CGContextRef)context;
-(void)paintRect:(CGRect)rect inContext:(CGContextRef)context;
-(id)blendedColorWithFraction:(float)fraction ofColor:(id)color;
-(BOOL)isOpaque;
-(float)luminance;
-(id)colorWithAlphaComponent:(float)alphaComponent;
-(id)invertedColor;
-(id)grayscaleColor;
-(id)UIColor;
-(float)alphaComponent;
-(float)blueComponent;
-(float)greenComponent;
-(float)redComponent;
-(float)p_rgbComponentWithIndex:(unsigned char)index;
-(id)copyWithZone:(NSZone*)zone;
-(BOOL)isEqual:(id)equal;
-(unsigned)hash;
-(void)dealloc;
-(id)initWithUIColor:(id)uicolor;
-(id)initWithHue:(float)hue saturation:(float)saturation brightness:(float)brightness alpha:(float)alpha;
-(id)initWithWhite:(float)white alpha:(float)alpha;
-(id)initWithRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha;
-(id)initWithCGColor:(CGColorRef)cgcolor;
-(id)colorWithShadeValue:(double)shadeValue;
-(id)colorWithTintValue:(double)tintValue;
-(unsigned long)toBGR;
-(id)solidColoredPngImage;
-(id)newSolidColoredBitmap:(CGSize)bitmap;
-(tagRgbQuad)ttColor;
-(id)copy;
-(void)set;
-(id)initWithPatternImage:(id)patternImage;
-(EshColor)eshColor;
-(CsColour)csColour;
-(void)getRGBBytes:(char*)bytes :(char*)arg2 :(char*)arg3;
-(void)getRed:(float*)red green:(float*)green blue:(float*)blue alpha:(float*)alpha;
-(BOOL)isBlack;
-(BOOL)isEqualToColor:(id)color;
-(CGColorRef)cgColorRef;
@end

