/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

#import "GKSimpleTimerDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "GameKitServices-Structs.h"

@class NSString, GKAsyncSocket, NSObject, GKSimpleTimer, NSMutableArray, NSMutableData;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface GKDiscoveryPeerConnection : XXUnknownSuperclass <GKSimpleTimerDelegate> {
@private
	NSString* _remoteServiceName;
	NSString* _localServiceName;
	id _peer;
	BOOL _connected;
	GKAsyncSocket* _connectionSocket;
	NSMutableData* _dataReceived;
	unsigned _currentSequenceNumber;
	NSMutableData* _dataToSendHoldingQueue;
	NSMutableArray* _receivedDataHoldingQueue;
	NSMutableArray* _messageReceiptHandlerList;
	NSMutableArray* _messageReceiptHandlerHoldingQueue;
	id _receiveDataHandler;
	id _connectedHandler;
	NSObject<OS_dispatch_queue>* _syncQueue;
	NSObject<OS_dispatch_queue>* _targetQueue;
	GKSimpleTimer* _heartbeatTimer;
	GKSimpleTimer* _heartbeatTimeoutTimer;
	GKSimpleTimer* _timeoutTimer;
	double _connectionTimeoutInSeconds;
	double _heartbeatIntervalInSeconds;
}
@property(copy, nonatomic) NSString* localServiceName;	// @synthesize=_localServiceName
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* targetQueue;	// @synthesize=_targetQueue
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* syncQueue;	// @synthesize=_syncQueue
@property(copy, nonatomic) id connectedHandler;	// @synthesize=_connectedHandler
@property(copy, nonatomic) id receiveDataHandler;	// @synthesize=_receiveDataHandler
@property(copy, nonatomic) NSString* remoteServiceName;	// @synthesize=_remoteServiceName
+(unsigned)receiveDataLimit;
+(unsigned)sendDataLimit;
+(void)checkConstants;
// declared property setter: -(void)setReceiveDataHandler:(id)handler;
// declared property getter: -(id)receiveDataHandler;
// declared property setter: -(void)setConnectedHandler:(id)handler;
// declared property getter: -(id)connectedHandler;
// declared property getter: -(id)targetQueue;
// declared property getter: -(id)syncQueue;
// declared property setter: -(void)setLocalServiceName:(id)name;
// declared property getter: -(id)localServiceName;
// declared property setter: -(void)setRemoteServiceName:(id)name;
// declared property getter: -(id)remoteServiceName;
-(void)sendData:(id)data withCompletionHandler:(id)completionHandler;
-(void)dealloc;
-(void)invalidate;
-(void)syncCloseConnectionNow;
-(void)syncReceivedData:(id)data error:(id)error;
-(void)timeout:(id)timeout;
-(void)syncProcessMessage:(int)message data:(id)data sequenceNumber:(unsigned)number;
-(void)syncSendMessageReceipt:(int)receipt sequenceNumber:(unsigned)number;
-(void)syncAcceptedConnection;
-(void)syncSendAccept;
-(void)syncSendHello;
-(void)syncSendMessage:(int)message data:(id)data withCompletionHandler:(id)completionHandler;
-(BOOL)shouldDecideAboutConnection;
-(void)attachSocketDescriptor:(int)descriptor;
-(void)connectToSockAddr:(const sockaddr*)sockAddr port:(unsigned short)port;
-(BOOL)syncSetupNewSocket;
-(void)syncConnected:(id)connected;
// declared property setter: -(void)setTargetQueue:(id)queue;
// declared property setter: -(void)setSyncQueue:(id)queue;
-(id)initWithLocalServiceName:(id)localServiceName;
@end

