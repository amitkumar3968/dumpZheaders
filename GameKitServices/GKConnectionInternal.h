/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

#import "CDXClientDelegate.h"
#import "GameKitServices-Structs.h"
#import "CDXClientSessionDelegate.h"
#import "GKConnection.h"

@class NSObject, NSMutableDictionary, NSString, NSMutableArray, CDXClient, NSData;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface GKConnectionInternal : GKConnection <CDXClientDelegate, CDXClientSessionDelegate> {
@private
	unsigned _gckPID;
	NSString* _pidGUID;
	OpaqueGCKSession* _gckSession;
	NSMutableArray* _gckEventList;
	BOOL _toForwardEVents;
	id _eventDelegate;
	CDXClient* _cdxClient;
	NSMutableDictionary* _cdxSessions;
	NSData* _preblob;
	id _preblobCallback;
	double _preblobCallbackCancelTime;
	opaque_pthread_mutex_t _xPreblobFetch;
	opaque_pthread_cond_t _cPreblobFetch;
	opaque_pthread_mutex_t _xPrepareThread;
	opaque_pthread_cond_t _cPrepareThread;
	int _fPrepareThread;
	double _wakeTime;
	NSMutableDictionary* _preblobToPIDMap;
	NSMutableDictionary* _pidToPreblobMap;
	NSMutableDictionary* _pidToConnectionDataMap;
	NSMutableArray* _pendingConnectionPIDList;
	BOOL _fAllowMoreRelay;
	NSMutableArray* _allowRelayPIDList;
	NSMutableDictionary* _pidToPlayerIDMap;
	NSMutableDictionary* _pidToConnectTimeoutSource;
	opaque_pthread_mutex_t _xRelay;
	NSMutableDictionary* _pidToRelayInitiateInfoMap;
	NSMutableDictionary* _pidToRelayConnectionDataMap;
	NSMutableDictionary* _pidToRelayUpdateInfoMap;
	NSMutableDictionary* _initRelayQueue;
	NSMutableDictionary* _updateRelayQueue;
	int _fPreReleased;
	int _localGamingCDXSocket;
	unsigned short _localGamingCDXPort;
	NSObject<OS_dispatch_source>* _localGamingCDXListenSource;
	NSMutableDictionary* _localGamingSocketToPIDMap;
	NSMutableDictionary* _localGamingSocketToConnectionDataMap;
}
@property(retain) NSMutableDictionary* pidToConnectTimeoutSource;	// @synthesize=_pidToConnectTimeoutSource
@property(retain) NSMutableDictionary* cdxSessions;	// @synthesize=_cdxSessions
@property(retain, nonatomic) CDXClient* cdxClient;	// @synthesize=_cdxClient
@property(assign) id eventDelegate;	// converted property
@property(readonly, assign) unsigned gckPID;	// converted property
@property(readonly, assign) OpaqueGCKSession* gckSession;	// converted property
// declared property setter: -(void)setCdxSessions:(id)sessions;
// declared property getter: -(id)cdxSessions;
// declared property getter: -(id)cdxClient;
// declared property setter: -(void)setPidToConnectTimeoutSource:(id)connectTimeoutSource;
// declared property getter: -(id)pidToConnectTimeoutSource;
-(id)getLocalConnectionDataForLocalGaming;
-(BOOL)startListeningForLocalGamingCDX;
-(void)localGamingReceiveDataHandler:(id)handler data:(id)data time:(double)time error:(id)error;
-(BOOL)localGamingCheckEstablishConnection:(id)connection connectionData:(id)data;
-(id)networkStatistics;
-(id)networkStatisticsDictionaryForGCKStats:(void*)gckstats;
-(void)cancelConnectParticipant:(id)participant;
-(void)updateRelayWithParticipant:(id)participant withConnectionData:(id)connectionData withRelayInfo:(id)relayInfo didInitiate:(BOOL)initiate;
-(void)internalUpdateRelayWithParticipant:(id)participant withConnectionData:(id)connectionData withRelayInfo:(id)relayInfo didInitiate:(BOOL)initiate;
-(void)initiateRelayWithParticipant:(id)participant withConnectionData:(id)connectionData withRelayInfo:(id)relayInfo didInitiate:(BOOL)initiate;
-(void)internalInitiateRelayWithParticipant:(id)participant withConnectionData:(id)connectionData withRelayInfo:(id)relayInfo didInitiate:(BOOL)initiate;
-(void)doRelayCheckForRemotePeerID:(id)remotePeerID;
-(id)createRelayUpdateDictionaryForParticipant:(id)participant didInitiate:(BOOL)initiate;
-(id)createInitiateRelayDictionaryForParticipant:(id)participant remotePeerID:(id)anId;
-(void)setParticipantID:(id)anId forPeerID:(id)peerID;
-(BOOL)convertPeerID:(id)anId toParticipantID:(id*)participantID;
-(BOOL)convertParticipantID:(id)anId toPeerID:(id*)peerID;
-(void)CDXClientSession:(id)session receivedData:(id)data from:(int)from;
-(id)extractBlobUsingData:(id)data withSourcePID:(unsigned)sourcePID destPID:(unsigned)pid;
-(void)CDXClient:(id)client preblob:(id)preblob;
-(void)CDXClient:(id)client error:(id)error;
-(id)createInsecureTicketUsingSortedConnectionsFromList:(id)list;
// declared property setter: -(void)setCdxClient:(id)client;
// converted property getter: -(unsigned)gckPID;
// converted property getter: -(id)eventDelegate;
// converted property setter: -(void)setEventDelegate:(id)delegate;
-(void)addEvent:(XXStruct_jB8chB*)event remotePeer:(unsigned)peer;
// converted property getter: -(OpaqueGCKSession*)gckSession;
-(void)internal_setRemoteConnectionData:(id)data fromParticipantID:(id)participantID pendingConnectionPIDList:(id)list;
-(void)connectParticipantsWithConnectionData:(id)connectionData withSessionInfo:(id)sessionInfo;
-(BOOL)shouldWeInitiateRelayWithPID:(unsigned)pid;
-(void)connectPendingConnectionsFromList:(id)list sessionInfo:(id)info;
-(void)getLocalConnectionDataWithCompletionHandler:(id)completionHandler;
-(id)asyncWorkQueue;
-(id)timerQueue;
-(void)dealloc;
-(void)preRelease;
-(id)initWithParticipantID:(id)participantID;
@end

