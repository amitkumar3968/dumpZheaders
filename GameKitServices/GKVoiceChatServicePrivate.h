/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

#import "VideoConferenceDelegate.h"
#import "VideoConferenceRealTimeChannel.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "GameKitServices-Structs.h"

@class LoopbackSocketTunnel, NSRecursiveLock, NSLock, GKVoiceChatService, VideoConference, GKVoiceChatDictionary, NSString;
@protocol GKVoiceChatClient;

@interface GKVoiceChatServicePrivate : XXUnknownSuperclass <VideoConferenceDelegate, VideoConferenceRealTimeChannel> {
@private
	id<GKVoiceChatClient> client;
	BOOL outputMeteringEnabled;
	BOOL inputMeteringEnabled;
	float outputMeterLevel;
	float inputMeterLevel;
	BOOL microphoneMuted;
	int curCallID;
	int state;
	GKVoiceChatDictionary* incomingCallDict;
	GKVoiceChatDictionary* outgoingCallDict;
	NSString* sdp;
	tagCONNRESULT currentConnResult;
	LoopbackSocketTunnel* tunnel;
	NSRecursiveLock* stateLock;
	NSLock* clientLock;
	GKVoiceChatService* wrapperService;
	int didUseICE;
	int bundle;
	BOOL forceNoICE;
	VideoConference* conf;
	BOOL clientHasRTChannel;
	int chatMode;
	BOOL focus;
}
@property(readonly, assign) double remoteBitrate;
@property(readonly, assign) double remoteFramerate;
@property(readonly, assign) double localBitrate;
@property(readonly, assign) double localFramerate;
@property(assign, nonatomic) void* remoteVideoLayer;
@property(assign, nonatomic) void* localVideoLayer;
@property(assign, getter=isFocus) BOOL focus;	// @synthesize
@property(readonly, assign, nonatomic) float inputMeterLevel;	// @synthesize
@property(readonly, assign, nonatomic) float outputMeterLevel;	// @synthesize
@property(assign, getter=isInputMeteringEnabled) BOOL inputMeteringEnabled;	// @synthesize
@property(assign, getter=isOutputMeteringEnabled) BOOL outputMeteringEnabled;	// @synthesize
@property(assign) float remoteParticipantVolume;
@property(assign, getter=isMicrophoneMuted) BOOL microphoneMuted;
@property(assign, nonatomic) id client;	// @synthesize
@property(assign) GKVoiceChatService* wrapperService;	// @synthesize
@property(assign) int chatMode;	// @synthesize
@property(assign) int state;	// @synthesize
+(id)defaultVoiceChatService;
// declared property setter: -(void)setWrapperService:(id)service;
// declared property getter: -(id)wrapperService;
// declared property setter: -(void)setState:(int)state;
// declared property getter: -(int)state;
// declared property getter: -(id)client;
-(id)remoteDisplayNameForCallID:(int)callID;
-(id)localDisplayNameForCallID:(int)callID;
// declared property getter: -(double)remoteBitrate;
// declared property getter: -(double)remoteFramerate;
// declared property getter: -(double)localBitrate;
// declared property getter: -(double)localFramerate;
// declared property getter: -(void*)remoteVideoLayer;
// declared property setter: -(void)setRemoteVideoLayer:(void*)layer;
// declared property getter: -(void*)localVideoLayer;
// declared property setter: -(void)setLocalVideoLayer:(void*)layer;
-(void)vcArg:(id)arg sendRealTimeData:(id)data toParticipantID:(id)participantID;
-(void)videoConference:(id)conference didStopWithCallID:(int)callID error:(id)error;
-(void)videoConference:(id)conference didStartSession:(BOOL)session withCallID:(int)callID error:(id)error;
-(void)forceNoICE:(BOOL)ice;
// declared property getter: -(BOOL)isFocus;
// declared property setter: -(void)setFocus:(BOOL)focus;
// declared property getter: -(int)chatMode;
// declared property setter: -(void)setChatMode:(int)mode;
// declared property setter: -(void)setRemoteParticipantVolume:(float)volume;
// declared property getter: -(float)remoteParticipantVolume;
// declared property getter: -(BOOL)isMicrophoneMuted;
// declared property setter: -(void)setMicrophoneMuted:(BOOL)muted;
// declared property getter: -(float)inputMeterLevel;
// declared property getter: -(float)outputMeterLevel;
// declared property setter: -(void)setInputMeteringEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)isInputMeteringEnabled;
// declared property setter: -(void)setOutputMeteringEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)isOutputMeteringEnabled;
-(void)getNSError:(id*)error code:(int)code description:(id)description reason:(id)reason;
-(void)getNSError:(id*)error code:(int)code description:(id)description hResult:(long)result;
-(int)startICEConnectionCheck:(id)check isCaller:(BOOL)caller withCallID:(int)callID;
-(int)startICEConnectionCheck:(id)check isCaller:(BOOL)caller;
-(id)createInvite:(id*)invite toParticipant:(id)participant callID:(int*)anId;
-(id)createReplyUsingDictionary:(id)dictionary replyCode:(unsigned)code error:(id*)error;
-(BOOL)inviteIsValid:(id)valid;
-(void)receivedData:(id)data fromParticipantID:(id)participantID;
-(void)resetState;
-(void)receivedRealTimeData:(id)data fromParticipantID:(id)participantID;
-(void)informClientVoiceChatDidStop:(id)informClientVoiceChat;
-(void)informClientVoiceChatDidNotStartMainSelector:(id)informClientVoiceChat;
-(void)informClientVoiceChatDidNotStart:(id)informClientVoiceChat;
-(void)informClientVoiceChatDidStartMainSelector:(id)informClientVoiceChat;
-(void)informClientVoiceChatDidStart:(id)informClientVoiceChat;
-(void)informClientOfInviteFromParticipant:(id)participant;
// declared property setter: -(void)setClient:(id)client;
-(void)denyCallID:(int)anId;
-(BOOL)acceptCallID:(int)anId error:(id*)error;
-(void)stopVoiceChatWithParticipantID:(id)participantID;
-(void)stopVoiceChatProc:(id)proc;
-(BOOL)startVoiceChatWithParticipantID:(id)participantID error:(id*)error;
-(void)dealloc;
-(void)cleanup;
-(id)init;
@end

