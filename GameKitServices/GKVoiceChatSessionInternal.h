/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "WifiListenerDelegate.h"
#import "GKSessionVoiceChatDelegate.h"
#import "GKVoiceChatClient.h"
#import "VideoConferenceSpeakingDelegate.h"

@class GKRWLock, NSMutableArray, GKSessionInternal, NSObject, GKVoiceChatServiceFocus, NSMutableDictionary, VoiceChatSessionRoster, NSString, NSArray, GKWifiListener;
@protocol GKVoiceChatSessionDelegate, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface GKVoiceChatSessionInternal : XXUnknownSuperclass <GKSessionVoiceChatDelegate, GKVoiceChatClient, VideoConferenceSpeakingDelegate, WifiListenerDelegate> {
@private
	NSString* _sessionName;
	unsigned _conferenceID;
	BOOL activeSession;
	float sessionVolume;
	BOOL focusCallbacks;
	GKSessionInternal* _gkSession;
	NSString* _peerID;
	NSMutableArray* _connectedPeers;
	NSMutableArray* _focusPausedPeers;
	NSMutableArray* _connectedVoicePeers;
	NSMutableArray* _connectedFocusPeers;
	NSMutableArray* _mutedPeers;
	NSMutableArray* _myPausedList;
	NSMutableDictionary* _peerChannelQuality;
	BOOL needsRecalculateGoodChannels;
	int goodChannels;
	unsigned talkingPeersLimit;
	BOOL isUsingSuppression;
	unsigned _sessionState;
	GKRWLock* _rwLock;
	GKVoiceChatServiceFocus* _vcService;
	VoiceChatSessionRoster* _roster;
	NSObject<OS_dispatch_queue>* _sendQueue;
	id<GKVoiceChatSessionDelegate> delegate;
	unsigned congestionState;
	id _publicWrapper;
	GKWifiListener* _wifiListener;
	BOOL _currentWifiState;
}
@property(assign) BOOL isUsingSuppression;
@property(assign) unsigned talkingPeersLimit;
@property(assign) float sessionVolume;
@property(assign, getter=isActiveSession) BOOL activeSession;
@property(readonly, assign) NSArray* peerList;
@property(readonly, assign, nonatomic) unsigned conferenceID;
@property(readonly, assign, nonatomic) NSString* sessionName;
@property(assign) id<GKVoiceChatSessionDelegate> delegate;
@property(readonly, assign) int goodChannels;	// converted property
+(void)brokenHash:(id)hash response:(char*)response;
// declared property getter: -(BOOL)isUsingSuppression;
// declared property setter: -(void)setIsUsingSuppression:(BOOL)suppression;
// declared property getter: -(unsigned)talkingPeersLimit;
// declared property setter: -(void)setTalkingPeersLimit:(unsigned)limit;
-(unsigned)peerCount;
-(void)parseConnectedPeers:(id)peers;
-(void)sendConnectedPeers;
-(void)updatedConnectedPeers:(id)peers;
-(void)updatedFocusPeers:(id)peers;
-(void)removeFromFocusPausedList:(id)focusPausedList;
-(void)addPeerToFocusPausedList:(id)focusPausedList;
-(void)pruneBadLinks;
-(void)unPauseAll;
-(void)pauseAll;
-(void)parseMutedPeers:(id)peers forPeer:(id)peer;
-(void)sendMutedPeers;
-(void)updatedMutedPeers:(id)peers forPeer:(id)peer;
-(void)updatedFocusID:(unsigned)anId;
-(void)updatedSubscribedBeaconList:(id)list;
-(void)handlePeerDisconnected:(id)disconnected;
-(BOOL)isEqual:(id)equal;
// declared property setter: -(void)setSessionVolume:(float)volume;
// declared property getter: -(float)sessionVolume;
// declared property getter: -(unsigned)conferenceID;
// declared property getter: -(id)sessionName;
// declared property getter: -(BOOL)isActiveSession;
// declared property setter: -(void)setActiveSession:(BOOL)session;
// declared property getter: -(id)peerList;
-(void)setMute:(BOOL)mute forPeer:(id)peer;
-(void)stopSessionInternal;
-(void)stopSession;
-(void)startSessionInternal;
-(void)startSession;
-(void)cleanupProc:(id)proc;
-(void)cleanup;
-(void)dealloc;
-(id)decodePeerID:(id)anId;
-(id)encodePeerID:(id)anId;
-(void)calculateConferenceID;
-(id)initWithGKSession:(id)gksession publicWrapper:(id)wrapper sessionName:(id)name;
-(void)wifiStateDidChange:(BOOL)wifiState;
-(void)session:(id)session didReceiveOOBAudioPacket:(id)packet fromPeerID:(id)peerID;
-(void)session:(id)session peer:(id)peer didChangeState:(int)state;
-(void)session:(id)session didReceiveAudioPacket:(id)packet fromPeerID:(id)peerID;
-(void)informClientVoiceChatFocusChange:(id)change;
-(void)informClientVoiceChatSilent:(id)silent;
-(void)informClientVoiceChatSpeaking:(id)speaking;
-(void)informClientVoiceChatDidStop:(id)informClientVoiceChat;
-(void)informClientVoiceChatCouldNotConnect:(id)connect;
-(void)informClientVoiceChatConnecting:(id)connecting;
-(void)informClientVoiceChatDidStart:(id)informClientVoiceChat;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(void)voiceChatService:(id)service didReceiveInvitationFromParticipantID:(id)participantID callID:(int)anId;
-(void)voiceChatService:(id)service didStopWithParticipantID:(id)participantID error:(id)error;
-(void)voiceChatService:(id)service didNotStartWithParticipantID:(id)participantID error:(id)error;
-(void)voiceChatService:(id)service didStartWithParticipantID:(id)participantID;
-(id)participantID;
-(void)voiceChatService:(id)service sendData:(id)data toParticipantID:(id)participantID;
-(void)didStopSpeaking:(id)speaking;
-(void)didStartSpeaking:(id)speaking;
-(void)lossRate:(float)rate forParticipantID:(id)participantID;
// converted property getter: -(int)goodChannels;
-(int)calculateChannelQualities;
@end

