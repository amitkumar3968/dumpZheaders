/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV
 */

#import "CoreDAVTaskGroup.h"
#import "CoreDAVDeleteTaskDelegate.h"
#import "CoreDAVPutTaskDelegate.h"
#import "CoreDAVGetTaskDelegate.h"

@class NSMutableArray, NSURL, NSMutableDictionary, NSString, NSArray, NSDictionary, NSMutableSet;
@protocol CoreDAVLocalDBInfoProvider;

@interface CoreDAVContainerSyncTaskGroup : CoreDAVTaskGroup <CoreDAVDeleteTaskDelegate, CoreDAVPutTaskDelegate, CoreDAVGetTaskDelegate> {
	int _phase;
	NSURL* _folderURL;
	NSString* _previousCTag;
	NSString* _nextCTag;
	BOOL _ensureUpdatedCTag;
	BOOL _useSyncCollection;
	NSString* _previousSyncToken;
	NSString* _nextSyncToken;
	NSMutableArray* _actions;
	void* _context;
	unsigned _multiGetBatchSize;
	NSMutableArray* _unsubmittedTasks;
	unsigned _maxIndependentTasks;
	NSURL* _addMemberURL;
	BOOL _useMultiGet;
	NSDictionary* _bulkRequests;
	NSString* _bulkChangeCheckCTag;
	NSMutableSet* _syncReportDeletedURLs;
	NSMutableDictionary* _urlToETag;
	Class _appSpecificDataItemClass;
	BOOL _syncItemOrder;
	NSMutableArray* _localItemURLOrder;
	NSMutableDictionary* _remainingUUIDsToAddActions;
	NSMutableDictionary* _remainingHREFsToModDeleteActions;
	BOOL _actionsOnly;
}
@property(retain) NSString* nextCTag;	// @synthesize=_nextCTag
@property(assign) BOOL ensureUpdatedCTag;	// @synthesize=_ensureUpdatedCTag
@property(readonly, assign) NSArray* localItemURLOrder;	// @synthesize=_localItemURLOrder
@property(assign) BOOL actionsOnly;	// @synthesize=_actionsOnly
@property(retain) NSString* bulkChangeCheckCTag;	// @synthesize=_bulkChangeCheckCTag
@property(retain) NSDictionary* bulkRequests;	// @synthesize=_bulkRequests
@property(retain) NSURL* addMemberURL;	// @synthesize=_addMemberURL
@property(assign) unsigned maxIndependentTasks;	// @synthesize=_maxIndependentTasks
@property(assign, nonatomic) id<CoreDAVLocalDBInfoProvider> delegate;	// @dynamic
@property(assign) BOOL useMultiGet;	// @synthesize=_useMultiGet
@property(assign) unsigned multiGetBatchSize;	// @synthesize=_multiGetBatchSize
@property(readonly, assign) void* context;	// @synthesize=_context
@property(assign) BOOL useSyncCollection;	// @synthesize=_useSyncCollection
@property(retain) NSString* previousSyncToken;	// @synthesize=_previousSyncToken
@property(retain) NSString* previousCTag;	// @synthesize=_previousCTag
@property(readonly, assign) NSURL* folderURL;	// @synthesize=_folderURL
// declared property setter: -(void)setActionsOnly:(BOOL)only;
// declared property getter: -(BOOL)actionsOnly;
// declared property setter: -(void)setBulkChangeCheckCTag:(id)tag;
// declared property getter: -(id)bulkChangeCheckCTag;
// declared property setter: -(void)setBulkRequests:(id)requests;
// declared property getter: -(id)bulkRequests;
// declared property getter: -(id)localItemURLOrder;
// declared property getter: -(void*)context;
// declared property setter: -(void)setUseSyncCollection:(BOOL)collection;
// declared property getter: -(BOOL)useSyncCollection;
// declared property setter: -(void)setPreviousSyncToken:(id)token;
// declared property getter: -(id)previousSyncToken;
// declared property setter: -(void)setEnsureUpdatedCTag:(BOOL)tag;
// declared property getter: -(BOOL)ensureUpdatedCTag;
// declared property setter: -(void)setNextCTag:(id)tag;
// declared property getter: -(id)nextCTag;
// declared property setter: -(void)setPreviousCTag:(id)tag;
// declared property getter: -(id)previousCTag;
// declared property getter: -(id)folderURL;
// declared property setter: -(void)setUseMultiGet:(BOOL)get;
// declared property getter: -(BOOL)useMultiGet;
// declared property setter: -(void)setMaxIndependentTasks:(unsigned)tasks;
// declared property getter: -(unsigned)maxIndependentTasks;
// declared property setter: -(void)setMultiGetBatchSize:(unsigned)size;
// declared property getter: -(unsigned)multiGetBatchSize;
// declared property setter: -(void)setAddMemberURL:(id)url;
// declared property getter: -(id)addMemberURL;
-(void)_getTask:(id)task finishedWithParsedContents:(id)parsedContents error:(id)error;
-(void)getTask:(id)task data:(id)data error:(id)error;
-(void)propFindTask:(id)task parsedResponses:(id)responses error:(id)error;
-(BOOL)shouldFetchMoreETags;
-(void)deleteTask:(id)task completedWithError:(id)error;
-(void)task:(id)task didFinishWithError:(id)error;
-(void)_bulkChangeTask:(id)task didFinishWithError:(id)error;
-(void)_syncReportTask:(id)task didFinishWithError:(id)error;
-(void)_postTask:(id)task didFinishWithError:(id)error;
-(void)applyAdditionalPropertiesFromPostTask:(id)postTask;
-(void)putTask:(id)task completedWithNewETag:(id)newETag error:(id)error;
-(void)applyAdditionalPropertiesFromPutTask:(id)putTask;
-(BOOL)isWhitelistedError:(id)error;
-(void)syncAway;
-(void)startTaskGroup;
-(void)_getDataPayloads;
-(void)_configureMultiGet:(id)get;
-(void)_getOrder;
-(void)_getETags;
-(id)copyGetEtagTaskWithPropertiesToFind:(id)find;
-(void)_bulkChange;
-(void)_sendNextBatch;
-(void)_pushActions;
-(id)copyPostTaskWithPayloadItem:(id)payloadItem forAction:(id)action;
-(id)copyPutTaskWithPayloadItem:(id)payloadItem forAction:(id)action;
-(void)_getCTag;
-(unsigned)_submitTasks;
-(void)cancelTaskGroup;
-(void)bailWithError:(id)error;
-(void)_tearDownAllUnsubmittedTasks;
-(void)taskGroupWillCancelWithError:(id)taskGroup;
-(BOOL)shouldFetchResourceWithEtag:(id)etag propertiesToValues:(id)values;
-(id)copyAdditionalResourcePropertiesToFetch;
-(Class)bulkChangeTaskClass;
-(id)dataContentType;
-(id)copyMultiGetTaskWithURLs:(id)urls;
-(id)copyGetTaskWithURL:(id)url;
-(id)description;
-(void)dealloc;
-(id)initWithFolderURL:(id)folderURL previousCTag:(id)tag previousSyncToken:(id)token actions:(id)actions syncItemOrder:(BOOL)order context:(void*)context accountInfoProvider:(id)provider taskManager:(id)manager;
@end

