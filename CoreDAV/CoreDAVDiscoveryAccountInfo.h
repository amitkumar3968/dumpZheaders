/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import "CoreDAV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSError, NSSet, NSURL, NSData, NSDictionary, NSString;

@interface CoreDAVDiscoveryAccountInfo : XXUnknownSuperclass <CoreDAVAccountInfoProvider> {
	NSString* _scheme;
	NSString* _host;
	NSString* _serverRoot;
	int _port;
	NSString* _user;
	NSString* _password;
	NSData* _identityPersist;
	NSURL* _principalURL;
	NSString* _accountID;
	NSDictionary* _serverHeaders;
	NSSet* _serverComplianceClasses;
	NSString* _userAgentHeader;
	BOOL _shouldFailAllTasks;
	BOOL _started;
	BOOL _success;
	NSError* _error;
	id<CoreDAVAccountInfoProvider> _backingAccountInfoProvider;
}
@property(retain) id<CoreDAVAccountInfoProvider> backingAccountInfoProvider;	// @synthesize=_backingAccountInfoProvider
@property(retain) NSError* error;	// @synthesize=_error
@property(assign) BOOL success;	// @synthesize=_success
@property(assign) BOOL started;	// @synthesize=_started
@property(assign) BOOL shouldFailAllTasks;	// @synthesize=_shouldFailAllTasks
@property(retain) NSString* userAgentHeader;	// @synthesize=_userAgentHeader
@property(retain) NSSet* serverComplianceClasses;	// @synthesize=_serverComplianceClasses
@property(retain) NSDictionary* serverHeaders;	// @synthesize=_serverHeaders
@property(retain) NSString* accountID;	// @synthesize=_accountID
@property(retain) NSURL* principalURL;	// @synthesize=_principalURL
@property(retain) NSString* scheme;	// @synthesize=_scheme
@property(retain) NSData* identityPersist;	// @synthesize=_identityPersist
@property(assign) int port;	// @synthesize=_port
@property(retain) NSString* user;	// @synthesize=_user
@property(retain) NSString* password;	// @synthesize=_password
@property(retain) NSString* serverRoot;	// @synthesize=_serverRoot
@property(retain) NSString* host;	// @synthesize=_host
// declared property setter: -(void)setUserAgentHeader:(id)header;
// declared property getter: -(id)userAgentHeader;
// declared property setter: -(void)setServerComplianceClasses:(id)classes;
// declared property getter: -(id)serverComplianceClasses;
// declared property setter: -(void)setServerHeaders:(id)headers;
// declared property getter: -(id)serverHeaders;
// declared property setter: -(void)setError:(id)error;
// declared property getter: -(id)error;
// declared property setter: -(void)setSuccess:(BOOL)success;
// declared property getter: -(BOOL)success;
// declared property setter: -(void)setStarted:(BOOL)started;
// declared property getter: -(BOOL)started;
// declared property setter: -(void)setBackingAccountInfoProvider:(id)provider;
// declared property getter: -(id)backingAccountInfoProvider;
// declared property setter: -(void)setShouldFailAllTasks:(BOOL)failAllTasks;
// declared property getter: -(BOOL)shouldFailAllTasks;
// declared property setter: -(void)setAccountID:(id)anId;
// declared property getter: -(id)accountID;
// declared property setter: -(void)setPrincipalURL:(id)url;
// declared property getter: -(id)principalURL;
// declared property setter: -(void)setIdentityPersist:(id)persist;
// declared property getter: -(id)identityPersist;
// declared property setter: -(void)setPassword:(id)password;
// declared property getter: -(id)password;
// declared property setter: -(void)setUser:(id)user;
// declared property getter: -(id)user;
// declared property setter: -(void)setServerRoot:(id)root;
// declared property getter: -(id)serverRoot;
// declared property setter: -(void)setPort:(int)port;
// declared property getter: -(int)port;
// declared property setter: -(void)setHost:(id)host;
// declared property getter: -(id)host;
// declared property setter: -(void)setScheme:(id)scheme;
// declared property getter: -(id)scheme;
-(BOOL)shouldUseOpportunisticSockets;
-(CFURLStorageSessionRef)copyStorageSession;
-(BOOL)shouldSendClientInfoHeaderForURL:(id)url;
-(BOOL)shouldHandleHTTPCookiesForURL:(id)url;
-(BOOL)handleShouldUseCredentialStorage;
-(BOOL)handleAuthenticateAgainstProtectionSpace:(id)space withConnection:(id)connection;
-(BOOL)handleAuthenticateAgainstProtectionSpace:(id)space;
-(BOOL)shouldRetryUnauthorizedConnection:(id)connection;
-(BOOL)shouldTurnModalOnBadPassword;
-(BOOL)handleCertificateError:(id)error;
-(BOOL)handleTrustChallenge:(id)challenge withConnection:(id)connection;
-(BOOL)handleTrustChallenge:(id)challenge;
-(id)oauthToken;
-(id)additionalHeaderValues;
-(void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;
-(id)url;
-(id)description;
-(void)dealloc;
-(id)initWithAccountInfoProvider:(id)accountInfoProvider;
@end

