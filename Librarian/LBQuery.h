/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Librarian.framework/Librarian
 */

#import "Librarian-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSPredicate, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSArray, NSObject, NSThread, NSMetadataQuery;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface LBQuery : XXUnknownSuperclass {
@private
	NSMetadataQuery* _query;
	unsigned _accumulatedItemCount;
	NSMutableArray* _changes;
	NSMutableDictionary* _toBeRemoved;
	NSMutableDictionary* _toBeReplaced;
	NSMutableDictionary* _toBeInserted;
	NSMutableIndexSet* _removalSet;
	NSMutableIndexSet* _replacementSet;
	NSMutableIndexSet* _insertionSet;
	bool _pendingChanges;
	bool _ubiquitousGatherComplete;
	int _queryState;
	int _previousQueryState;
	BOOL _synchronous;
	NSArray* _values;
	NSArray* _sortingAttributes;
	XXStruct_RaHehA _batchingParameters;
	NSMutableArray* _results;
	NSMutableDictionary* _resultsDict;
	/*function-pointer*/ void* _create_result_fn;
	void* _create_result_context;
	/*function-pointer*/ void* _create_result_callbacks_equal;
	/*function-pointer*/ void* _create_result_callbacks_release;
	/*function-pointer*/ void* _create_value_fn;
	void* _create_value_context;
	/*function-pointer*/ void* _create_value_callbacks_equal;
	/*function-pointer*/ void* _create_value_callbacks_release;
	NSArray* _searchScopes;
	unsigned long _scopeOptions;
	/*function-pointer*/ void* _sort_fn;
	void* _sort_context;
	NSObject<OS_dispatch_queue>* _notificationQueue;
	LBItemUpdateObserverRef _observer;
	NSThread* _executeThread;
	bool _pendingNote;
	unsigned long _notifyInterval;
	int _disableCount;
	NSMutableDictionary* _created;
	NSPredicate* _predicate;
	opaque_pthread_mutex_t _stateLock;
}
@property(readonly, retain) NSPredicate* predicate;	// converted property
-(void)postNote:(CFStringRef)note;
-(void)processUpdates;
-(void)_processUpdates;
-(void)_processChanges;
-(void)_createChangeSets;
-(void)_didInsert:(id)insert;
-(void)_didReplace:(id)replace;
-(void)_didRemove:(id)remove;
-(void)_willInsert:(id)insert;
-(void)_willReplace:(id)replace;
-(void)_willRemove:(id)remove;
-(void)_didChange:(unsigned)change inSet:(id)set;
-(void)_willChange:(unsigned)change inSet:(id)set;
-(void)setSortComparator:(/*function-pointer*/ void*)comparator withContext:(void*)context;
-(void)setSearchScope:(id)scope withOptions:(unsigned long)options;
-(void)setCreateValueFunction:(/*function-pointer*/ void*)function withContext:(void*)context callbacks:(const XXStruct_MSEYlC*)callbacks;
-(void)setCreateResultFunction:(/*function-pointer*/ void*)function withContext:(void*)context callbacks:(const XXStruct_MSEYlC*)callbacks;
-(void)setBatchingParameters:(XXStruct_RaHehA)parameters;
// converted property getter: -(id)predicate;
-(unsigned)resultCount;
-(const void*)resultAtIndex:(int)index;
-(int)indexOfResult:(const void*)result;
-(unsigned)countOfResultsForAttributeName:(id)attributeName value:(id)value;
-(id)attributeValueForName:(id)name forResultAtIndex:(int)index;
-(unsigned char)executeWithOptions:(unsigned long)options;
-(void)_runQuery;
-(void)startObserver;
-(void)_updateQueryResultForURL:(id)url info:(id)info updateType:(int)type;
-(void)updateQueryResultForURL:(id)url info:(id)info updateType:(int)type;
-(void)performBlock:(id)block;
-(void)runBlock:(id)block;
-(void)__updateQueryResultForURL:(id)url info:(id)info updateType:(int)type;
-(void)addChangeToURL:(id)url withInfo:(id)info;
-(void)addCreatedURL:(id)url withInfo:(id)info;
-(void)deleteURL:(id)url;
-(void)addItemWithURL:(id)url usingInfo:(id)info;
-(void)_sendNote;
-(void)sendNote;
-(void)stop;
-(void)_stop;
-(void)enableUpdates;
-(void)_enableUpdates;
-(void)disableUpdates;
-(void)_disableUpdates;
-(id)valuesOfAttribute:(id)attribute;
-(void)dealloc;
-(id)initWithQuery:(id)query values:(id)values sortingAttributes:(id)attributes items:(id)items;
@end

