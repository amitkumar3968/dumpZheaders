/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/TextInput.framework/TextInput
 */

typedef struct _NSZone NSZone;

typedef struct UCollator UCollator;

typedef struct __Mecabra Mecabra;

typedef struct __CFURL* CFURLRef;

typedef struct Input Input;

typedef struct _Vector_impl {
	Input* _field1;
	Input* _field2;
	Input* _field3;
} Vector_impl;

template<>
struct vector<KB::Input, std::allocator<KB::Input> > {
	Vector_impl _field1;
};

typedef struct String {
	unsigned short _field1;
	unsigned short _field2;
	unsigned short _field3;
	unsigned short _field4;
	unsigned char _field5;
	char* _field6;
	BOOL _field7[16];
} String;

template<>
struct HashTraits<KB::String>;

template<>
struct Bucket<KB::String, KB::Word>;

template<>
struct Hashmap<KB::String, KB::Word> {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	bool _field6;
	HashTraits<KB::String> _field7;
	Bucket<KB::String, KB::Word>* _field8;
	Bucket<KB::String, KB::Word>* _field9;
};

typedef struct __CFString* CFStringRef;

typedef struct __CFLocale* CFLocaleRef;

typedef struct DictionaryContainer DictionaryContainer;

template<>
struct RefPtr<KB::DictionaryContainer> {
	DictionaryContainer* _field1;
};

typedef struct StrokeBuildManager StrokeBuildManager;

template<>
struct Bucket<KB::String, KB::FPoint>;

template<>
struct Hashmap<KB::String, KB::FPoint> {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	bool _field6;
	HashTraits<KB::String> _field7;
	Bucket<KB::String, KB::FPoint>* _field8;
	Bucket<KB::String, KB::FPoint>* _field9;
};

template<>
struct RefPtr<TI::Favonius::LayoutKey>;

template<>
struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
	RefPtr<TI::Favonius::LayoutKey>* _field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field2;
};

typedef struct KeyboardLayout KeyboardLayout;

template<>
struct RefPtr<TI::Favonius::KeyboardLayout> {
	KeyboardLayout* _field1;
};

typedef struct _Vector_impl {
	String* _field1;
	String* _field2;
	String* _field3;
} Vector_impl;

template<>
struct vector<KB::String, std::allocator<KB::String> > {
	Vector_impl _field1;
};

typedef struct Logger Logger;

template<>
struct RefPtr<TI::Favonius::Logger> {
	Logger* _field1;
};

typedef struct TIInputManagerZephyr {
	/*function-pointer*/ void** _field1;
	vector<KB::Input, std::allocator<KB::Input> > _field2;
	String _field3;
	String _field4;
	unsigned _field5;
	unsigned _field6;
	Hashmap<KB::String, KB::Word> _field7;
	bool _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
	CFStringRef _field14;
	CFLocaleRef _field15;
	RefPtr<KB::DictionaryContainer> _field16;
	bool _field17;
	bool _field18;
	StrokeBuildManager* _field19;
	String _field20;
	Hashmap<KB::String, KB::FPoint> _field21;
	bool _field22;
	bool _field23;
	bool _field24;
	Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field25;
	RefPtr<TI::Favonius::KeyboardLayout> _field26;
	String _field27;
	vector<KB::String, std::allocator<KB::String> > _field28;
	RefPtr<TI::Favonius::Logger> _field29;
} TIInputManagerZephyr;

typedef struct TIAutoshiftRegularExpression* TIAutoshiftRegularExpressionRef;

template<>
struct RefPtr<TIAutoshiftRegularExpression> {
	TIAutoshiftRegularExpressionRef m_ptr;
};

typedef struct CGPoint {
	float _field1;
	float _field2;
} CGPoint;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct LinguisticTagDistribution LinguisticTagDistribution;

template<>
struct RefPtr<KB::LinguisticTagDistribution> {
	LinguisticTagDistribution* _field1;
};

typedef struct LinguisticTagWeights LinguisticTagWeights;

template<>
struct RefPtr<KB::LinguisticTagWeights> {
	LinguisticTagWeights* _field1;
};

typedef struct Word {
	String _field1;
	String _field2;
	float _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	float _field10;
	unsigned char _field11;
	unsigned _field12;
	RefPtr<KB::LinguisticTagDistribution> _field13;
	RefPtr<KB::LinguisticTagWeights> _field14;
} Word;

typedef struct _NSRange {
	unsigned location;
	unsigned length;
} NSRange;


