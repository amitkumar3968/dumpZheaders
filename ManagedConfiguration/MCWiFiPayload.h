/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
 */

#import "MCPayload.h"

@class NSDictionary, NSNumber, NSString, NSArray;

@interface MCWiFiPayload : MCPayload {
	NSString* _ssid;
	BOOL _hidden;
	NSString* _encryptionType;
	BOOL _isWEP;
	BOOL _isWPA;
	BOOL _autoJoin;
	NSDictionary* _eapClientConfig;
	BOOL _passwordRequired;
	BOOL _usernameRequired;
	NSString* _password;
	NSString* _username;
	NSString* _certificateUUID;
	NSArray* _payloadCertificateAnchorUUID;
	int _proxyType;
	NSString* _proxyServer;
	NSNumber* _proxyServerPort;
	NSString* _proxyPassword;
	NSString* _proxyPACURLString;
	NSString* _credentialUUID;
@private
	NSString* _proxyUsername;
}
@property(retain, nonatomic) NSString* credentialUUID;	// @synthesize=_credentialUUID
@property(readonly, assign, nonatomic) NSString* proxyPACURLString;	// @synthesize=_proxyPACURLString
@property(readonly, assign, nonatomic) NSString* proxyPassword;	// @synthesize=_proxyPassword
@property(readonly, assign, nonatomic) NSString* proxyUsername;	// @synthesize=_proxyUsername
@property(readonly, assign, nonatomic) NSNumber* proxyServerPort;	// @synthesize=_proxyServerPort
@property(readonly, assign, nonatomic) NSString* proxyServer;	// @synthesize=_proxyServer
@property(readonly, assign, nonatomic) int proxyType;	// @synthesize=_proxyType
@property(readonly, assign, nonatomic) NSArray* payloadCertificateAnchorUUID;	// @synthesize=_payloadCertificateAnchorUUID
@property(readonly, assign, nonatomic) NSString* certificateUUID;	// @synthesize=_certificateUUID
@property(readonly, assign, nonatomic) BOOL autoJoin;	// @synthesize=_autoJoin
@property(retain, nonatomic) NSString* username;	// @synthesize=_username
@property(readonly, assign, nonatomic) BOOL usernameRequired;	// @synthesize=_usernameRequired
@property(retain, nonatomic) NSString* password;	// @synthesize=_password
@property(readonly, assign, nonatomic) BOOL passwordRequired;	// @synthesize=_passwordRequired
@property(readonly, assign, nonatomic) NSDictionary* eapClientConfig;	// @synthesize=_eapClientConfig
@property(readonly, assign, nonatomic) BOOL isWPA;	// @synthesize=_isWPA
@property(readonly, assign, nonatomic) BOOL isWEP;	// @synthesize=_isWEP
@property(readonly, assign, nonatomic) NSString* encryptionType;	// @synthesize=_encryptionType
@property(readonly, assign, nonatomic) BOOL isHidden;	// @synthesize=_hidden
@property(readonly, assign, nonatomic) NSString* ssid;	// @synthesize=_ssid
+(id)localizedDescriptionForPayloadCount:(unsigned)payloadCount;
+(id)typeStrings;
// declared property setter: -(void)setCredentialUUID:(id)uuid;
// declared property getter: -(id)credentialUUID;
// declared property getter: -(id)proxyPACURLString;
// declared property getter: -(id)proxyPassword;
// declared property getter: -(id)proxyUsername;
// declared property getter: -(id)proxyServerPort;
// declared property getter: -(id)proxyServer;
// declared property getter: -(int)proxyType;
// declared property getter: -(id)payloadCertificateAnchorUUID;
// declared property getter: -(id)certificateUUID;
// declared property setter: -(void)setPassword:(id)password;
// declared property getter: -(id)password;
// declared property getter: -(BOOL)passwordRequired;
// declared property setter: -(void)setUsername:(id)username;
// declared property getter: -(id)username;
// declared property getter: -(BOOL)usernameRequired;
// declared property getter: -(id)eapClientConfig;
// declared property getter: -(BOOL)autoJoin;
// declared property getter: -(BOOL)isWPA;
// declared property getter: -(BOOL)isWEP;
// declared property getter: -(id)encryptionType;
// declared property getter: -(BOOL)isHidden;
// declared property getter: -(id)ssid;
-(void).cxx_destruct;
-(id)description;
-(id)subtitle2Description;
-(id)subtitle2Label;
-(id)subtitle1Description;
-(id)subtitle1Label;
-(id)stubDictionary;
-(id)initWithDictionary:(id)dictionary profile:(id)profile outError:(id*)error;
-(BOOL)_isEAPSIMConfig:(id)config;
-(id)_eapPasswordFromConfig:(id)config isRequired:(BOOL*)required;
-(id)_eapUsernameFromConfig:(id)config isRequired:(BOOL*)required;
-(BOOL)_configIsValid:(id)valid error:(id*)error;
@end

