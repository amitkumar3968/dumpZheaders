/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
 */

#import "ManagedConfiguration-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSData, NSString, NSDate, NSArray, NSObject;
@protocol OS_dispatch_queue;

@interface MCProfile : XXUnknownSuperclass {
@private
	NSString* _displayName;
	NSString* _profileDescription;
	NSString* _identifier;
	NSString* _UUID;
	NSString* _organization;
	int _version;
	NSDate* _installDate;
	NSDate* _expiryDate;
	BOOL _encrypted;
	BOOL _isLocked;
	NSString* _removalPasscode;
	BOOL _needsReboot;
	BOOL _isStub;
	NSString* _productBuildVersion;
	NSString* _productVersion;
	NSData* _profileData;
	NSDate* _removalDate;
	NSString* _localizedConsentText;
	int _trustLevel;
	BOOL _trustHasBeenEvaluated;
	NSObject<OS_dispatch_queue>* _trustEvaluationQueue;
	NSString* _signerSummary;
	NSArray* _signerCertificates;
	BOOL _signerHasBeenEvaluated;
	NSObject<OS_dispatch_queue>* _signerEvaluationQueue;
}
@property(retain, nonatomic) NSData* profileData;	// @synthesize=_profileData
@property(readonly, assign, nonatomic) NSDate* removalDate;	// @synthesize=_removalDate
@property(readonly, assign, nonatomic) NSString* localizedConsentText;	// @synthesize=_localizedConsentText
@property(readonly, assign, nonatomic) NSArray* installationWarnings;
@property(readonly, assign, nonatomic) BOOL isManagedByProfileService;
@property(readonly, assign, nonatomic) NSDate* expiryDate;	// @synthesize=_expiryDate
@property(readonly, assign, nonatomic) NSDate* earliestCertificateExpiryDate;
@property(readonly, assign, nonatomic) NSArray* localizedPayloadSummaryByType;
@property(readonly, assign, nonatomic) NSArray* payloads;
@property(readonly, assign, nonatomic) BOOL needsReboot;	// @synthesize=_needsReboot
@property(readonly, assign, nonatomic) NSString* removalPasscode;	// @synthesize=_removalPasscode
@property(assign, nonatomic, getter=isLocked) BOOL locked;	// @synthesize=_isLocked
@property(readonly, assign, nonatomic) NSString* productVersion;	// @synthesize=_productVersion
@property(readonly, assign, nonatomic) NSString* productBuildVersion;	// @synthesize=_productBuildVersion
@property(readonly, assign, nonatomic) BOOL isStub;	// @synthesize=_isStub
@property(retain, nonatomic) NSArray* signerCertificates;
@property(readonly, assign, nonatomic) SecCertificate* signerCertificate;
@property(retain, nonatomic) NSString* signerSummary;
@property(readonly, assign, nonatomic) int trustLevel;
@property(readonly, assign, nonatomic) BOOL isSigned;
@property(assign, nonatomic, getter=isEncrypted) BOOL encrypted;	// @synthesize=_encrypted
@property(retain, nonatomic) NSDate* installDate;	// @synthesize=_installDate
@property(readonly, assign, nonatomic) int version;	// @synthesize=_version
@property(readonly, assign, nonatomic) NSString* organization;	// @synthesize=_organization
@property(readonly, assign, nonatomic) NSString* UUID;	// @synthesize=_UUID
@property(readonly, assign, nonatomic) NSString* identifier;	// @synthesize=_identifier
@property(readonly, assign, nonatomic) NSString* profileDescription;	// @synthesize=_profileDescription
@property(retain, nonatomic) NSString* displayName;	// @synthesize=_displayName
@property(readonly, assign, nonatomic) NSString* friendlyName;
@property(retain, nonatomic) NSString* removalPasscode;
@property(readonly, assign, nonatomic) NSString* UUIDHashFileName;
@property(readonly, assign, nonatomic) NSString* profileIDHashFileName;
@property(readonly, assign, nonatomic) NSString* stubFileName;
+(int)_evaluateCertificateChain:(id)chain;
+(int)_evaluateSignerTrust:(SecTrust*)trust;
+(id)profileWithData:(id)data fileName:(id)name outError:(id*)error;
+(id)profileWithData:(id)data outError:(id*)error;
+(id)signerSummaryOfData:(id)data outSignerCertificates:(id*)certificates;
+(int)evaluateTrustOfData:(id)data;
+(BOOL)checkString:(id)string isOneOfStrings:(id)strings key:(id)key errorDomain:(id)domain errorCode:(int)code errorString:(id)string6 outError:(id*)error;
+(id)removeOptionalNonZeroLengthStringInDictionary:(id)dictionary key:(id)key errorDomain:(id)domain invalidDataCode:(int)code invalidDataErrorString:(id)string outError:(id*)error;
+(id)removeRequiredNonZeroLengthStringInDictionary:(id)dictionary key:(id)key errorDomain:(id)domain missingDataCode:(int)code missingDataErrorString:(id)string invalidDataCode:(int)code6 invalidDataErrorString:(id)string7 outError:(id*)error;
+(id)removeOptionalObjectInDictionary:(id)dictionary key:(id)key type:(Class)type errorDomain:(id)domain invalidDataCode:(int)code invalidDataErrorString:(id)string outError:(id*)error;
+(id)removeRequiredObjectInDictionary:(id)dictionary key:(id)key type:(Class)type errorDomain:(id)domain missingDataCode:(int)code missingDataErrorString:(id)string invalidDataCode:(int)code7 invalidDataErrorString:(id)string8 outError:(id*)error;
+(id)profileWithDictionary:(id)dictionary fileName:(id)name originalData:(id)data wasEncrypted:(BOOL)encrypted allowEmptyPayload:(BOOL)payload outError:(id*)error;
+(id)profileDictionaryFromProfileData:(id)profileData outWasEncrypted:(BOOL*)encrypted outError:(id*)error;
+(id)profileWithData:(id)data fileName:(id)name allowEmptyPayload:(BOOL)payload outError:(id*)error;
+(id)missingFieldErrorWithField:(id)field;
+(id)badFieldTypeErrorWithField:(id)field;
+(id)_malformedProfileError;
// declared property getter: -(id)localizedConsentText;
// declared property getter: -(id)removalDate;
// declared property setter: -(void)setProfileData:(id)data;
// declared property getter: -(id)profileData;
// declared property getter: -(id)productBuildVersion;
// declared property getter: -(id)productVersion;
// declared property getter: -(BOOL)isStub;
// declared property getter: -(BOOL)needsReboot;
// declared property getter: -(id)removalPasscode;
// declared property setter: -(void)setLocked:(BOOL)locked;
// declared property getter: -(BOOL)isLocked;
// declared property setter: -(void)setInstallDate:(id)date;
// declared property getter: -(id)installDate;
// declared property getter: -(int)version;
// declared property getter: -(id)organization;
// declared property setter: -(void)setEncrypted:(BOOL)encrypted;
// declared property getter: -(BOOL)isEncrypted;
// declared property getter: -(id)UUID;
// declared property getter: -(id)identifier;
// declared property setter: -(void)setDisplayName:(id)name;
// declared property getter: -(id)displayName;
// declared property getter: -(id)profileDescription;
-(void).cxx_destruct;
-(void)evaluateSignerTrustAsynchronouslyWithCompletion:(id)completion;
-(void)evaluateSignerTrust;
// declared property getter: -(BOOL)isManagedByProfileService;
// declared property getter: -(id)expiryDate;
// declared property getter: -(id)earliestCertificateExpiryDate;
// declared property getter: -(id)localizedPayloadSummaryByType;
-(id)description;
// declared property getter: -(id)friendlyName;
// declared property getter: -(BOOL)isSigned;
-(id)payloadWithUUID:(id)uuid;
// declared property getter: -(id)payloads;
// declared property getter: -(id)installationWarnings;
// declared property setter: -(void)setSignerCertificates:(id)certificates;
// declared property setter: -(void)setSignerSummary:(id)summary;
// declared property getter: -(id)signerSummary;
// declared property getter: -(id)signerCertificates;
// declared property getter: -(SecCertificate*)signerCertificate;
-(void)__evaluateSignerCertificates;
// declared property getter: -(int)trustLevel;
-(BOOL)containsPayloadOfClass:(Class)aClass;
-(id)stubDictionary;
-(BOOL)writeStubToPath:(id)path;
-(BOOL)writeStubToDirectory:(id)directory;
-(id)malformedProfileErrorWithError:(id)error;
-(id)initWithDictionary:(id)dictionary originalData:(id)data wasEncrypted:(BOOL)encrypted allowEmptyPayload:(BOOL)payload outError:(id*)error;
// declared property setter: -(void)setRemovalPasscode:(id)passcode;
// declared property getter: -(id)removalPasscode;
// declared property getter: -(id)UUIDHashFileName;
// declared property getter: -(id)profileIDHashFileName;
// declared property getter: -(id)stubFileName;
@end

