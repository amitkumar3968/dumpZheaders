/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/SportsWorkout.framework/SportsWorkout
 */

#import "SportsWorkout-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSData;

@interface SWPaceModel : XXUnknownSuperclass {
	void* _paceModelValue;
}
@property(readonly, assign, nonatomic) float maximumValidCalibrationMiles;	// @dynamic
@property(readonly, assign, nonatomic) float minimumValidCalibrationMiles;	// @dynamic
@property(readonly, assign, nonatomic) BOOL canBeUsedForRunCalibration;	// @dynamic
@property(readonly, assign, nonatomic) BOOL canBeUsedForWalkCalibration;	// @dynamic
@property(readonly, assign, nonatomic) BOOL isWalk;	// @dynamic
@property(readonly, assign, nonatomic) unsigned remainingBatteryLifetimeInHours;
@property(readonly, assign, nonatomic) unsigned lifetimeBatteryHoursUsed;	// @dynamic
@property(readonly, assign, nonatomic) float lifetimeCalibratedRunningMiles;	// @dynamic
@property(readonly, assign, nonatomic) float lifetimeUncalibratedRunningMiles;	// @dynamic
@property(readonly, assign, nonatomic) float lifetimeCalibratedWalkingMiles;	// @dynamic
@property(readonly, assign, nonatomic) float lifetimeUncalibratedWalkingMiles;	// @dynamic
@property(readonly, assign, nonatomic) unsigned runningStepCount;	// @dynamic
@property(readonly, assign, nonatomic) unsigned walkingStepCount;	// @dynamic
@property(readonly, assign, nonatomic) float distanceInMiles;	// @dynamic
@property(readonly, assign, nonatomic) float paceInSecondsPerMile;	// @dynamic
@property(copy, nonatomic) NSData* parameters;	// @dynamic
-(BOOL)recalibrateWithAdjustedDistanceMiles:(float)adjustedDistanceMiles;
-(BOOL)calibrateWithDistanceMiles:(float)distanceMiles forWalk:(BOOL)walk;
-(void)resetCalibration;
// declared property getter: -(float)maximumValidCalibrationMiles;
// declared property getter: -(float)minimumValidCalibrationMiles;
// declared property getter: -(BOOL)canBeUsedForRunCalibration;
// declared property getter: -(BOOL)canBeUsedForWalkCalibration;
-(BOOL)feedPacketPayload:(const char*)payload timestamp:(unsigned long)timestamp;
-(void)stopEvent;
-(void)resumeEvent;
-(void)startEventWithInitialMiles:(float)initialMiles isCalibration:(BOOL)calibration;
// declared property getter: -(BOOL)isWalk;
-(unsigned)radioIdForFGSN:(id)fgsn;
-(id)FGSNForRadioId:(unsigned)radioId;
-(float)caloriesForWeight:(float)weight;
// declared property getter: -(unsigned)remainingBatteryLifetimeInHours;
// declared property getter: -(unsigned)lifetimeBatteryHoursUsed;
// declared property getter: -(float)lifetimeCalibratedRunningMiles;
// declared property getter: -(float)lifetimeUncalibratedRunningMiles;
// declared property getter: -(float)lifetimeCalibratedWalkingMiles;
// declared property getter: -(float)lifetimeUncalibratedWalkingMiles;
// declared property getter: -(unsigned)runningStepCount;
// declared property getter: -(unsigned)walkingStepCount;
// declared property getter: -(float)distanceInMiles;
// declared property getter: -(float)paceInSecondsPerMile;
// declared property getter: -(id)parameters;
// declared property setter: -(void)setParameters:(id)parameters;
-(PaceModel*)_paceModel;
-(void)dealloc;
-(id)init;
@end

