/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 */

#import "SUScriptObject.h"

@class NSMutableArray, NSString;

@interface SUScriptMediaLibrary : SUScriptObject {
	NSMutableArray* _musicPlayers;
}
@property(readonly, assign) NSString* queryPresetVideoPodcasts;
@property(readonly, assign) NSString* queryPresetTVShows;
@property(readonly, assign) NSString* queryPresetSongs;
@property(readonly, assign) NSString* queryPresetPodcasts;
@property(readonly, assign) NSString* queryPresetPlaylists;
@property(readonly, assign) NSString* queryPresetMusicVideos;
@property(readonly, assign) NSString* queryPresetMovies;
@property(readonly, assign) NSString* queryPresetGenres;
@property(readonly, assign) NSString* queryPresetComposers;
@property(readonly, assign) NSString* queryPresetCompilations;
@property(readonly, assign) NSString* queryPresetAudiobooks;
@property(readonly, assign) NSString* queryPresetArtists;
@property(readonly, assign) NSString* queryPresetAlbums;
@property(readonly, assign) NSString* playerTypeIPod;
@property(readonly, assign) NSString* playerTypeApplication;
@property(readonly, assign) NSString* mediaTypeVideoPodcast;
@property(readonly, assign) NSString* mediaTypeTVShow;
@property(readonly, assign) NSString* mediaTypePodcast;
@property(readonly, assign) NSString* mediaTypeMusicVideo;
@property(readonly, assign) NSString* mediaTypeMusic;
@property(readonly, assign) NSString* mediaTypeMovie;
@property(readonly, assign) NSString* mediaTypeAudiobook;
@property(readonly, assign) NSString* mediaTypeAnyVideo;
@property(readonly, assign) NSString* mediaTypeAnyAudio;
@property(readonly, assign) NSString* mediaTypeAny;
@property(readonly, assign) NSString* itemPropertyTrackNumber;
@property(readonly, assign) NSString* itemPropertyTrackCount;
@property(readonly, assign) NSString* itemPropertyTitle;
@property(readonly, assign) NSString* itemPropertyStoreID;
@property(readonly, assign) NSString* itemPropertySkipCount;
@property(readonly, assign) NSString* itemPropertyRating;
@property(readonly, assign) NSString* itemPropertyPodcastTitle;
@property(readonly, assign) NSString* itemPropertyPlaybackDuration;
@property(readonly, assign) NSString* itemPropertyPlayCount;
@property(readonly, assign) NSString* itemPropertyPersistentID;
@property(readonly, assign) NSString* itemPropertyMediaType;
@property(readonly, assign) NSString* itemPropertyLyrics;
@property(readonly, assign) NSString* itemPropertyLastPlayedDate;
@property(readonly, assign) NSString* itemPropertyIsRental;
@property(readonly, assign) NSString* itemPropertyIsHD;
@property(readonly, assign) NSString* itemPropertyIsCompilation;
@property(readonly, assign) NSString* itemPropertyGenre;
@property(readonly, assign) NSString* itemPropertyDiscNumber;
@property(readonly, assign) NSString* itemPropertyDiscCount;
@property(readonly, assign) NSString* itemPropertyComposer;
@property(readonly, assign) NSString* itemPropertyArtist;
@property(readonly, assign) NSString* itemPropertyAlbumTitle;
@property(readonly, assign) NSString* itemPropertyAlbumArtist;
+(void)initialize;
+(id)webScriptNameForSelector:(SEL)selector;
+(id)webScriptNameForKeyName:(id)keyName;
-(id)scriptAttributeKeys;
-(id)attributeKeys;
-(void)_launchMusicAppAfterPlayback:(id)playback firstItem:(id)item;
-(void)_launchMusicApp;
-(BOOL)_isRestricted;
-(void)_connectNativeObject;
// declared property getter: -(id)queryPresetVideoPodcasts;
// declared property getter: -(id)queryPresetTVShows;
// declared property getter: -(id)queryPresetSongs;
// declared property getter: -(id)queryPresetPodcasts;
// declared property getter: -(id)queryPresetPlaylists;
// declared property getter: -(id)queryPresetMusicVideos;
// declared property getter: -(id)queryPresetMovies;
// declared property getter: -(id)queryPresetGenres;
// declared property getter: -(id)queryPresetComposers;
// declared property getter: -(id)queryPresetCompilations;
// declared property getter: -(id)queryPresetAudiobooks;
// declared property getter: -(id)queryPresetArtists;
// declared property getter: -(id)queryPresetAlbums;
// declared property getter: -(id)playerTypeIPod;
// declared property getter: -(id)playerTypeApplication;
// declared property getter: -(id)mediaTypeVideoPodcast;
// declared property getter: -(id)mediaTypeTVShow;
// declared property getter: -(id)mediaTypePodcast;
// declared property getter: -(id)mediaTypeMusicVideo;
// declared property getter: -(id)mediaTypeMusic;
// declared property getter: -(id)mediaTypeMovie;
// declared property getter: -(id)mediaTypeAudiobook;
// declared property getter: -(id)mediaTypeAnyVideo;
// declared property getter: -(id)mediaTypeAnyAudio;
// declared property getter: -(id)mediaTypeAny;
// declared property getter: -(id)itemPropertyTrackNumber;
// declared property getter: -(id)itemPropertyTrackCount;
// declared property getter: -(id)itemPropertyTitle;
// declared property getter: -(id)itemPropertyStoreID;
// declared property getter: -(id)itemPropertySkipCount;
// declared property getter: -(id)itemPropertyRating;
// declared property getter: -(id)itemPropertyPodcastTitle;
// declared property getter: -(id)itemPropertyPlaybackDuration;
// declared property getter: -(id)itemPropertyPlayCount;
// declared property getter: -(id)itemPropertyPersistentID;
// declared property getter: -(id)itemPropertyMediaType;
// declared property getter: -(id)itemPropertyLyrics;
// declared property getter: -(id)itemPropertyLastPlayedDate;
// declared property getter: -(id)itemPropertyIsRental;
// declared property getter: -(id)itemPropertyIsHD;
// declared property getter: -(id)itemPropertyIsCompilation;
// declared property getter: -(id)itemPropertyGenre;
// declared property getter: -(id)itemPropertyDiscNumber;
// declared property getter: -(id)itemPropertyDiscCount;
// declared property getter: -(id)itemPropertyComposer;
// declared property getter: -(id)itemPropertyArtist;
// declared property getter: -(id)itemPropertyAlbumTitle;
// declared property getter: -(id)itemPropertyAlbumArtist;
-(id)_className;
-(id)playVideoWithAdamID:(id)adamID;
-(id)playSongsWithAdamIDs:(id)adamIDs;
-(id)playSongsInCollectionWithAdamID:(id)adamID firstItemID:(id)anId;
-(id)musicPlayerForType:(id)type;
-(id)makeQueryWithPreset:(id)preset;
-(id)makePickerWithMediaTypes:(id)mediaTypes;
-(id)makeCollectionWithItems:(id)items;
-(void)getProperties:(id)properties ofAdamIDs:(id)adamIDs withCompletionFunction:(id)completionFunction;
-(id)containsAdamIDs:(id)ids;
-(id)containsAdamID:(id)anId;
-(void)dealloc;
@end

