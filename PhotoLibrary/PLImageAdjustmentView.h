/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import "PhotoLibrary-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "UIGestureRecognizerDelegate.h"

@class UIImage, UIImageView, PLCropModel, PLCropOverlayLayer, NSTimer;
@protocol PLImageAdjustmentViewDelegate;

@interface PLImageAdjustmentView : XXUnknownSuperclass <UIGestureRecognizerDelegate> {
	PLCropModel* _cropModel;
	UIImageView* _imageView;
	PLCropOverlayLayer* _overlayLayer;
	id<PLImageAdjustmentViewDelegate> _delegate;
	UIImage* _editedImage;
	UIEdgeInsets _cropInsets;
	int _gestureCount;
	CGAffineTransform _originalTransform;
	CGRect _imageCropRect;
	CGRect _previousImageCropRect;
	float _cropAngle;
	float _previousCropAngle;
	float _photoViewScale;
	float _sourceAspectRatio;
	unsigned _currentCropAction;
	NSTimer* _manualCropTimer;
	float _autoCropScale;
	double _animationDuration;
	unsigned _isCropMode : 1;
	unsigned _isAdjustingCropRect : 1;
	unsigned _isAnimating : 1;
	unsigned _canRotate : 1;
	unsigned _needsRecenterImage : 1;
	unsigned _delegateWillCropImage : 1;
	unsigned _delegateDidCropImage : 1;
	unsigned _delegateDidTouchImage : 1;
}
@property(assign, nonatomic) CGSize aspectRatio;
@property(assign, nonatomic, getter=isCropMode) BOOL cropMode;
@property(assign, nonatomic) UIEdgeInsets cropInsets;
@property(assign, nonatomic) id<PLImageAdjustmentViewDelegate> delegate;
@property(retain, nonatomic) UIImage* editedImage;
@property(assign) float rotationAngle;	// converted property
@property(readonly, retain) UIImageView* imageView;	// converted property
@property(readonly, retain) PLCropOverlayLayer* overlayLayer;	// converted property
@property(readonly, assign) float cropAngle;	// converted property
@property(readonly, assign) float previousCropAngle;	// converted property
// converted property getter: -(id)overlayLayer;
// converted property getter: -(id)imageView;
-(CGRect)_maxOverlayCropRect;
-(float)_minimumImageScale;
-(float)_imageScale;
-(CGRect)overlayCropRect;
-(BOOL)_updateCropAngle;
-(BOOL)_updateCropRect;
// declared property getter: -(CGSize)aspectRatio;
// declared property setter: -(void)setAspectRatio:(CGSize)ratio;
// converted property getter: -(float)rotationAngle;
// converted property setter: -(void)setRotationAngle:(float)angle;
// converted property getter: -(float)previousCropAngle;
// converted property getter: -(float)cropAngle;
-(CGRect)previousCropRect;
-(CGRect)cropRect;
-(void)setCropRect:(CGRect)rect cropAngle:(float)angle;
-(void)reset;
// declared property getter: -(UIEdgeInsets)cropInsets;
// declared property setter: -(void)setCropInsets:(UIEdgeInsets)insets;
// declared property getter: -(BOOL)isCropMode;
// declared property setter: -(void)setCropMode:(BOOL)mode;
// declared property getter: -(id)editedImage;
-(void)replaceEditedImage:(id)image;
// declared property setter: -(void)setEditedImage:(id)image;
// declared property getter: -(id)delegate;
// declared property setter: -(void)setDelegate:(id)delegate;
-(BOOL)isDisplayingProgressIndicators;
-(void)removeProgressIndicators;
-(void)removeProgressIndicatorAtLocation:(CGPoint)location;
-(void)displayProgressIndicatorAtLocation:(CGPoint)location;
-(void)showIndicatorAtPointInImage:(CGPoint)image duration:(double)duration;
-(void)commitAnimations;
-(void)beginAnimation:(double)animation;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)_cropTimer:(id)timer;
-(void)_performCropAction:(int)action location:(CGPoint)location;
-(BOOL)_isInCropGesture;
-(void)_endCropGesture:(id)gesture;
-(void)_beginCropGesture:(id)gesture;
-(void)touch:(id)touch;
-(void)crop:(id)crop;
-(void)rotate:(id)rotate;
-(void)scale:(id)scale;
-(void)pan:(id)pan;
-(void)_updateGestureRecognizers;
-(float)computeScaleToFillRelativeToPointInImage:(CGPoint)image;
-(int)cropActionForPoint:(CGPoint)point;
-(CGPoint)convertPointFromImage:(CGPoint)image;
-(CGPoint)convertPointToImage:(CGPoint)image;
-(void)_updateOverlayCropRect;
-(void)_updateImageView;
-(void)layoutSubviews;
-(void)setNeedsRecenterImage;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
@end

