/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "NSURLConnectionDelegate.h"
#import "GEOResourceLoaderDelegate.h"
#import "GEOResourceManifestServerProxy.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class GEORegionalResourcesInfo, NSError, NSTimer, GEORegionalResourcesLoader, NSMutableDictionary, NSMutableData, NSURLConnection, NSString, GEOResourceManifestDownload, GEOResourceLoader, NSLock, GEOActiveTileGroup;
@protocol GEOResourceManifestServerProxyDelegate;

__attribute__((visibility("hidden")))
@interface GEOResourceManifestServerLocalProxy : XXUnknownSuperclass <NSURLConnectionDelegate, GEOResourceLoaderDelegate, GEOResourceManifestServerProxy> {
@private
	id<GEOResourceManifestServerProxyDelegate> _delegate;
	NSURLConnection* _connection;
	NSMutableData* _responseData;
	NSString* _responseETag;
	BOOL _isObservingManifestReachability;
	NSTimer* _manifestUpdateTimer;
	BOOL _isObservingTileGroupReachability;
	NSTimer* _tileGroupUpdateTimer;
	GEOResourceManifestDownload* _resourceManifest;
	GEOActiveTileGroup* _activeTileGroup;
	GEORegionalResourcesInfo* _regionalResourcesInfo;
	GEOResourceLoader* _resourceLoader;
	NSMutableDictionary* _resourceRetainCounts;
	GEORegionalResourcesLoader* _regionalResourcesLoader;
	BOOL _started;
	BOOL _hiDPI;
	unsigned _manifestRetryCount;
	unsigned _tileGroupRetryCount;
	NSString* _authToken;
	NSLock* _authTokenLock;
	NSError* _lastResourceManifestLoadError;
}
@property(assign, nonatomic) id<GEOResourceManifestServerProxyDelegate> delegate;	// @synthesize=_delegate
@property(readonly, retain) NSString* authToken;	// converted property
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(oneway void)cancelRegionalResourcesLoadForKeys:(id)keys;
-(oneway void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network;
-(oneway void)releaseResources:(id)resources;
-(oneway void)retainResources:(id)resources;
-(void)_retainResource:(id)resource;
-(id)resourceLoader:(id)loader resourceNamesForTileGroupWithIdentifier:(unsigned)identifier type:(int)type;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)_updateTimerFired:(id)fired;
-(void)_scheduleUpdateTimerWithTimeInterval:(double)timeInterval;
-(void)getResourceManifestWithHandler:(id)handler;
-(oneway void)forceUpdate;
-(void)_updateManifest;
-(BOOL)_updateManifestIfNecessary;
-(id)_manifestURL;
-(void)_reachabilityChanged:(id)changed;
-(void)_registerReachabilityObserver:(unsigned)observer;
-(void)_countryProvidersDidChange:(id)_countryProviders;
-(void)_writeManifestToDisk:(id)disk;
-(void)_writeActiveTileGroupToDisk:(id)disk;
-(oneway void)refreshActiveTileGroup;
-(oneway void)resetActiveTileGroup;
-(oneway void)setActiveTileGroupIdentifier:(id)identifier;
-(void)_cleanupConnection;
-(void)_cancelConnection;
-(void)_forceChangeActiveTileGroup:(id)group flushTileCache:(BOOL)cache;
-(void)_tileGroupTimerFired:(id)fired;
-(void)_scheduleTileGroupUpdateTimerWithTimeInterval:(double)timeInterval;
-(void)_considerChangingActiveTileGroup;
-(void)_changeActiveTileGroup:(id)group flushTileCache:(BOOL)cache;
-(void)_loadFromDisk;
-(oneway void)startServer:(id)server;
// converted property getter: -(id)authToken;
-(void)closeConnection;
-(void)openConnection;
-(void)dealloc;
-(id)initWithDelegate:(id)delegate;
@end

