/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "GEOResourceManifestServerProxyDelegate.h"

@class NSLock, NSDictionary, GEOActiveTileGroup, NSHashTable, NSMutableArray, GEOLocalizationRegionsInfo;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : XXUnknownSuperclass <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;
	NSHashTable* _serverProxyObservers;
	NSMutableArray* _pendingRegionalResourceLoads;
	GEOActiveTileGroup* _activeTileGroup;
	NSLock* _activeTileGroupLock;
	NSDictionary* _resourceNamesToPaths;
@private
	GEOLocalizationRegionsInfo* _localizationRegionsInfo;
	NSLock* _pendingRegionalResourceLoadsLock;
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup* activeTileGroup;
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// @synthesize=_serverProxy
@property(assign) unsigned activeTileGroupIdentifier;	// converted property
+(id)sharedManager;
+(void)setCallerWillStartServer;
+(void)setHiDPI:(BOOL)dpi;
+(void)useLocalProxy;
+(void)useRemoteProxy;
+(void)disableServerConnection;
// declared property getter: -(id)serverProxy;
-(void)forceUpdate;
-(void)refreshActiveTileGroup;
-(void)resetActiveTileGroup;
// converted property setter: -(void)setActiveTileGroupIdentifier:(unsigned)identifier;
// converted property getter: -(unsigned)activeTileGroupIdentifier;
-(void)getResourceManifestWithHandler:(id)handler;
-(BOOL)hasResourceManifest;
-(id)detailedDescription;
-(oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;
-(oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;
-(oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;
-(oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;
-(void)cancelRegionalResourcesRequest:(id)request;
-(void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;
-(void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;
-(id)_listenerForTileKeys:(id)tileKeys acquireLock:(BOOL)lock;
-(id)pathForResourceWithName:(id)name;
-(void)_buildResourceNamesToPaths;
-(id)allResourceNames;
-(BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;
-(id)languageForTileKey:(const GEOTileKey*)tileKey;
-(BOOL)isAvailableForTileKey:(const GEOTileKey*)tileKey;
-(double)timeToLiveForTileKey:(const GEOTileKey*)tileKey;
-(unsigned)versionForTileKey:(const GEOTileKey*)tileKey;
-(id)localizationURLStringIfNecessaryForTileKey:(const GEOTileKey*)tileKey;
-(id)multiTileURLStringForTileKey:(const GEOTileKey*)tileKey useStatusCodes:(BOOL*)codes;
-(id)baseURLStringForTileKey:(const GEOTileKey*)tileKey;
-(id)_activeTileSetForKey:(const GEOTileKey*)key;
// declared property getter: -(BOOL)hasActiveTileGroup;
-(unsigned)mapMatchingZoomLevel;
-(int)mapMatchingTileSetStyle;
-(void)removeServerProxyObserver:(id)observer;
-(void)addServerProxyObserver:(id)observer;
-(void)_localeChanged:(id)changed;
-(void)closeServerConnection;
-(void)openServerConnection;
-(id)authToken;
// declared property getter: -(id)activeTileGroup;
-(void)dealloc;
-(id)init;
@end

