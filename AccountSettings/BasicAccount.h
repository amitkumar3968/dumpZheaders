/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AccountSettings.framework/AccountSettings
 */

#import "AccountFullAccountProtocol.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, NSDictionary;
@protocol AccountRefreshProtocol;

@interface BasicAccount : XXUnknownSuperclass <AccountFullAccountProtocol> {
	NSDictionary* _originalProperties;
	NSMutableDictionary* _properties;
	id<AccountFullAccountProtocol> _fullAccount;
	id<AccountRefreshProtocol> _syncAccount;
	BasicAccount* _parentAccount;
}
@property(retain, nonatomic) NSDictionary* originalProperties;	// @synthesize=_originalProperties
@property(retain) id accountClass;	// converted property
@property(retain) BasicAccount* parentAccount;	// converted property
@property(retain) id displayName;	// converted property
@property(readonly, retain) NSMutableDictionary* properties;	// converted property
+(BOOL)userConfirmationIsRequiredByDataclass:(id)dataclass;
+(BOOL)displayToggleForDataclass:(id)dataclass;
+(BOOL)multipleStoresSupportedByDataclass:(id)dataclass;
+(BOOL)showRemindersSeparatelyForAccountType:(id)accountType;
+(id)deleteAccountActionsForAccountType:(id)accountType;
+(id)userActionsToDisableDataclass:(id)disableDataclass forAccountType:(id)accountType;
+(id)userActionsToEnableDataclass:(id)enableDataclass forAccountType:(id)accountType;
+(id)removeActionsIncompatibleWithSingleStoreDataclass:(id)singleStoreDataclass;
+(id)supportedDataclassesForAccountType:(id)accountType;
+(id)allSupportedDataclasses;
+(id)accountWithProperties:(id)properties;
+(id)accountWithType:(id)type class:(id)aClass;
+(void)initialize;
+(BOOL)isMultitaskingEnabled;
+(id)_dataclassesProperties;
+(id)_creatorsInfo;
+(BOOL)_isValidAccountType:(id)type;
+(id)_accountCreationMap;
+(id)createNewAccountUID;
// declared property getter: -(id)originalProperties;
// declared property setter: -(void)setOriginalProperties:(id)properties;
-(void)renewAccountCredentialsWithHandler:(id)handler;
-(BOOL)refreshContainersForDataclass:(id)dataclass;
-(BOOL)refreshContainerListForDataclass:(id)dataclass;
-(BOOL)refreshContainerWithIdentifier:(id)identifier forDataclass:(id)dataclass;
-(BOOL)refreshContainersForDataclass:(id)dataclass isUserRequested:(BOOL)requested;
-(BOOL)refreshContainerListForDataclass:(id)dataclass isUserRequested:(BOOL)requested;
-(BOOL)refreshContainerWithIdentifier:(id)identifier forDataclass:(id)dataclass isUserRequested:(BOOL)requested;
-(id)fullAccountUsingLoader:(id)loader;
-(void)setEnabledForDataclasses:(id)dataclasses;
-(void)setEnabled:(BOOL)enabled forDataclass:(id)dataclass;
-(BOOL)isEnabledForDataclass:(id)dataclass;
-(id)enabledDataclasses;
-(id)provisionedDataclasses;
-(id)supportedDataclasses;
-(id)shortTypeString;
-(id)typeString;
// converted property getter: -(id)displayName;
// converted property setter: -(void)setAccountClass:(id)aClass;
// converted property getter: -(id)accountClass;
-(id)syncStoreIdentifier;
// converted property setter: -(void)setParentAccount:(id)account;
// converted property getter: -(id)parentAccount;
-(id)parentAccountIdentifier;
-(id)identifier;
-(id)type;
-(id)propertiesToSave;
// converted property getter: -(id)properties;
-(id)accountPropertyForKey:(id)key;
-(void)removeAccountPropertyForKey:(id)key;
-(void)setAccountProperty:(id)property forKey:(id)key;
-(void)dealloc;
-(id)init;
-(id)initWithProperties:(id)properties;
-(id)_profileRestrictedDataclasses;
-(id)_orderedDataclasses:(id)dataclasses;
-(id)_cachedSyncAccount;
-(id)_initWithType:(id)type class:(id)aClass;
-(id)syncAccountCreatorClassNameForAccountType:(id)accountType;
-(id)fullAccountCreatorClassNameForAccountType:(id)accountType loader:(id)loader;
-(id)_creatorClassNameForAccountType:(id)accountType creatorType:(id)type loader:(id)loader;
-(void)setFullAccount:(id)account;
// converted property setter: -(void)setDisplayName:(id)name;
-(void)_forcedSetEnabled:(BOOL)enabled forDataclass:(id)dataclass;
-(void)_forcedSetAccountProperty:(id)property forKey:(id)key;
@end

