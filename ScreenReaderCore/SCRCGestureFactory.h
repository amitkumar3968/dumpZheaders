/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
 */

#import "ScreenReaderCore-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class SCRCTargetSelectorTimer, SCRCGestureFactory;

@interface SCRCGestureFactory : XXUnknownSuperclass {
	float _stallDistance;
	float _maxDimension;
	float _thumbRegion;
	int _orientation;
	int _directions[7];
	CGPoint _axisFlipper;
	float _scaledTrackingDistance;
	BOOL _setTrackingTimer;
	float _flickVelocityThreshold;
	double _tapVelocityThreshold;
	double _echoWaitTime;
	CGRect _mainFrame;
	CGRect _gutterFrame;
	double _lastTime;
	double _lastDownTime;
	double _lastGutterDownTime;
	float _lastDegrees;
	float _startDegrees;
	float _startDistance;
	BOOL _startedInGutter;
	double _requireDelayBeforeTracking;
	BOOL _requireUp;
	BOOL _thumbRejectionEnabled;
	float _thumbRejectionDistance;
	int _state;
	int _previousState;
	int _direction;
	float _directionalSlope;
	SCRCFingerState _finger[2];
	unsigned _absoluteFingerCount;
	unsigned short _fingerCount;
	unsigned short _lastFingerCount;
	float _distance;
	unsigned _tapCount;
	CGRect _tapFrame;
	CGRect _tapMultiFrame;
	struct {
		id track;
		id tap;
		id gutterUp;
		id splitTap;
	} _delegate;
	SCRCTargetSelectorTimer* _trackingTimer;
	struct {
		BOOL down;
		BOOL dead;
		BOOL gutter;
		unsigned current;
		unsigned digits;
		unsigned count;
		CGRect frame;
		CGPoint location[5];
		CGPoint locationPerTap[5];
		unsigned digitsPerTap;
		double thisTime;
		double lastTime;
	} _tap;
	SCRCTargetSelectorTimer* _tapTimer;
	SCRCTargetSelectorTimer* _gutterUpTimer;
	struct {
		SCRCGestureFactory* factory;
		BOOL isSplitting;
		BOOL isTapping;
		BOOL fastTrack;
		BOOL tapDead;
		BOOL timedOut;
		BOOL active;
		unsigned fingerIdentifier;
		double fingerDownTime;
		CGPoint startTapLocation;
		CGPoint lastTapLocation;
		CGPoint primaryFingerLocation;
		float tapDistance;
		int state;
	} _split;
}
@property(assign, nonatomic) BOOL thumbRejectionEnabled;	// @synthesize=_thumbRejectionEnabled
@property(assign) int orientation;	// converted property
@property(assign) float tapSpeed;	// converted property
@property(assign) float flickSpeed;	// converted property
@property(readonly, assign) CGRect mainFrame;	// converted property
@property(readonly, assign) int direction;	// converted property
@property(readonly, assign) float directionalSlope;	// converted property
@property(readonly, assign) unsigned absoluteFingerCount;	// converted property
@property(readonly, assign) float distance;	// converted property
@property(readonly, assign) unsigned tapCount;	// converted property
@property(readonly, assign) CGRect tapFrame;	// converted property
// declared property setter: -(void)setThumbRejectionEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)thumbRejectionEnabled;
-(id)gestureStateString;
-(double)tapInterval;
-(CGPoint)tapPointWeightedToSides;
-(CGPoint)tapPoint;
-(CGRect)multiTapFrame;
// converted property getter: -(CGRect)tapFrame;
-(CGPoint)endLocation;
-(CGPoint)startLocation;
-(CGPoint)rawLocation;
-(BOOL)tapIsDown;
// converted property getter: -(unsigned)tapCount;
-(unsigned)fingerCount;
// converted property getter: -(unsigned)absoluteFingerCount;
// converted property getter: -(float)distance;
-(float)velocity;
-(float)vector;
// converted property getter: -(int)direction;
-(int)gestureState;
// converted property getter: -(float)directionalSlope;
-(void)reset;
-(void)_up;
-(void)_drag:(id)drag;
-(void)_down:(id)down;
-(void)handleGestureEvent:(id)event;
-(BOOL)_handleSplitEvent:(id)event;
-(BOOL)_handleSplitTap;
-(void)_updateStartWithPoint:(CGPoint)point time:(double)time;
-(void)_processUpAndPost:(BOOL)post;
-(void)_handleGutterUp;
-(void)_enterTrackingMode:(id)mode;
-(void)_handleTap;
-(void)_updateTapState;
-(void)_updateMultiTapFrame;
-(CGRect)_currentTapRect;
// converted property getter: -(CGRect)mainFrame;
-(void)dealloc;
// converted property getter: -(int)orientation;
// converted property setter: -(void)setOrientation:(int)orientation;
// converted property getter: -(float)tapSpeed;
// converted property setter: -(void)setTapSpeed:(float)speed;
// converted property getter: -(float)flickSpeed;
// converted property setter: -(void)setFlickSpeed:(float)speed;
-(id)initWithSize:(CGSize)size delegate:(id)delegate threadKey:(id)key;
-(id)initWithSize:(CGSize)size delegate:(id)delegate;
@end

