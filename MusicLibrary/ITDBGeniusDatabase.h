/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import </libobjc.A.h>
#import "MusicLibrary-Structs.h"

@class ML3MusicLibrary, ML3SqliteDatabase;

__attribute__((visibility("hidden")))
@interface ITDBGeniusDatabase : NSObject {
@private
	ML3MusicLibrary* _musicLibrary;
	ML3SqliteDatabase* _geniusDB;
	double _connectionFailedTime;
	CFDictionaryRef _statementCache;
	BOOL _isInTransaction;
}
@property(assign, nonatomic) BOOL isInTransaction;	// @synthesize=_isInTransaction
+(id)sharedGeniusDatabase;
// declared property setter: -(void)setIsInTransaction:(BOOL)transaction;
// declared property getter: -(BOOL)isInTransaction;
-(void).cxx_destruct;
-(BOOL)getGeniusSimilaritiesDataAndBytesForGlobalID:(unsigned long long)globalID intoData:(id)data;
-(BOOL)getGeniusMetadataDataAndBytesForGlobalID:(unsigned long long)globalID intoData:(id)data;
-(BOOL)getGeniusConfigrationDataAndBytesIntoData:(id)data;
-(id)copyGeniusSimilaritiesDataAndBytesForGlobalID:(unsigned long long)globalID;
-(id)copyGeniusMetadataDataAndBytesForGlobalID:(unsigned long long)globalID;
-(unsigned)geniusConfigurationVersion;
-(id)copyGeniusConfigrationDataAndBytes;
-(unsigned)defaultTrackCount;
-(unsigned)defaultMinTrackCount;
-(BOOL)hasGeniusFeatureEnabled;
-(BOOL)hasGeniusDataAvailable;
-(BOOL)_hasAnySongs;
-(BOOL)hasDatabase;
-(BOOL)_readBlobForRowID:(unsigned long long)rowID intoData:(id)data table:(const char*)table blobColumn:(const char*)column;
-(BOOL)_readBlobIntoData:(id)data table:(id)table blobColumn:(id)column where:(id)where;
-(id)_copyBlobDataAndBytesInTable:(id)table blobColumn:(id)column where:(id)where;
-(BOOL)_copyBlobData:(id*)data blobAllocType:(int)type table:(id)table blobColumn:(id)column where:(id)where;
-(unsigned long long)_getInt64ValueInTable:(id)table column:(id)column where:(id)where limit:(unsigned)limit;
-(unsigned)_getInt32ValueInTable:(id)table column:(id)column;
-(unsigned)_hasRowsInTable:(id)table;
-(id)database;
-(void)_connect;
-(void)_invalidateDatabase;
-(id)init;
@end

