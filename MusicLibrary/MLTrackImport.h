/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import "NSCopying.h"
#import </libobjc.A.h>

@class NSMutableDictionary, NSDictionary, NSArray, NSData, MLMovieProperties, MLContentRating, NSString;

@interface MLTrackImport : NSObject <NSCopying> {
@private
	NSData* _artworkData;
	NSString* _assetFilePath;
	NSArray* _chapters;
	NSMutableDictionary* _properties;
	BOOL _shouldAddToPurchasedPlaylist;
	BOOL _shouldDeleteExistingArtwork;
	BOOL _assignArtworkCacheIDFromAlbum;
}
@property(readonly, assign, nonatomic) NSDictionary* entityProperties;
@property(assign, nonatomic) BOOL assignArtworkCacheIDFromAlbum;	// @synthesize=_assignArtworkCacheIDFromAlbum
@property(assign, nonatomic) BOOL shouldAddToPurchasedPlaylist;	// @synthesize=_shouldAddToPurchasedPlaylist
@property(copy, nonatomic) MLMovieProperties* movieProperties;
@property(assign, nonatomic) unsigned long mediaType;
@property(copy, nonatomic) MLContentRating* contentRating;
@property(copy, nonatomic) NSArray* chapters;	// @synthesize=_chapters
@property(copy, nonatomic) NSString* assetFilePath;	// @synthesize=_assetFilePath
@property(assign, nonatomic) BOOL shouldDeleteExistingArtwork;	// @synthesize=_shouldDeleteExistingArtwork
@property(copy, nonatomic) NSData* artworkData;	// @synthesize=_artworkData
+(void)initialize;
// declared property setter: -(void)setShouldDeleteExistingArtwork:(BOOL)deleteExistingArtwork;
// declared property getter: -(BOOL)shouldDeleteExistingArtwork;
// declared property setter: -(void)setShouldAddToPurchasedPlaylist:(BOOL)addToPurchasedPlaylist;
// declared property getter: -(BOOL)shouldAddToPurchasedPlaylist;
// declared property setter: -(void)setChapters:(id)chapters;
// declared property getter: -(id)chapters;
// declared property setter: -(void)setAssignArtworkCacheIDFromAlbum:(BOOL)album;
// declared property getter: -(BOOL)assignArtworkCacheIDFromAlbum;
// declared property setter: -(void)setAssetFilePath:(id)path;
// declared property getter: -(id)assetFilePath;
// declared property setter: -(void)setArtworkData:(id)data;
// declared property getter: -(id)artworkData;
-(void).cxx_destruct;
-(void)_addSortStrings;
-(void)normalizeEntityProperties;
-(id)copyEntityProperties;
-(id)valueForEntityProperty:(id)entityProperty;
-(void)setValue:(id)value forEntityProperty:(id)entityProperty;
// declared property setter: -(void)setMovieProperties:(id)properties;
// declared property setter: -(void)setMediaType:(unsigned long)type;
// declared property setter: -(void)setContentRating:(id)rating;
// declared property getter: -(id)movieProperties;
// declared property getter: -(unsigned long)mediaType;
// declared property getter: -(id)entityProperties;
// declared property getter: -(id)contentRating;
-(id)copyWithZone:(NSZone*)zone;
-(id)init;
@end

