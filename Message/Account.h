/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import "Message-Structs.h"
#import "ASDynamicAccountClassLoader.h"
#import "AccountCreationProtocol.h"
#import <XXUnknownSuperclass.h> // Unknown library


@interface Account : XXUnknownSuperclass <ASDynamicAccountClassLoader, AccountCreationProtocol> {
	unsigned _isActive : 2;
}
@property(retain) id preferredAuthScheme;	// converted property
@property(retain) id domain;	// converted property
@property(assign) BOOL usesSSL;	// converted property
@property(assign) unsigned portNumber;	// converted property
@property(retain) id password;	// converted property
@property(retain) id hostname;	// converted property
@property(retain) id username;	// converted property
@property(retain) id displayName;	// converted property
@property(assign) BOOL isActive;	// converted property
+(id)saslProfileName;
+(BOOL)isSSLEditable;
+(id)hostname;
+(id)accountPropertiesValueForKey:(id)key value:(id)value;
+(id)myFullName;
+(void*)keychainProtocol;
+(id)displayedShortAccountTypeString;
+(id)displayedAccountTypeString;
+(id)accountTypeString;
+(void)saveAccountInfoToDefaults;
+(void)saveAccounts:(id)accounts usingKey:(id)key;
+(id)readAccountsUsingKey:(id)key;
+(id)propertiesWhichRequireValidation;
+(id)supportedDataclasses;
+(id)predefinedValueForKey:(id)key;
+(BOOL)isPredefinedAccountType;
+(id)accountWithBasicAccount:(id)basicAccount;
+(id)existingAccountForUniqueID:(id)uniqueID;
+(BOOL)_shouldUpdateAccountsInPlace;
+(BOOL)loadBundleForAccountWithProperties:(id)properties;
+(void)loadBundleForAccountClass:(id)accountClass;
+(id)newAccountWithDictionary:(id)dictionary;
+(id)basicAccountProperties;
-(id)copyDiagnosticInformation;
-(id)missingPasswordErrorWithTitle:(id)title;
-(BOOL)shouldDisplayHostnameInErrorMessages;
-(BOOL)enableAccount;
-(BOOL)shouldEnableAfterError:(id)error;
-(id)nameForMailboxUid:(id)mailboxUid;
-(id)syncStoreIdentifier;
-(id)uniqueId;
-(BOOL)_connectAndAuthenticate:(id)authenticate;
-(void)reportAuthenticationError:(id)error authScheme:(id)scheme;
-(BOOL)isPasswordMissing;
-(id)customDescriptionForError:(id)error authScheme:(id)scheme defaultDescription:(id)description;
-(id)customTitleForAuthenticationError:(id)authenticationError authScheme:(id)scheme defaultTitle:(id)title;
-(id)customTitleForError:(id)error authScheme:(id)scheme defaultTitle:(id)title;
-(BOOL)_shouldTryDirectSSLConnectionOnPort:(unsigned)port;
-(id)secureConnectionSettings;
-(id)insecureConnectionSettings;
-(id)alternateConnectionSettings;
-(void)applySettingsAsDefault:(id)aDefault;
-(id)defaultConnectionSettings;
-(id)certUIService;
-(id)authenticatedConnection;
-(BOOL)requiresAuthentication;
-(Class)connectionClass;
-(id)_newConnection;
// converted property setter: -(void)setPreferredAuthScheme:(id)scheme;
// converted property getter: -(id)preferredAuthScheme;
-(void)accountInfoDidChange;
// converted property setter: -(void)setDomain:(id)domain;
// converted property getter: -(id)domain;
-(void)setTryDirectSSL:(BOOL)ssl;
-(BOOL)allowsTrustPrompt;
// converted property setter: -(void)setUsesSSL:(BOOL)ssl;
// converted property getter: -(BOOL)usesSSL;
-(void)validateConnections;
-(void)releaseAllForcedConnections;
-(void)releaseAllConnections;
-(CFStringRef)connectionServiceType;
-(id)secureServiceName;
-(id)serviceName;
-(BOOL)isCommonPortNumber:(unsigned)number;
// converted property setter: -(void)setPortNumber:(unsigned)number;
-(unsigned)keychainPortNumber;
-(unsigned)defaultSecurePortNumber;
-(unsigned)defaultPortNumber;
// converted property getter: -(unsigned)portNumber;
-(id)managedTag;
-(BOOL)acquireCredentialsWithPassword:(id)password;
-(BOOL)needsCredentials;
-(BOOL)storesPassword;
-(BOOL)promptUserForPasswordWithTitle:(id)title message:(id)message completionHandler:(id)handler;
// converted property getter: -(id)password;
-(id)passwordFromKeychain;
-(id)passwordFromStoredUserInfo;
// converted property setter: -(void)setPassword:(id)password;
-(void)_removePasswordInKeychain;
-(void)setPasswordInKeychain:(id)keychain;
-(void*)keychainAccessibility;
// converted property setter: -(void)setHostname:(id)hostname;
// converted property getter: -(id)hostname;
// converted property setter: -(void)setUsername:(id)username;
// converted property getter: -(id)username;
// converted property setter: -(void)setDisplayName:(id)name;
// converted property getter: -(id)displayName;
-(BOOL)canGoOffline;
// converted property setter: -(void)setIsActive:(BOOL)active;
// converted property getter: -(BOOL)isActive;
-(id)valueInAccountPropertiesForKey:(id)key;
-(void)removeValueInAccountPropertiesForKey:(id)key;
-(void)setValueInAccountProperties:(id)accountProperties forKey:(id)key;
-(void)_setAccountProperties:(id)properties;
-(void)_resetAccountProperties:(id)properties;
-(id)propertiesToSave;
-(void)_queueAccountInfoDidChange;
-(id)copyWithZone:(NSZone*)zone;
-(id)initWithProperties:(id)properties;
-(id)init;
@end

