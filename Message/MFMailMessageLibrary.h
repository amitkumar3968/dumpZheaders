/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import "Message-Structs.h"
#import "MessageLibrary.h"
#import "MFSQLiteConnectionPoolDelegate.h"
#import "MFContentProtectionObserver.h"

@class MFSQLiteConnectionPool, NSObject, MFMailMessageLibraryMigrator, MFDbJournal, NSMutableSet, NSString;
@protocol OS_dispatch_queue, MFMailboxPathProvider, MFMailMessageLibraryDelegate;

@interface MFMailMessageLibrary : MessageLibrary <MFSQLiteConnectionPoolDelegate, MFContentProtectionObserver> {
@private
	MFSQLiteConnectionPool* _connectionPool;
	CFDictionaryRef _mailboxCache;
	NSObject<OS_dispatch_queue>* _metadataQueue;
	id<MFMailboxPathProvider> _mailboxPathProvider;
	MFMailMessageLibraryMigrator* _migrator;
	NSString* _threadLocalHandleKey;
	NSString* _activeAccountClause;
	int _protectedDataAvailability;
	MFDbJournal* _protectedJournal;
	NSObject<OS_dispatch_queue>* _keyBagQueue;
	NSMutableSet* _messagesToThreadAtUnlock;
	id<MFMailMessageLibraryDelegate> _delegate;
}
@property(readonly, assign, nonatomic) int protectedDataAvailability;
@property(assign, nonatomic) id<MFMailMessageLibraryDelegate> delegate;
+(void)_removeLibrary:(BOOL)library atPath:(id)path;
+(void)removeLibraryAtPath:(id)path;
+(void)initialize;
+(id)defaultPath;
+(id)defaultInstance;
-(id)allMailboxURLStrings;
-(void)setMailboxPathProvider:(id)provider;
-(void)renameOrRemoveDatabase;
-(void)_handleBusyError;
-(void)_handleIOError;
-(void)_handleFullDatabase;
-(void)_handleCorruptDatabase;
-(void)_handleSQLiteErrorCode:(int)code;
-(int)handleSqliteError:(sqlite3*)error format:(id)format;
-(sqlite3_stmt*)preparedStatement:(sqlite3*)statement pattern:(id)pattern;
-(id)_activeConnectionWithDB:(sqlite3*)db;
-(id)_activeConnection;
-(id)_activeConnectionWrapper;
-(id)_setActiveConnection:(id)connection forWriting:(BOOL)writing;
-(void)unlockDB:(sqlite3*)db;
-(sqlite3*)getReaderDB;
-(sqlite3*)getWriterDB;
-(id)_connectionForWriting:(BOOL)writing;
-(void)closeDatabaseConnections;
-(void)_performTransaction:(id)transaction forWriting:(BOOL)writing;
-(void)performReadTransaction:(id)transaction;
-(void)performWriteTransaction:(id)transaction;
-(int)rollbackTransaction:(sqlite3*)transaction;
-(int)commitTransaction:(sqlite3*)transaction;
-(int)beginTransaction:(sqlite3*)transaction withType:(int)type;
-(BOOL)migrate;
-(id)_newConnection;
-(id)newConnectionForConnectionPool:(id)connectionPool;
-(BOOL)isKeyBagUnlocked;
-(void)_addMessageToThreadAtUnlock:(unsigned)unlock;
-(void)_reconcileAfterKeybagUnlock;
-(void)contentProtectionStateChanged:(int)changed previousState:(int)state;
-(BOOL)isProtectedDataAvailable:(sqlite3*)available;
-(int)attachProtectedDatabase:(sqlite3*)database;
-(void)_reconcileJournal:(sqlite3*)journal;
-(BOOL)cleanupProtectedTables:(sqlite3*)tables checkForInconsistencies:(BOOL)inconsistencies;
// declared property getter: -(int)protectedDataAvailability;
-(void)_setProtectedDataAvailabilityState:(int)state;
-(id)hiddenPOPUIDsInMailbox:(id)mailbox;
-(id)allUIDsInMailbox:(id)mailbox;
-(id)deletedUIDsInMailbox:(id)mailbox;
-(id)UIDsToDeleteInMailbox:(id)mailbox;
-(void)deletePOPUID:(id)popuid inMailbox:(id)mailbox;
-(void)deleteOfflineCacheDataForAccount:(int)account;
-(void)consumeOfflineCacheReplayDataForAccount:(int)account usingBlock:(id)block;
-(void)appendOfflineCacheReplayData:(id)data forAccountID:(int)accountID;
-(id)offlineCacheOperationsForAccount:(int)account lastTemporaryID:(unsigned*)anId;
-(void)markOfflineCacheOperationAsComplete:(id)complete;
-(void)appendOfflineCacheOperation:(id)operation forAccount:(int)account lastTemporaryID:(unsigned)anId;
-(id)_activeAccountsClause;
-(void)rebuildActiveAccountsClauseWithAccounts:(id)accounts;
-(void)deleteAccount:(id)account;
-(int)libraryIDForAccount:(id)account;
-(int)createLibraryIDForAccount:(id)account;
-(id)filterContiguousMessages:(id)messages forCriterion:(id)criterion options:(unsigned)options;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options success:(BOOL*)success;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options range:(NSRange)range success:(BOOL*)success;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options range:(NSRange)range;
-(void)iterateMessagesMatchingCriterion:(id)criterion withResultHandler:(id)resultHandler options:(unsigned)options withMonitor:(id)monitor;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options range:(NSRange)range;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options baseTable:(unsigned)table;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options baseTable:(unsigned)table range:(NSRange)range;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options baseTable:(unsigned)table range:(NSRange)range success:(BOOL*)success;
-(id)queryForCriterion:(id)criterion db:(sqlite3*)db options:(unsigned)options;
-(id)queryForCriterion:(id)criterion db:(sqlite3*)db options:(unsigned)options range:(NSRange)range;
-(id)queryForCriterion:(id)criterion db:(sqlite3*)db options:(unsigned)options baseTable:(unsigned)table;
-(id)queryForCriterion:(id)criterion db:(sqlite3*)db options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery;
-(id)queryForCriterion:(id)criterion db:(sqlite3*)db options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery range:(NSRange)range;
-(BOOL)isMessageContentsLocallyAvailable:(id)available;
-(BOOL)hasCompleteDataForMimePart:(id)mimePart;
-(id)dataForMimePart:(id)mimePart isComplete:(BOOL*)complete;
-(id)fullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id*)available;
-(id)headerDataForMessage:(id)message;
-(id)bodyDataForMessage:(id)message;
-(id)bodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id*)available isComplete:(BOOL*)complete;
-(id)headerDataAtPath:(id)path;
-(id)bodyDataAtPath:(id)path headerData:(id*)data;
-(id)loadMeetingMetadataForMessage:(id)message;
-(id)loadMeetingExternalIDForMessage:(id)message;
-(id)loadMeetingDataForMessage:(id)message;
-(id)loadData:(id)data forMessage:(id)message usingBlock:(id)block;
-(id)metadataForMessage:(id)message;
-(id)metadataForMessage:(id)message key:(id)key;
-(void)updateMessage:(id)message withMetadata:(id)metadata;
-(void)setSummary:(id)summary forMessage:(id)message;
-(void)_setMessageDataString:(id)string forKey:(id)key forMessage:(id)message;
-(BOOL)_setMessageData:(id)data libraryID:(unsigned)anId part:(id)part partial:(BOOL)partial complete:(BOOL)complete;
-(void)setData:(id)data forMessage:(id)message isPartial:(BOOL)partial;
-(id)dataConsumerForMessage:(id)message;
-(id)dataConsumerForMessage:(id)message isPartial:(BOOL)partial;
-(id)dataConsumerForMessage:(id)message part:(id)part incomplete:(BOOL)incomplete;
-(id)dataConsumerForMessage:(id)message part:(id)part;
-(id)dataPathForMessage:(id)message part:(id)part;
-(id)attachmentsDirectoryForLibraryID:(unsigned)libraryID mailboxID:(unsigned)anId;
-(id)dataPathForMessage:(id)message;
-(id)dataPathForMessage:(id)message type:(int)type;
-(id)messageWithMessageID:(id)messageID inMailbox:(id)mailbox;
-(void)removeAllMessagesFromMailbox:(id)mailbox removeMailbox:(BOOL)mailbox2 andNotify:(BOOL)notify;
-(void)vacuumDataForObsoleteAccountURLString:(id)obsoleteAccountURLString;
-(void)deleteMailboxes:(id)mailboxes;
-(BOOL)renameMailboxes:(id)mailboxes to:(id)to;
-(void)compactMailbox:(id)mailbox;
-(void)compactMessages:(id)messages permanently:(BOOL)permanently;
-(void)_notifyDidCompact:(BOOL)_notify messages:(id)messages mailboxes:(id)mailboxes;
-(BOOL)_canSelectMessagesWithOptions:(unsigned)options db:(sqlite3*)db;
-(BOOL)shouldCancel;
-(id)accountForMessage:(id)message;
-(id)remoteStoreForMessage:(id)message;
-(id)mailboxUidForMessage:(id)message;
-(id)mailboxURLForMessage:(id)message;
-(id)pathForMailboxURL:(id)mailboxURL;
-(unsigned)mailboxIDForURLString:(id)urlstring;
-(id)urlForMailboxID:(unsigned)mailboxID;
-(id)stringForQuery:(id)query;
-(id)stringForQuery:(id)query monitor:(id)monitor;
-(int)loadMoreMessagesForThreadContainingMessage:(id)threadContainingMessage hasNoMoreMessages:(BOOL*)messages;
-(int)countOfMessagesMissingFromThreadContainingMessage:(id)threadContainingMessage;
-(id)_getReferencesForHashesWithOwners:(CFDictionaryRef)owners;
-(CFDictionaryRef)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)conversation;
-(id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(unsigned)libraryID messageIDHash:(long long)hash;
-(int)mailboxLocationOfMessageID:(unsigned)messageID usingDatabase:(sqlite3*)database;
-(id)messageWithLibraryID:(unsigned)libraryID options:(unsigned)options inMailbox:(id)mailbox;
-(id)messagesWithMessageIDHeader:(id)messageIDHeader;
-(id)messageWithMessageID:(id)messageID options:(unsigned)options inMailbox:(id)mailbox;
-(id)getDetailsForAllMessagesFromMailbox:(id)mailbox;
-(id)getDetailsForMessages:(unsigned)messages absoluteBottom:(unsigned)bottom topOfDesiredRange:(unsigned)desiredRange range:(NSRange*)range fromMailbox:(id)mailbox;
-(id)getDetailsForMessagesWithRemoteIDInRange:(NSRange)range fromMailbox:(id)mailbox;
-(void)setSequenceIdentifier:(id)identifier forMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;
-(void)setSequenceIdentifier:(id)identifier forMessageWithLibraryID:(unsigned)libraryID;
-(id)sequenceIdentifierForMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;
-(void)setSequenceIdentifier:(id)identifier forMailbox:(id)mailbox;
-(id)sequenceIdentifierForMailbox:(id)mailbox;
-(unsigned)minimumRemoteIDForMailbox:(id)mailbox;
-(unsigned)maximumRemoteIDForMailbox:(id)mailbox;
-(id)copyMessagesWithRemoteIDs:(id)remoteIDs options:(unsigned)options inRemoteMailbox:(id)remoteMailbox;
-(id)messageWithRemoteID:(id)remoteID inRemoteMailbox:(id)remoteMailbox;
-(id)oldestMessageInMailbox:(id)mailbox;
-(unsigned)totalCountForMailbox:(id)mailbox;
-(unsigned)nonDeletedCountForMailbox:(id)mailbox;
-(unsigned)nonDeletedCountForMailbox:(id)mailbox includeServerSearchResults:(BOOL)results includeThreadSearchResults:(BOOL)results3;
-(unsigned)deletedCountForMailbox:(id)mailbox;
-(unsigned)unreadCountForMailbox:(id)mailbox matchingCriterion:(id)criterion;
-(unsigned)unreadCountForMailbox:(id)mailbox;
-(unsigned)integerForQuery:(id)query withTextArgument:(id)textArgument;
-(id)messagesWithoutSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;
-(id)messagesWithSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;
-(id)messagesWithoutSummariesForMailbox:(id)mailbox;
-(id)messagesWithSummariesForMailbox:(id)mailbox range:(NSRange)range;
-(int)countOfRelatedMessagesMatchingCriterion:(id)relatedMessagesMatchingCriterion forConversationsContainingMessagesMatchingCriterion:(id)conversationsContainingMessagesMatchingCriterion forMailbox:(id)mailbox;
-(id)copyMessageInfosForConversationsContainingMessagesMatchingCriterion:(id)conversationsContainingMessagesMatchingCriterion forMailbox:(id)mailbox;
-(id)copyMessageInfosMatchingCriterion:(id)criterion;
-(id)copyMessageInfosForMailbox:(id)mailbox;
-(id)dateOfOldestNonSearchResultMessageInMailbox:(id)mailbox;
-(id)messagesNeedingSyncConfirmationForMailbox:(id)mailbox;
-(id)serverSearchResultMessagesForMailbox:(id)mailbox;
-(id)messagesForMailbox:(id)mailbox olderThanNumberOfDays:(int)days;
-(void)sendMessagesMatchingQuery:(const char*)query db:(sqlite3*)db to:(id)to options:(unsigned)options;
-(void)sendMessagesForStatement:(sqlite3_stmt*)statement db:(sqlite3*)db to:(id)to options:(unsigned)options timestamp:(unsigned long long)timestamp;
-(void)iterateStatement:(sqlite3_stmt*)statement db:(sqlite3*)db withProgressMonitor:(id)progressMonitor andRowHandler:(/*function-pointer*/ void*)handler context:(void*)context;
-(void)updateThreadingInfoForMessage:(id)message fromHeaders:(id)headers;
-(void)updateRecipientsForMessage:(id)message fromHeaders:(id)headers;
-(id)addMessages:(id)messages withMailbox:(id)mailbox fetchBodies:(BOOL)bodies newMessagesByOldMessage:(id)message remoteIDs:(id)ids setFlags:(unsigned long long)flags clearFlags:(unsigned long long)flags7 messageFlagsForMessages:(id)messages8 copyFiles:(BOOL)files addPOPUIDs:(BOOL)popuids dataSectionsByMessage:(id)message11;
// declared property getter: -(id)delegate;
// declared property setter: -(void)setDelegate:(id)delegate;
-(long long)addReferencesForMessage:(id)message libraryID:(unsigned)anId messageIDHash:(long long)hash withSubject:(id)subject withReferences:(id)references usingDatabase:(sqlite3*)database otherSubjectIDMappings:(id)mappings usingMailbox:(int)mailbox notify:(BOOL)notify;
-(id)addThreadingInfoBySubjectForMessageID:(unsigned)messageID nonPrefixedSubject:(id)subject messageIDsBySubject:(id)subject3 usingDatabase:(sqlite3*)database toReferences:(id)references withinMailbox:(int)mailbox;
-(id)referencesFromHeaders:(id)headers;
-(void)notifyConversation:(long long)conversation hasMergedIntoConversation:(long long)conversation2;
-(BOOL)_writeEmlxFile:(id)file withBodyData:(id)bodyData protectionClass:(int)aClass;
-(void)setMessage:(id)message isPartial:(BOOL)partial;
-(void)setNumberOfAttachments:(unsigned)attachments isSigned:(BOOL)aSigned isEncrypted:(BOOL)encrypted forMessage:(id)message;
-(id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;
-(void)setFlagsForMessages:(id)messages mask:(unsigned long long)mask;
-(void)setFlags:(unsigned long long)flags forMessage:(id)message;
-(void)dealloc;
-(id)initWithPath:(id)path;
@end

