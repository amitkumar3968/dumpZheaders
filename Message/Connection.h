/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import "Message-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableString, _MFSocket, NSArray, NSString, NSData;
@protocol MFSASLSecurityLayer;

@interface Connection : XXUnknownSuperclass {
	id<MFSASLSecurityLayer> _securityLayer;
	_MFSocket* _socket;
	double _lastUsedTime;
	char* _buffer;
	int _bufferRemainingBytes;
	unsigned _bufferStart;
	unsigned _bufferLength;
	unsigned _desiredBufferLength;
	z_stream_s* _deflater;
	z_stream_s* _inflater;
	char* _zbuffer;
	NSData* _logData;
	unsigned _dontLogReads;
	unsigned _readBytesNotLogged;
	NSMutableString* _readBytesToLog;
	unsigned _isFetching : 1;
	unsigned _allowFallbacks : 1;
	unsigned _compressionEnabled : 1;
}
@property(readonly, assign, nonatomic) BOOL usesOpportunisticSockets;
@property(readonly, assign, nonatomic) BOOL loginDisabled;
@property(readonly, assign, nonatomic) BOOL isForcedConnection;
@property(readonly, assign, nonatomic) BOOL hasBytesAvailable;
@property(readonly, assign, nonatomic) BOOL isValid;
@property(readonly, assign, nonatomic) NSString* securityProtocol;
@property(readonly, assign, nonatomic) NSArray* authenticationMechanisms;
@property(readonly, assign, nonatomic) NSArray* capabilities;
@property(readonly, assign, nonatomic) double lastUsedTime;
@property(assign, nonatomic) BOOL isFetching;
+(BOOL)shouldTryFallbacksAfterError:(id)error;
+(void)setLogActivityOnHosts:(id)hosts;
+(id)logActivityOnHosts;
+(void)setLogActivityOnPorts:(id)ports;
+(id)logActivityOnPorts;
+(void)setLogAllSocketActivity:(BOOL)activity;
+(BOOL)logAllSocketActivity;
+(void)setLogClasses:(id)classes;
+(id)logClasses;
+(void)flushLog;
+(void)logBytes:(const char*)bytes length:(int)length;
+(void)initialize;
+(void)readLoggingDefaults;
// declared property getter: -(double)lastUsedTime;
// declared property getter: -(BOOL)hasBytesAvailable;
-(void)disconnect;
// declared property getter: -(BOOL)isValid;
-(BOOL)startCompression;
// declared property getter: -(id)securityProtocol;
-(BOOL)startTLSForAccount:(id)account;
-(BOOL)authenticateUsingAccount:(id)account authenticator:(id)authenticator;
-(BOOL)readBytesIntoData:(id)data desiredLength:(unsigned)length;
-(BOOL)readLineIntoData:(id)data;
-(void)logReadChars:(const char*)chars length:(unsigned)length;
-(void)enableReadLogging:(BOOL)logging;
-(void)setDesiredReadBufferLength:(unsigned)length;
-(BOOL)writeData:(id)data;
-(BOOL)writeData:(id)data dontLogBytesInRange:(NSRange)range;
-(BOOL)writeBytes:(const char*)bytes length:(unsigned)length dontLogBytesInRange:(NSRange)range;
// declared property getter: -(BOOL)usesOpportunisticSockets;
// declared property getter: -(BOOL)loginDisabled;
// declared property getter: -(id)authenticationMechanisms;
// declared property getter: -(id)capabilities;
-(BOOL)authenticateUsingAccount:(id)account;
-(void)setAllowsFallbacks:(BOOL)fallbacks;
-(BOOL)connectUsingFallbacksForAccount:(id)account;
-(BOOL)connectUsingAccount:(id)account;
-(BOOL)connectUsingSettings:(id)settings;
-(void)_setupNetworkLogging;
// declared property setter: -(void)setIsFetching:(BOOL)fetching;
// declared property getter: -(BOOL)isFetching;
// declared property getter: -(BOOL)isForcedConnection;
-(id)description;
-(void)dealloc;
@end

