/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "WAKResponder.h"

@class CALayer;

@interface WAKWindow : WAKResponder {
@private
	WKWindow* _wkWindow;
	CALayer* _hostLayer;
	TileCache* _tileCache;
	CGRect _cachedVisibleRect;
	CALayer* _rootLayer;
	CGSize _screenSize;
	CGSize _availableScreenSize;
	float _screenScale;
	CGRect _frame;
	BOOL _useOrientationDependentFontAntialiasing;
}
@property(assign, nonatomic) BOOL useOrientationDependentFontAntialiasing;	// @synthesize=_useOrientationDependentFontAntialiasing
@property(assign) BOOL keepsZoomedOutTiles;	// converted property
@property(assign) float currentTileScale;	// converted property
@property(assign) float zoomedOutTileScale;	// converted property
@property(assign) int tilingDirection;	// converted property
@property(assign) int tilingMode;	// converted property
@property(assign) BOOL tilesOpaque;	// converted property
@property(retain) CALayer* rootLayer;	// converted property
@property(assign) float screenScale;	// converted property
@property(assign) CGSize availableScreenSize;	// converted property
@property(assign) CGSize screenSize;	// converted property
@property(retain) id contentView;	// converted property
@property(readonly, retain) CALayer* hostLayer;	// converted property
@property(readonly, assign) CGRect frame;	// converted property
+(id)currentEvent;
+(BOOL)hasLandscapeOrientation;
+(void)setOrientationProvider:(id)provider;
+(id)_wrapperForWindowRef:(WKWindow*)windowRef;
// declared property setter: -(void)setUseOrientationDependentFontAntialiasing:(BOOL)antialiasing;
// declared property getter: -(BOOL)useOrientationDependentFontAntialiasing;
-(id).cxx_construct;
-(id)recursiveDescription;
-(id)description;
-(void)dumpTiles;
-(void)setAcceleratedDrawingEnabled:(BOOL)enabled;
-(void)setTilePaintCountsVisible:(BOOL)visible;
-(void)setTileBordersVisible:(BOOL)visible;
// converted property getter: -(id)hostLayer;
-(void)didRotate;
-(void)willRotate;
-(void)displayRect:(CGRect)rect;
-(BOOL)hasPendingDraw;
// converted property getter: -(BOOL)keepsZoomedOutTiles;
// converted property setter: -(void)setKeepsZoomedOutTiles:(BOOL)tiles;
// converted property getter: -(float)currentTileScale;
// converted property setter: -(void)setCurrentTileScale:(float)scale;
// converted property getter: -(float)zoomedOutTileScale;
// converted property setter: -(void)setZoomedOutTileScale:(float)scale;
// converted property getter: -(int)tilingDirection;
// converted property setter: -(void)setTilingDirection:(int)direction;
// converted property getter: -(int)tilingMode;
// converted property setter: -(void)setTilingMode:(int)mode;
-(void)removeForegroundTiles;
-(void)removeAllTiles;
-(void)removeAllNonVisibleTiles;
-(CGRect)visibleRect;
// converted property setter: -(void)setTilesOpaque:(BOOL)opaque;
// converted property getter: -(BOOL)tilesOpaque;
-(void)setNeedsDisplayInRect:(CGRect)rect;
-(void)setNeedsDisplay;
-(void)layoutTilesNowForRect:(CGRect)rect;
-(void)layoutTilesNow;
-(void)layoutTiles;
-(void)sendMouseMoveEvent:(id)event contentChange:(int*)change;
-(void)sendEventSynchronously:(id)synchronously;
-(void)sendEvent:(id)event;
-(WKWindow*)_windowRef;
// converted property getter: -(id)rootLayer;
// converted property setter: -(void)setRootLayer:(id)layer;
// converted property getter: -(float)screenScale;
// converted property setter: -(void)setScreenScale:(float)scale;
// converted property getter: -(CGSize)availableScreenSize;
// converted property setter: -(void)setAvailableScreenSize:(CGSize)size;
// converted property getter: -(CGSize)screenSize;
// converted property setter: -(void)setScreenSize:(CGSize)size;
-(void)setContentRect:(CGRect)rect;
// converted property getter: -(CGRect)frame;
-(void)setFrame:(CGRect)frame display:(BOOL)display;
-(BOOL)makeFirstResponder:(id)responder;
-(int)keyViewSelectionDirection;
-(void)makeKeyWindow;
-(BOOL)isKeyWindow;
-(CGPoint)convertScreenToBase:(CGPoint)base;
-(CGPoint)convertBaseToScreen:(CGPoint)screen;
-(id)_newFirstResponderAfterResigning;
-(BOOL)makeViewFirstResponder:(id)responder;
-(id)firstResponder;
-(void)close;
// converted property getter: -(id)contentView;
// converted property setter: -(void)setContentView:(id)view;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
-(id)initWithLayer:(id)layer;
@end

