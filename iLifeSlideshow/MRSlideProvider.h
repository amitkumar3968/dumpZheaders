/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "iLifeSlideshow-Structs.h"
#import "MRLoadable.h"
#import "MRRenderable.h"

@class NSDictionary, MRLayer, NSConditionLock, NSString, MRLayerEffect, MRAudioPlayer, MRFrame, NSLock, MCSlide, MRImage, NSInvocationOperation;

@interface MRSlideProvider : XXUnknownSuperclass <MRLoadable, MRRenderable> {
	CGSize mDefaultSize;
	float mStillTime;
	NSString* mImageSizeScript;
	NSDictionary* mEffectAttributes;
	NSString* mShowTimeScript;
	NSInvocationOperation* mPreloadOperation;
	NSLock* mPreloadOperationLock;
	NSConditionLock* mPreloadSemaphore;
	MRFrame* mFrame;
	MRImage* mOriginalImage;
	MRImage* mOutputImage;
	CGSize mRequestedSize;
	double mShowTime;
	double mShowDuration;
	double mSlideStartTime;
	double mSlideDuration;
	MRLayerEffect* mEffectLayer;
	MCSlide* mSlide;
	int mKenBurnsType;
	NSString* mAssetPath;
	float mOriginalImageAspectRatio;
	MRLayer* mSlideLayer;
	CGSize mImageSize;
	CGSize mLastImageSize;
	double mLastTime;
	CGSize mLastDaSize;
	CGSize mSizeFactor;
	BOOL mIsAnimatedGIF;
	MCSlide* mSlideCopy;
	unsigned mSlideIndex;
	MRAudioPlayer* mFakeAudioPlayer;
	unsigned mFlags;
}
@property(readonly, assign, nonatomic) BOOL isInfinite;
@property(readonly, assign, nonatomic) BOOL isAlphaFriendly;
@property(readonly, assign, nonatomic) BOOL isOpaque;
@property(readonly, assign, nonatomic) BOOL isNative3D;
@property(readonly, assign, nonatomic) BOOL isLoaded;
@property(readonly, assign, nonatomic) double slideDuration;	// @synthesize=mSlideDuration
@property(readonly, assign, nonatomic) double slideStartTime;	// @synthesize=mSlideStartTime
@property(readonly, assign, nonatomic) float imageAspectRatio;
@property(readonly, assign, nonatomic) CGSize requestedSize;	// @synthesize=mRequestedSize
@property(readonly, assign) MRFrame* frame;	// @synthesize=mFrame
@property(assign, nonatomic) BOOL needsToUpdateLayout;
@property(assign) int kenBurnsType;	// @synthesize=mKenBurnsType
@property(retain, nonatomic) MCSlide* slide;	// @synthesize=mSlide
@property(assign, nonatomic) CGSize sizeFactor;	// @synthesize=mSizeFactor
@property(assign, nonatomic) double time;
@property(assign, nonatomic) BOOL isPlaying;
@property(readonly, assign) BOOL canPlay;
@property(assign, nonatomic) double showDuration;	// @synthesize=mShowDuration
@property(assign, nonatomic) double showTime;	// @synthesize=mShowTime
@property(readonly, assign) BOOL hasFilters;
@property(assign, nonatomic) BOOL slideIsReadonly;
@property(copy, nonatomic) NSString* showTimeScript;	// @synthesize=mShowTimeScript
@property(retain, nonatomic) NSDictionary* effectAttributes;	// @synthesize=mEffectAttributes
@property(copy, nonatomic) NSString* imageSizeScript;	// @synthesize=mImageSizeScript
@property(assign, nonatomic) float stillTime;	// @synthesize=mStillTime
@property(assign, nonatomic) BOOL isStill;
@property(assign, nonatomic) BOOL useMipmapping;
@property(assign, nonatomic) BOOL isMonochromatic;
@property(assign, nonatomic) CGSize defaultSize;	// @synthesize=mDefaultSize
+(void)applyKenBurnsForSlide:(id)slide inPlug:(id)plug forSize:(CGSize)size atTime:(double)time withTargetSize:(CGSize)targetSize kenBurnsType:(int)type translation:(CGPoint*)translation scale:(float*)scale rotation:(float*)rotation;
// declared property getter: -(double)slideDuration;
// declared property getter: -(double)slideStartTime;
// declared property getter: -(id)frame;
// declared property setter: -(void)setKenBurnsType:(int)type;
// declared property getter: -(int)kenBurnsType;
// declared property getter: -(id)slide;
// declared property setter: -(void)setSizeFactor:(CGSize)factor;
// declared property getter: -(CGSize)sizeFactor;
// declared property getter: -(CGSize)requestedSize;
// declared property setter: -(void)setShowDuration:(double)duration;
// declared property getter: -(double)showDuration;
// declared property setter: -(void)setShowTime:(double)time;
// declared property getter: -(double)showTime;
// declared property setter: -(void)setShowTimeScript:(id)script;
// declared property getter: -(id)showTimeScript;
// declared property getter: -(id)effectAttributes;
// declared property getter: -(id)imageSizeScript;
// declared property setter: -(void)setStillTime:(float)time;
// declared property getter: -(float)stillTime;
// declared property getter: -(CGSize)defaultSize;
-(id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;
-(id)retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;
-(void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;
-(BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;
-(BOOL)updateStuffWithAssetManager:(id)assetManager;
-(void)_computeImageSizeInContext:(id)context withArguments:(id)arguments;
// declared property getter: -(BOOL)isInfinite;
// declared property getter: -(BOOL)isAlphaFriendly;
// declared property getter: -(BOOL)isOpaque;
// declared property getter: -(BOOL)isNative3D;
-(void)cancelLoading;
-(void)unload;
-(void)loadTextureWithArguments:(id)arguments;
-(void)_loadTextureWithArguments:(id)arguments;
-(void)loadWithArguments:(id)arguments;
-(void)loadForTime:(double)time inContext:(id)context withArguments:(id)arguments now:(BOOL)now;
-(BOOL)isLoadedForTime:(double)time;
-(void)_unloadIfNotUpdatingLive;
-(BOOL)endLiveUpdate;
-(BOOL)beginLiveUpdate;
// declared property setter: -(void)setTime:(double)time;
// declared property getter: -(double)time;
// declared property setter: -(void)setIsPlaying:(BOOL)playing;
// declared property setter: -(void)setSlide:(id)slide;
-(void)updateShowTimeAndDurationWithPlug:(id)plug andAttributes:(id)attributes;
-(CGSize)unframedImageSizeForAspectRatio:(float)aspectRatio frameID:(id)anId andFrameAttributes:(id)attributes atIndex:(unsigned long)index framedImageSize:(CGSize*)size;
-(CGSize)framedImageSizeAtIndex:(unsigned long)index aspectRatio:(float)ratio;
// declared property getter: -(BOOL)hasFilters;
// declared property setter: -(void)setNeedsToUpdateLayout:(BOOL)updateLayout;
// declared property getter: -(BOOL)needsToUpdateLayout;
// declared property getter: -(BOOL)isLoaded;
// declared property getter: -(BOOL)isPlaying;
// declared property getter: -(BOOL)canPlay;
// declared property setter: -(void)setSlideIsReadonly:(BOOL)readonly;
// declared property getter: -(BOOL)slideIsReadonly;
// declared property setter: -(void)setIsStill:(BOOL)still;
// declared property getter: -(BOOL)isStill;
// declared property setter: -(void)setEffectAttributes:(id)attributes;
// declared property setter: -(void)setImageSizeScript:(id)script;
// declared property setter: -(void)setUseMipmapping:(BOOL)mipmapping;
// declared property getter: -(BOOL)useMipmapping;
// declared property setter: -(void)setIsMonochromatic:(BOOL)monochromatic;
// declared property getter: -(BOOL)isMonochromatic;
// declared property setter: -(void)setDefaultSize:(CGSize)size;
// declared property getter: -(float)imageAspectRatio;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)cleanup;
-(void)finalize;
-(void)dealloc;
-(id)initWithEffectLayer:(id)effectLayer;
-(void)printFlags;
@end

