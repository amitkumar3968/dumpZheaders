/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import "iLifeSlideshow-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray;

@interface MRTiledSprite : XXUnknownSuperclass {
	CGPoint mPosition;
	CGSize mHalfSize;
	float mRotation;
	CGRect mInnerRect;
	CGRect mOuterRect;
	BOOL mPreservesImageAspectRatio;
	BOOL mIsSealed;
	NSMutableArray* mTriangles;
	float* mVertices;
	float* mBasicTextureCoordinates;
	float* mInSpriteCoordinates;
	float* mTextureCoordinates[4];
	NSMutableArray* mMiddleTriangles;
	float* mMiddleVertices;
	float* mMiddleBasicTextureCoordinates;
	float* mMiddleInSpriteCoordinates;
	float* mMiddleTextureCoordinates[4];
	NSMutableArray* mOuterTriangles;
	float* mOuterVertices;
	float* mOuterBasicTextureCoordinates;
	float* mOuterInSpriteCoordinates;
	float* mOuterTextureCoordinates[4];
	CGSize mInSpriteCoordinatesFactor;
	CGPoint mInSpriteCoordinatesOffset;
	CGSize mTextureCoordinatesFactor[4];
	CGPoint mTextureCoordinatesOffset[4];
	BOOL mNeedsTextureCoordinates[4];
	BOOL mNeedsInSpriteCoordinates;
	BOOL mNeedsToUpdateInSpriteCoordinates;
	BOOL mHitIsActive;
}
@property(assign, nonatomic) BOOL preservesImageAspectRatio;	// @synthesize=mPreservesImageAspectRatio
@property(assign, nonatomic) BOOL needsInSpriteCoordinates;	// @synthesize=mNeedsInSpriteCoordinates
@property(assign, nonatomic) BOOL hitIsActive;	// @synthesize=mHitIsActive
@property(readonly, assign, nonatomic) CGRect outerRect;	// @synthesize=mOuterRect
@property(readonly, assign, nonatomic) CGRect innerRect;	// @synthesize=mInnerRect
@property(readonly, assign, nonatomic) float rotation;	// @synthesize=mRotation
@property(readonly, assign, nonatomic) CGSize halfSize;	// @synthesize=mHalfSize
@property(readonly, assign, nonatomic) CGPoint position;	// @synthesize=mPosition
// declared property setter: -(void)setPreservesImageAspectRatio:(BOOL)ratio;
// declared property getter: -(BOOL)preservesImageAspectRatio;
// declared property setter: -(void)setNeedsInSpriteCoordinates:(BOOL)spriteCoordinates;
// declared property getter: -(BOOL)needsInSpriteCoordinates;
// declared property setter: -(void)setHitIsActive:(BOOL)active;
// declared property getter: -(BOOL)hitIsActive;
// declared property getter: -(CGRect)outerRect;
// declared property getter: -(CGRect)innerRect;
// declared property getter: -(float)rotation;
// declared property getter: -(CGSize)halfSize;
// declared property getter: -(CGPoint)position;
-(void)getOpaquePosition:(CGPoint*)position andHalfSize:(CGSize*)size;
-(BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix;
-(BOOL)hitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint*)point3;
-(void)setSpriteCoordinatesFactor:(CGSize)factor andOffset:(CGPoint)offset;
-(void)setTextureCoordinatesFactor:(CGSize)factor andOffset:(CGPoint)offset onTextureUnit:(unsigned)unit;
-(void)setNeedsTextureCoordinates:(BOOL)coordinates onTextureUnit:(unsigned)unit;
-(void)renderImage:(id)image inContext:(id)context;
-(void)renderImageOuter:(id)outer inContext:(id)context;
-(void)renderImageMiddle:(id)middle inContext:(id)context;
-(void)renderImageInner:(id)inner inContext:(id)context;
-(void)renderDumbImage:(id)image inContext:(id)context;
-(void)updateInSpriteCoordinates;
-(void)seal;
-(void)subtractOpaqueSpriteWithPosition:(CGPoint)position halfSize:(CGSize)size andRotation:(float)rotation;
-(void)subtractSpriteAtPosition:(CGPoint)position withSize:(CGSize)size zRotation:(float)rotation andOpaqueRect:(CGRect)rect inContext:(id)context;
-(void)subtractSprite:(id)sprite;
-(void)subtractTriangle:(float [6])triangle fromTriangle:(float [6])triangle2 addTrianglesTo:(id)to;
-(void)dealloc;
-(id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect outerRect:(CGRect)rect5 context:(id)context;
-(id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect context:(id)context;
@end

