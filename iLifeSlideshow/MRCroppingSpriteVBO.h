/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "iLifeSlideshow-Structs.h"


@interface MRCroppingSpriteVBO : XXUnknownSuperclass {
	CGPoint mPosition;
	CGSize mHalfSize;
	float mRotation;
	CGRect mInnerRect;
	CGRect mOuterRect;
	BOOL mPreservesImageAspectRatio;
	BOOL mHitIsActive;
	BOOL mNeedsInSpriteCoordinates;
	CGSize mSpriteCoordinatesFactor;
	CGPoint mSpriteCoordinatesOffset;
	unsigned char mMeshType;
	unsigned mVBO;
	unsigned char mMiddleOffset;
	unsigned char mOuterOffset;
	unsigned char mNumberOfVertices;
	BOOL mPositionWasUpdated;
	BOOL mRectsWereUpdated;
}
@property(assign, nonatomic) unsigned char meshType;	// @synthesize=mMeshType
@property(assign, nonatomic) CGPoint spriteCoordinatesOffset;	// @synthesize=mSpriteCoordinatesOffset
@property(assign, nonatomic) CGSize spriteCoordinatesFactor;	// @synthesize=mSpriteCoordinatesFactor
@property(assign, nonatomic) BOOL needsInSpriteCoordinates;	// @synthesize=mNeedsInSpriteCoordinates
@property(assign, nonatomic) BOOL hitIsActive;	// @synthesize=mHitIsActive
@property(assign, nonatomic) BOOL preservesImageAspectRatio;	// @synthesize=mPreservesImageAspectRatio
@property(assign, nonatomic) CGRect outerRect;	// @synthesize=mOuterRect
@property(assign, nonatomic) CGRect innerRect;	// @synthesize=mInnerRect
@property(readonly, assign, nonatomic) float rotation;	// @synthesize=mRotation
@property(readonly, assign, nonatomic) CGSize halfSize;	// @synthesize=mHalfSize
@property(readonly, assign, nonatomic) CGPoint position;	// @synthesize=mPosition
// declared property setter: -(void)setMeshType:(unsigned char)type;
// declared property getter: -(unsigned char)meshType;
// declared property setter: -(void)setSpriteCoordinatesOffset:(CGPoint)offset;
// declared property getter: -(CGPoint)spriteCoordinatesOffset;
// declared property setter: -(void)setSpriteCoordinatesFactor:(CGSize)factor;
// declared property getter: -(CGSize)spriteCoordinatesFactor;
// declared property setter: -(void)setNeedsInSpriteCoordinates:(BOOL)spriteCoordinates;
// declared property getter: -(BOOL)needsInSpriteCoordinates;
// declared property setter: -(void)setHitIsActive:(BOOL)active;
// declared property getter: -(BOOL)hitIsActive;
// declared property setter: -(void)setPreservesImageAspectRatio:(BOOL)ratio;
// declared property getter: -(BOOL)preservesImageAspectRatio;
// declared property getter: -(CGRect)outerRect;
// declared property getter: -(CGRect)innerRect;
// declared property getter: -(float)rotation;
// declared property getter: -(CGSize)halfSize;
// declared property getter: -(CGPoint)position;
-(BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix;
-(BOOL)hitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint*)point3;
-(void)renderImageOuter:(id)outer inContext:(id)context;
-(void)renderImageMiddle:(id)middle inContext:(id)context;
-(void)renderImageInner:(id)inner inContext:(id)context;
-(void)updateVBOsInContext:(id)context;
-(void)getOpaquePosition:(CGPoint*)position andHalfSize:(CGSize*)size;
// declared property setter: -(void)setOuterRect:(CGRect)rect;
// declared property setter: -(void)setInnerRect:(CGRect)rect;
-(void)fakeRenderInContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;
-(void)reset;
-(id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect outerRect:(CGRect)rect5 context:(id)context;
-(id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect context:(id)context;
-(id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation context:(id)context;
-(id)init;
@end

