/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "iLifeSlideshow-Structs.h"

@class NSDictionary, MRRendererInternal, MCMontage, CADisplayLink, MRLayerParallelizer, MRContext;
@protocol MREditingDelegate, MRFeatureDelegate, MRLiveSlideshowDelegate, MZMediaManagement, MRAsynchronousOperationsDelegate, MRRenderingDelegate;

@interface MRRenderer : XXUnknownSuperclass {
@private
	MRLayerParallelizer* mTopMRLayer;
	CGSize mSize;
	MRRendererInternal* mInternal;
	id<MREditingDelegate> mEditingDelegate;
	id<MRFeatureDelegate> mFeatureDelegate;
	NSDictionary* mDescriptionsForRandomTransitionPresetIDs;
	CADisplayLink* mDisplayLink;
	double mDisplayLinkTimestamp;
	NSDictionary* mDescriptionsForRandomTransitionPresetIDs;
	MCMontage* mMontage;
	int mMode;
	int mOrientation;
	BOOL mIsEditing;
	BOOL mIsPlaying;
	BOOL mPushRendering;
	BOOL mRequestRenderingOnChanges;
	BOOL mDisplaysFPS;
	BOOL mDisplaysPlayingIDs;
	BOOL mDisplaysIsPreloadingImages;
	id<MZMediaManagement> mAssetManagementDelegate;
	id<MRRenderingDelegate> mRenderingDelegate;
	float mVolume;
	double mTimeQuantum;
	int _frameBufferStatus;
	NSDictionary* mParameters;
	BOOL mIsCleanedUp;
	BOOL _asynchronousOperationsAreSuspended;
}
@property(assign, setter=suspendAsynchronousOperations:) BOOL asynchronousOperationsAreSuspended;	// @synthesize=_asynchronousOperationsAreSuspended
@property(readonly, assign) BOOL isCleanedUp;	// @synthesize=mIsCleanedUp
@property(assign) BOOL slaveFrameMode;
@property(assign) BOOL usesNewImageManager;
@property(assign) int frameBufferStatus;	// @synthesize=_frameBufferStatus
@property(retain) id<MREditingDelegate> editingDelegate;	// @synthesize=mEditingDelegate
@property(retain) id<MRRenderingDelegate> renderingDelegate;	// @synthesize=mRenderingDelegate
@property(retain) id<MRFeatureDelegate> featureDelegate;	// @synthesize=mFeatureDelegate
@property(retain, nonatomic) id<MZMediaManagement> assetManagementDelegate;	// @synthesize=mAssetManagementDelegate
@property(readonly, assign) NSDictionary* parameters;	// @synthesize=mParameters
@property(assign, nonatomic) float volume;	// @synthesize=mVolume
@property(assign, nonatomic) unsigned char currentLayoutIndex;
@property(assign, nonatomic) BOOL requestRenderingOnChanges;	// @synthesize=mRequestRenderingOnChanges
@property(assign, nonatomic) BOOL pushRendering;	// @synthesize=mPushRendering
@property(readonly, assign) BOOL isPlaying;	// @synthesize=mIsPlaying
@property(assign, nonatomic) BOOL isEditing;	// @synthesize=mIsEditing
@property(assign, nonatomic) BOOL displaysIsPreloadingImages;	// @synthesize=mDisplaysIsPreloadingImages
@property(assign, nonatomic) BOOL displaysPlayingIDs;	// @synthesize=mDisplaysPlayingIDs
@property(assign, nonatomic) BOOL displaysFPS;	// @synthesize=mDisplaysFPS
@property(readonly, assign) BOOL isOffscreen;
@property(assign, nonatomic) int mode;	// @synthesize=mMode
@property(assign, nonatomic) int orientation;	// @synthesize=mOrientation
@property(assign, nonatomic) double timeQuantum;	// @synthesize=mTimeQuantum
@property(assign, nonatomic) double time;
@property(assign, nonatomic) CGSize size;	// @synthesize=mSize
@property(retain, nonatomic) MCMontage* montage;	// @synthesize=mMontage
@property(assign) BOOL hideTextWhileEditing;
@property(assign) BOOL screenBurnTest;
@property(retain) id<MRAsynchronousOperationsDelegate> asynchronousOperationsDelegate;
@property(retain) id<MRLiveSlideshowDelegate> liveSlideshowDelegate;
@property(readonly, assign) BOOL isFlipped;
@property(assign) double masterClock;
@property(assign) BOOL dontShowDRMUI;
@property(assign, nonatomic) CGPoint contextOffset;
@property(readonly, assign) MRContext* context;
+(BOOL)isDiskImageCacheEnabled;
+(void)enableDiskImageCache;
+(float)textScaleForResolution:(CGSize)resolution;
// declared property setter: -(void)suspendAsynchronousOperations:(BOOL)operations;
// declared property getter: -(BOOL)asynchronousOperationsAreSuspended;
// declared property getter: -(BOOL)isCleanedUp;
// declared property getter: -(id)parameters;
// declared property setter: -(void)setFrameBufferStatus:(int)status;
// declared property getter: -(int)frameBufferStatus;
// declared property getter: -(double)timeQuantum;
// declared property setter: -(void)setVolume:(float)volume;
// declared property getter: -(float)volume;
// declared property setter: -(void)setEditingDelegate:(id)delegate;
// declared property getter: -(id)editingDelegate;
// declared property setter: -(void)setRenderingDelegate:(id)delegate;
// declared property getter: -(id)renderingDelegate;
// declared property setter: -(void)setFeatureDelegate:(id)delegate;
// declared property getter: -(id)featureDelegate;
// declared property getter: -(id)assetManagementDelegate;
// declared property setter: -(void)setDisplaysIsPreloadingImages:(BOOL)images;
// declared property getter: -(BOOL)displaysIsPreloadingImages;
// declared property setter: -(void)setDisplaysPlayingIDs:(BOOL)ids;
// declared property getter: -(BOOL)displaysPlayingIDs;
// declared property getter: -(BOOL)displaysFPS;
// declared property setter: -(void)setRequestRenderingOnChanges:(BOOL)changes;
// declared property getter: -(BOOL)requestRenderingOnChanges;
// declared property setter: -(void)setPushRendering:(BOOL)rendering;
// declared property getter: -(BOOL)pushRendering;
// declared property setter: -(void)setIsEditing:(BOOL)editing;
// declared property getter: -(BOOL)isEditing;
// declared property getter: -(int)mode;
// declared property getter: -(CGSize)size;
// declared property getter: -(id)montage;
-(void)endMorphing;
-(void)beginMorphingToAspectRatio:(float)aspectRatio andOrientation:(int)orientation withDuration:(double)duration;
-(void)addIDToDisplay:(id)display :(id)arg2;
-(void)imagePreloadingEnded;
-(void)imagePreloadingBegan;
-(void)stall;
-(void)effect:(id)effect requestedNumberOfSlides:(unsigned)slides firstSlideIndexStillNeeded:(unsigned)needed;
-(void)_effectRequestedSlides:(id)slides;
-(void)nearingEndForSerializer:(id)serializer;
-(void)_nearingEndForSerializer:(id)serializer;
-(void)dumpActiveHierarchy;
-(id)snapshotOfStates:(id)states atSize:(CGSize)size;
-(void)gotoState:(id)state;
-(id)currentState;
-(id)plugForCurrentSublayerInNavigatorForPlug:(id)plug;
-(id)layerForPlugObjectID:(id)plugObjectID;
-(id)layerForPlug:(id)plug;
-(void)transitionToPreviousPlugInContainerOfPlug:(id)plug;
-(void)transitionToNextPlugInContainerOfPlug:(id)plug;
// declared property setter: -(void)setDisplaysFPS:(BOOL)fps;
// declared property setter: -(void)setAssetManagementDelegate:(id)delegate;
// declared property getter: -(BOOL)isOffscreen;
// declared property setter: -(void)setUsesNewImageManager:(BOOL)manager;
// declared property getter: -(BOOL)usesNewImageManager;
// declared property setter: -(void)setMode:(int)mode;
// declared property setter: -(void)setCurrentLayoutIndex:(unsigned char)index;
// declared property getter: -(unsigned char)currentLayoutIndex;
// declared property setter: -(void)setOrientation:(int)orientation;
// declared property getter: -(int)orientation;
// declared property setter: -(void)setContextOffset:(CGPoint)offset;
// declared property getter: -(CGPoint)contextOffset;
-(void)setTemporarySize:(CGSize)size;
// declared property setter: -(void)setSize:(CGSize)size;
// declared property setter: -(void)setTimeQuantum:(double)quantum;
-(void)_syncTimeToOuter;
// declared property setter: -(void)setTime:(double)time;
// declared property getter: -(double)time;
-(void)moveNavigatorFromForthToBackHistory:(id)backHistory;
-(void)moveNavigatorFromBackToForthHistory:(id)forthHistory;
-(void)removeNavigatorFromForthHistory:(id)forthHistory;
-(void)removeNavigatorFromBackHistory:(id)backHistory;
-(void)addNavigatorToForthHistory:(id)forthHistory;
-(void)addNavigatorToBackHistory:(id)backHistory;
-(BOOL)canGoForth;
-(BOOL)canGoBack;
-(void)goForth;
-(void)goBack;
-(void)stepBackward;
-(void)stepForward;
-(void)_doSnapshot;
-(void)_renderForScreenBurnTestAtTime:(double)time;
-(void)_renderWithPassParameters:(id)passParameters;
-(void)_stopRenderTimer;
-(void)_startRenderTimer;
-(void)_renderOnDisplayLink:(id)link;
-(void)updateTimeWithDisplayLinkTimestamp:(double)displayLinkTimestamp;
-(void)_renderThreadMain;
-(void)warmupVideo:(BOOL)video;
-(void)warmupAudio:(BOOL)audio;
-(BOOL)requestRenderingWithin:(double)within;
-(void)requestRendering:(BOOL)rendering;
-(void)pauseWhenStill;
-(void)_resume;
-(void)_pause;
-(void)_syncIsPlayingToOuter;
-(void)resume;
-(void)pause;
// declared property getter: -(BOOL)isPlaying;
// declared property setter: -(void)setSlaveFrameMode:(BOOL)mode;
// declared property getter: -(BOOL)slaveFrameMode;
-(void)unlockRendering;
-(void)lockRendering;
// declared property setter: -(void)setMontage:(id)montage;
-(void)setEAGLContext:(id)context;
-(void)cleanup;
-(void)finalize;
-(void)dealloc;
-(id)init;
-(id)initWithParameters:(id)parameters;
-(void)_displayIsPreloadingImages;
-(void)_displayPlayingIDs;
-(void)_displayFPS:(double)fps actuallyDisplay:(BOOL)display;
-(double)_unalteredTime;
-(void)_setTime:(double)time isResyncing:(BOOL)resyncing;
-(void)removeAudioPlayer:(id)player;
-(void)addAudioPlayer:(id)player;
-(void)processAudioPlayers;
-(void)setUseCGLFlushDrawableWorkaround:(BOOL)workaround;
// declared property setter: -(void)setHideTextWhileEditing:(BOOL)editing;
// declared property getter: -(BOOL)hideTextWhileEditing;
// declared property setter: -(void)setScreenBurnTest:(BOOL)test;
// declared property getter: -(BOOL)screenBurnTest;
// declared property setter: -(void)setAsynchronousOperationsDelegate:(id)delegate;
// declared property getter: -(id)asynchronousOperationsDelegate;
// declared property setter: -(void)setLiveSlideshowDelegate:(id)delegate;
// declared property getter: -(id)liveSlideshowDelegate;
-(void)setMasterStartTime:(double)time andDuration:(double)duration mode:(int)mode;
-(void)setMasterStartTime:(double)time andDuration:(double)duration loop:(BOOL)loop;
-(CGImageRef)currentFrameAsCGImage;
-(CGImageRef)copyCGSnapshotAtTime:(double)time andSize:(CGSize)size;
-(CGImageRef)snapshotAsCGImageForTime:(double)time andSize:(CGSize)size;
-(id)layerAtPath:(id)path fromLayer:(id)layer;
-(void)undimAllLayers;
-(void)dimLayersExceptForPathTo:(id)to;
-(void)_undimAllLayersInLayer:(id)layer;
-(void)_dimLayersExceptForPathTo:(id)to;
-(id)selectedLayers;
-(void)deselectAllLayers;
-(void)deselectLayer:(id)layer;
-(void)selectLayer:(id)layer;
-(void)updateSelectionLayer;
// declared property getter: -(BOOL)isFlipped;
-(void)setFreezeSizeOfImageRequests:(BOOL)imageRequests;
// declared property setter: -(void)setMasterClock:(double)clock;
// declared property getter: -(double)masterClock;
// declared property setter: -(void)setDontShowDRMUI:(BOOL)drmui;
// declared property getter: -(BOOL)dontShowDRMUI;
// declared property getter: -(id)context;
-(void)sendNotification:(id)notification;
-(void)_sendNotificationMainThread:(id)thread;
-(id)chooseTransitionIDForRandomTransitionPresetID:(id)randomTransitionPresetID;
-(id)actionByEvaluatingConditionalAction:(id)action withStates:(id)states;
-(BOOL)sendStandardAction:(id)action;
-(void)sendMCAction:(id)action fromSender:(id)sender toTarget:(id)target;
-(void)sendMCAction:(id)action fromSender:(id)sender;
-(void)doAction:(id)action;
-(void)_doActions;
-(double)_doAction:(id)action;
-(id)actionHitAtPoint:(CGPoint)point layer:(id*)layer;
-(id)layerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint*)point3;
-(void)touchesCancelled:(id)cancelled;
-(BOOL)touchesEnded:(id)ended;
-(void)touchesMoved:(id)moved;
-(void)touchesBegan:(id)began;
-(void)_doLayerTrackingAtLocation:(CGPoint)location;
-(id)_computeMatrixChainForLayer:(id)layer;
-(void)_cleanupGestureRecognizers;
-(void)endTextEditing:(BOOL)editing;
-(BOOL)beginTextEditingOfElement:(id)element inPlug:(id)plug callDelegate:(BOOL)delegate;
-(BOOL)beginTextEditingOfElement:(id)element inLayer:(id)layer callDelegate:(BOOL)delegate;
-(int)_maxLinesForCurrentEditingTextElement;
-(CGSize)_maxSizeForCurrentEditingTextElement;
-(BOOL)getVerticesCoordinatesForCurrentlyEditedTextElement:(CGPoint (*)[4])currentlyEditedTextElement;
@end

