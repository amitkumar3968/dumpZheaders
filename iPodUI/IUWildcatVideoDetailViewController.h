/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iPodUI.framework/iPodUI
 */

#import "IUSegmentedViewControllerDelegate.h"
#import "IUWildcatVideoDetailViewDelegate.h"
#import "IUVideoPartListViewControllerDelegate.h"
#import "iPodUI-Structs.h"
#import "UIAlertViewDelegate.h"
#import "IUiPodViewController.h"

@class MPImageCache, MPMediaItemImageRequest, IUiPodSegmentedViewController, IUVideoTitleView, MPMediaDownloadObserver, NSSet, IUWildcatVideoDetailView, IUVideoPartListViewController, MPMediaItem, UIAlertView, UIImage;
@protocol IUWildcatVideoDetailViewControllerDelegate;

@interface IUWildcatVideoDetailViewController : IUiPodViewController <IUSegmentedViewControllerDelegate, IUWildcatVideoDetailViewDelegate, UIAlertViewDelegate, IUVideoPartListViewControllerDelegate> {
@private
	id<IUWildcatVideoDetailViewControllerDelegate> _delegate;
	BOOL _hasPushedPlayback;
	double _downloadProgress;
	MPImageCache* _posterImageCache;
	MPMediaItemImageRequest* _posterImageRequest;
	UIImage* _preloadedSnapshotImage;
	UIAlertView* _rentalAlertView;
	unsigned long long _representativeTrackPersistentUID;
	IUiPodSegmentedViewController* _segmentedViewController;
	MPImageCache* _snapshotImageCache;
	MPMediaItemImageRequest* _snapshotImageRequest;
	NSSet* _temporaryAnimationViews;
	UIImage* _temporarySnapshotImageForTransition;
	IUVideoPartListViewController* _videoPartListViewController;
	IUVideoTitleView* _videoTitleView;
	MPMediaDownloadObserver* _mediaDownloadObserver;
}
@property(retain, nonatomic) IUVideoPartListViewController* videoPartListViewController;	// @synthesize=_videoPartListViewController
@property(retain, nonatomic) UIImage* preloadedSnapshotImage;	// @synthesize=_preloadedSnapshotImage
@property(readonly, assign, nonatomic) IUiPodSegmentedViewController* segmentedViewController;
@property(readonly, assign, nonatomic) IUWildcatVideoDetailView* backstopView;
@property(readonly, assign, nonatomic) BOOL hasAtLeastOneItem;
@property(assign, nonatomic) unsigned long long representativeTrackPersistentUID;	// @synthesize=_representativeTrackPersistentUID
@property(readonly, assign, nonatomic) MPMediaItem* firstMediaItem;
@property(assign, nonatomic) id<IUWildcatVideoDetailViewControllerDelegate> delegate;	// @synthesize=_delegate
+(Class)backstopViewClass;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
// declared property getter: -(unsigned long long)representativeTrackPersistentUID;
// declared property setter: -(void)setVideoPartListViewController:(id)controller;
// declared property getter: -(id)videoPartListViewController;
// declared property setter: -(void)setPreloadedSnapshotImage:(id)image;
// declared property getter: -(id)preloadedSnapshotImage;
-(void)_databaseDynamicContentsDidChangeNotification:(id)_databaseDynamicContents;
-(void)_databaseContentsDidChangeNotification:(id)_databaseContents;
-(id)_newPosterImageCacheRequest;
-(CGSize)_posterImageCacheRequestSize;
-(void)_notifyDelegateOfRepresentativeTrackPersistentUID;
-(BOOL)_isFirstMediaItemMovie;
-(BOOL)_isMovie:(id)movie;
-(void)_rentalInfoChangedNotification:(id)notification;
-(void)_reallyPlayMovie;
-(void)alertViewCancel:(id)cancel;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)_generatePreloadedSnapshotImageFromDefaultTrack;
-(void)_screensChanged:(id)changed;
-(void)_destroyTemporaryAnimationViews;
-(void)_destroyRentalAlertView;
-(void)_cancelRentalAlertView:(BOOL)view;
-(void)_cancelImageRequest:(id*)request;
-(void)_backButtonAction:(id)action;
-(void)playMovie;
-(void)_playMovie:(id)movie;
-(id)segmentedViewControllerInitialSelectedIdentifier;
-(id)segmentedViewControllerIdentifiers;
-(void)setDataSource:(id)source query:(id)query forEpisodeViewControllerContext:(id)episodeViewControllerContext;
-(void)pushPlaybackContext;
-(void)didDeleteTrackWithPersistentUID:(unsigned long long)persistentUID;
-(void)segmentedViewController:(id)controller willSelectViewController:(id)controller2;
-(BOOL)segmentedViewController:(id)controller canSelectViewController:(id)controller2;
-(id)segmentedControlForSegmentedViewController:(id)segmentedViewController;
-(BOOL)shouldShowReflection;
-(BOOL)shouldShowDividingLine;
-(BOOL)restoreArchivedContexts:(id)contexts;
-(id)copyArchivableContexts;
-(void)reloadData;
-(void)_setupDownloadObserver;
-(void)_removeDownloadObserver;
-(void)_updateForDownloadProgress:(double)downloadProgress currentlyPlayable:(BOOL)playable;
-(BOOL)_hasListOfMediaItems;
-(BOOL)_isDownloadInProgress;
-(id)_transitionImageWithPosterAspectRatio;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)_layoutUI;
-(void)loadView;
-(CGRect)foldingTransitionFrontFaceFrame;
-(float)_foldingTransitionHeightOfVerticalSection:(unsigned)verticalSection;
-(id)foldingTransitionFaceWithFrame:(CGRect)frame antiAliasedEdgeMask:(unsigned long)mask;
-(id)newSnapshotFaceViewWithBounds:(CGRect)bounds antiAliasedEdgeMask:(unsigned long)mask;
-(id)_aaEdgeViewWithFrame:(CGRect)frame;
-(void)foldingTransitionViewDidTakeSnapshot;
-(void)foldingTransitionViewWillTakeSnapshot;
// declared property getter: -(BOOL)hasAtLeastOneItem;
-(void)flashItemForMediaItem:(id)mediaItem atTime:(double)time;
-(id)segmentedViewControllerSubViewControllers;
// declared property getter: -(id)segmentedViewController;
-(id)_representativeMediaItem;
-(id)_nonSelectionPlaybackMediaItem;
// declared property getter: -(id)firstMediaItem;
// declared property setter: -(void)setRepresentativeTrackPersistentUID:(unsigned long long)uid;
// declared property getter: -(id)backstopView;
-(void)dealloc;
-(id)init;
@end

