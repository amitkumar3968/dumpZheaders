/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iPodUI.framework/iPodUI
 */

#import "iPodUI-Structs.h"
#import "IUiPodViewController.h"
#import "UIActionSheetDelegate.h"
#import "IUSearchHelperDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class IUMediaAlertView, IUMediaActionSheet, IUSearchHelper, NSIndexPath, UILabel, UITableView, NSObject, UIView, UISearchDisplayController, IUTableViewControllerInfo;
@protocol OS_dispatch_queue;

@interface IUTableViewController : IUiPodViewController <IUSearchHelperDelegate, UIActionSheetDelegate, UITableViewDataSource, UITableViewDelegate> {
@private
	IUMediaActionSheet* _deleteActionSheet;
	IUMediaAlertView* _deleteAlertView;
	CFDictionaryRef _displayedSectionIndexToDataSourceSectionIndex;
	BOOL _editing;
	NSObject<OS_dispatch_queue>* _footerQueue;
	UIView* _footerView;
	UIView* _globalHeaderView;
	UILabel* _globalHeaderLabel;
	unsigned _ignoreTableReloadCount;
	NSIndexPath* _indexPathToDeletePendingConfirmation;
	BOOL _needsTableFooterViewScrolledToVisible;
	BOOL _isBeingRemoved;
	BOOL _keepSelectionOnAppear;
	BOOL _reloadingData;
	BOOL _reloadWhenAppEntersForeground;
	IUTableViewControllerInfo* _restoreViewInfoAfterLoad;
	IUSearchHelper* _searchHelper;
	IUMediaAlertView* _selectionConfirmationAlert;
	BOOL _showingIndexBar;
	BOOL _startAtEndOnFirstAppear;
	UITableView* _tableView;
}
@property(assign, nonatomic) BOOL needsTableFooterViewScrolledToVisible;	// @synthesize=_needsTableFooterViewScrolledToVisible
@property(readonly, assign, nonatomic) UISearchDisplayController* searchDisplayController;
@property(readonly, assign, nonatomic, getter=isShowingIndexBar) BOOL showingIndexBar;
@property(readonly, assign, nonatomic) BOOL allowsDisclosureInCells;
@property(readonly, assign, nonatomic) IUSearchHelper* searchHelper;	// @synthesize=_searchHelper
@property(readonly, assign, nonatomic) BOOL hasSearchBar;
@property(assign, nonatomic, getter=isEditing) BOOL editing;
@property(retain, nonatomic) UIView* footerView;	// @synthesize=_footerView
@property(retain, nonatomic) UITableView* tableView;	// @synthesize=_tableView
@property(assign, nonatomic) BOOL fadeSelectionOnAppear;
@property(readonly, assign, nonatomic, getter=isIgnoringTableReload) BOOL ignoringTableReload;
+(Class)tableViewClass;
+(id)tableViewBackgroundColor;
+(Class)tableViewCellClass;
// declared property setter: -(void)setNeedsTableFooterViewScrolledToVisible:(BOOL)visible;
// declared property getter: -(BOOL)needsTableFooterViewScrolledToVisible;
// declared property setter: -(void)setTableView:(id)view;
// declared property getter: -(id)tableView;
// declared property getter: -(id)searchHelper;
// declared property getter: -(id)footerView;
-(void)_updateForChangedEditingState:(BOOL)changedEditingState;
-(void)updateFooterView;
-(void)autoscrollTableFooterViewToVisibleIfNeeded;
-(void)_reloadDataIncludingDataSource:(BOOL)source popIfEmpty:(BOOL)empty;
-(void)_addGlobalHeaderIfNecessary;
-(void)_cancelDeleteAction:(id)action;
-(void)_setDeleteAlertView:(id)view;
-(void)_setDeleteActionSheet:(id)sheet;
-(void)_reloadDataSource;
-(void)_presentModalContextForTag:(int)tag;
-(void)_fixupDataSource;
-(void)doDeleteContinuationWithConfirmation:(BOOL)confirmation;
-(void)_deleteEntityAtIndexPath:(id)indexPath;
-(void)_createTableIfNecessary;
-(void)_cancelDeleteAlertView:(BOOL)view;
-(void)_tableViewController_purchasableMediaDidFinishNotification:(id)_tableViewController_purchasableMedia;
-(void)_tableViewController_networkTypeDidChangeNotification:(id)_tableViewController_networkType;
-(void)_tableViewController_mediaLibraryDisplayValuesDidChangeNotification:(id)_tableViewController_mediaLibraryDisplayValues;
-(void)_tableViewController_defaultMediaLibraryDidChangeNotification:(id)_tableViewController_defaultMediaLibrary;
-(void)_tableViewController_applicationWillEnterForegroundNotification:(id)_tableViewController_application;
-(void)_delayedDeselectIndexPath:(id)path;
-(void)searchHelperWillEndSearch:(id)searchHelper;
-(void)searchHelperWillBeginSearch:(id)searchHelper;
-(void)alertViewCancel:(id)cancel;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(CGRect)tableView:(id)view frameForSectionIndexGivenProposedFrame:(CGRect)sectionIndexGivenProposedFrame;
-(void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view targetIndexPathForMoveFromRowAtIndexPath:(id)indexPath toProposedIndexPath:(id)proposedIndexPath;
-(void)tableView:(id)view didEndEditingRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willBeginEditingRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view editingStyleForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willSelectRowAtIndexPath:(id)indexPath;
-(void)accessoryButtonTapped:(id)tapped;
-(void)tableView:(id)view accessoryButtonTappedForRowWithIndexPath:(id)indexPath;
-(float)tableView:(id)view heightForHeaderInSection:(int)section;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)tableView:(id)view sectionForSectionIndexTitle:(id)sectionIndexTitle atIndex:(int)index;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(void)_delayedUpdateMovedCellData;
-(void)_updateCellConfigurations;
-(void)_delayedUpdateAlternateStyles;
-(void)tableView:(id)view moveRowAtIndexPath:(id)indexPath toIndexPath:(id)indexPath3;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view commitEditingStyle:(int)style forRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canMoveRowAtIndexPath:(id)indexPath;
-(id)sectionIndexTitlesForTableView:(id)tableView;
-(int)numberOfSectionsInTableView:(id)tableView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)viewWillAppear:(BOOL)view;
-(void)_deselectSelection:(BOOL)selection;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)willMoveToParentViewController:(id)parentViewController;
-(BOOL)deselectOnViewWillAppear;
-(void)viewDidAppear:(BOOL)view;
-(void)setModalContext:(id)context;
-(void)setContext:(id)context;
-(void)restoreViewControllerInfo:(id)info animated:(BOOL)animated;
-(void)_reallyPopSelfIfEmpty;
-(void)_onMainThreadPopSelfIfEmpty;
-(BOOL)_isEmptyAndDoesntWantDisplay:(BOOL)display;
-(void)reloadDataForDataSourceInvalidation;
-(void)reloadData;
-(BOOL)handleShortcutWithIdentifier:(id)identifier;
-(void)loadView;
-(id)copyArchivableContexts;
-(void)applicationResumedEventsOnly:(BOOL)only;
-(void)setVisibleCellsUseSubviewLayout:(BOOL)layout;
// declared property getter: -(id)searchDisplayController;
// declared property getter: -(BOOL)isShowingIndexBar;
// declared property getter: -(BOOL)hasSearchBar;
// declared property setter: -(void)setFadeSelectionOnAppear:(BOOL)appear;
// declared property setter: -(void)setFooterView:(id)view;
-(void)setEditing:(BOOL)editing animated:(BOOL)animated;
// declared property setter: -(void)setEditing:(BOOL)editing;
// declared property getter: -(BOOL)isEditing;
// declared property getter: -(BOOL)isIgnoringTableReload;
-(BOOL)hideSearchRowOnAppear;
-(BOOL)hideActionRowsOnAppear;
// declared property getter: -(BOOL)fadeSelectionOnAppear;
-(void)endIgnoringTableReload;
-(void)beginIgnoringTableReload;
-(void)concealCompletionOfferingItems;
-(void)toggleVisibilityOfItemsInCompletionOffering:(id)completionOffering;
-(void)mediaListAggregateView:(id)view performActionForSimpleCellPreset:(int)simpleCellPreset;
// declared property getter: -(BOOL)allowsDisclosureInCells;
-(void)_updateHeightForTableHeaderViewHiding;
-(void)reloadRowsAtIndexPaths:(id)indexPaths withRowAnimation:(int)rowAnimation;
-(void)reloadCellAtIndexPath:(id)indexPath animated:(BOOL)animated;
-(void)reloadActionRows;
-(void)performDefaultActionForRow:(int)row existingContext:(id)context;
-(void)performDefaultActionForRow:(int)row;
-(void)performActionForActionRow:(id)actionRow animated:(BOOL)animated existingContext:(id)context;
-(void)performActionForActionRow:(id)actionRow animated:(BOOL)animated;
-(void)dealloc;
-(id)init;
@end

