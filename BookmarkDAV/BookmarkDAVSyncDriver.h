/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BookmarkDAV.framework/BookmarkDAV
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "CoreDAVLocalDBTreeInfoProvider.h"
#import "CoreDAVDeleteTaskDelegate.h"
#import "CoreDAVGetAccountPropertiesTaskGroupDelegate.h"
#import "CoreDAVContainerInfoTaskGroupDelegate.h"
#import "BookmarkDAV-Structs.h"

@class BookmarkDAVSyncData, NSDictionary, NSMutableSet, NSURL, NSString;
@protocol CoreDAVAccountInfoProvider, CoreDAVTaskManager;

@interface BookmarkDAVSyncDriver : XXUnknownSuperclass <CoreDAVLocalDBTreeInfoProvider, CoreDAVDeleteTaskDelegate, CoreDAVGetAccountPropertiesTaskGroupDelegate, CoreDAVContainerInfoTaskGroupDelegate> {
	id<CoreDAVAccountInfoProvider> _accountInfoProvider;
	id<CoreDAVTaskManager> _taskManager;
	NSMutableSet* _outstandingTaskGroups;
	id _getAccountPropertiesHandler;
	id _syncHandler;
	void* _changeToken;
	NSURL* _homeURL;
	NSString* _pushKey;
	NSDictionary* _pushTransport;
	id _openDBBlock;
	id _getDBBlock;
	id _saveDBBlock;
	id _closeDBBlock;
	BookmarkDAVSyncData* _topLevelSyncData;
	id _registerForPush;
	BOOL _forceSafariOrdering;
	BOOL _forceSave;
}
@property(readonly, assign) BookmarkDAVSyncData* topLevelSyncData;
@property(copy) id syncHandler;	// @synthesize=_syncHandler
@property(copy) id getAccountPropertiesHandler;	// @synthesize=_getAccountPropertiesHandler
@property(retain) NSURL* homeURL;	// @synthesize=_homeURL
@property(retain) NSDictionary* pushTransport;	// @synthesize=_pushTransport
@property(retain) NSString* pushKey;	// @synthesize=_pushKey
@property(readonly, assign) unsigned outstandingActionCount;
@property(readonly, assign) id<CoreDAVAccountInfoProvider> accountInfoProvider;	// @synthesize=_accountInfoProvider
// declared property setter: -(void)setSyncHandler:(id)handler;
// declared property getter: -(id)syncHandler;
// declared property setter: -(void)setGetAccountPropertiesHandler:(id)handler;
// declared property getter: -(id)getAccountPropertiesHandler;
// declared property getter: -(id)accountInfoProvider;
// declared property setter: -(void)setPushTransport:(id)transport;
// declared property getter: -(id)pushTransport;
// declared property setter: -(void)setPushKey:(id)key;
// declared property getter: -(id)pushKey;
// declared property setter: -(void)setHomeURL:(id)url;
// declared property getter: -(id)homeURL;
// declared property getter: -(unsigned)outstandingActionCount;
-(void)notePutToURL:(id)url withDataPayload:(id)dataPayload finishedWithIgnoredError:(id)ignoredError;
-(void)recursiveContainerSyncTask:(id)task completedFullSyncWithNewCTag:(id)newCTag newPTag:(id)tag newSyncToken:(id)token error:(id)error;
-(void)recursiveContainerSyncTask:(id)task completedSyncOfFolderWithURL:(id)url newCTag:(id)tag newPTag:(id)tag4 addedOrModified:(id)modified removed:(id)removed error:(id)error;
-(void)recursiveContainerSyncTask:(id)task retrievedAddedOrModifiedActions:(id)actions removed:(id)removed;
-(void)_handleAddsOrModifies:(id)modifies removes:(id)removes;
-(void)recursiveContainerSyncTask:(id)task receivedAddedOrModifiedFolder:(id)folder;
-(void)_makeFolderFromContainer:(id)container;
-(void)_makeBookmarkFromDAVNode:(id)davnode;
-(BOOL)setLocalETag:(id)tag forItemWithURL:(id)url;
-(id)copyAllLocalURLsInFolderWithURL:(id)url;
-(id)copyLocalETagsForURLs:(id)urls;
-(BOOL)getCTag:(id*)tag pTag:(id*)tag2 forFolderWithURL:(id)url;
-(void)syncWithRemoteChanges:(BOOL)remoteChanges completionHandler:(id)handler;
-(void)_syncWithRemoteChanges:(BOOL)remoteChanges completionHandler:(id)handler skipAddChanges:(BOOL)changes;
-(void)_setChildrenOrder:(id)order forFolderURL:(id)folderURL;
-(int)_clientOrderOfItemPrecedingItemAtServerOrder:(int)serverOrder inParentWithURL:(id)url;
-(id)_dbRelativeString:(id)string;
-(int)_serverOrderForChange:(void*)change;
-(void)_setServerIdOnItem:(void*)item isBookmark:(BOOL)bookmark suggestedId:(id)anId;
-(id)_copyDAVFolderFromFolderRef:(void*)folderRef;
-(id)_copyDAVBookmarkFromBookmarkRef:(void*)bookmarkRef;
-(void)getAccountPropertiesWithCompletionHandler:(id)completionHandler;
-(void)containerInfoTask:(id)task completedWithContainers:(id)containers error:(id)error;
-(void)getAccountPropertiesTask:(id)task completedWithError:(id)error;
-(void)_closeDBAndSave:(BOOL)save;
-(void)_saveDB;
// declared property getter: -(id)topLevelSyncData;
-(void)_invokeAndNilGetAccountPropertiesHandlerWithSuccess:(BOOL)success error:(id)error;
-(void)dealloc;
-(id)initWithAccountInfoProvider:(id)accountInfoProvider taskManager:(id)manager openDBBlock:(id)block getDBBlock:(id)block4 saveDBBlock:(id)block5 closeDBBlock:(id)block6 registerForPush:(id)push forceSafariOrdering:(BOOL)ordering;
-(void)_finishInitialSyncShouldPushChanges:(BOOL)_finishInitialSync;
-(BOOL)_applyReturnedBookmarks:(id)bookmarks withPushedBookmarks:(CFArrayRef)pushedBookmarks;
-(BOOL)_applyReturnedFolders:(id)folders parentToArrayOfChildrenFolders:(CFDictionaryRef)childrenFolders topmostFolders:(CFArrayRef)folders3 postedToURL:(id)url;
-(BOOL)_matchParsedFolders:(id)folders toPushedFolders:(CFDictionaryRef)pushedFolders unmatchedParsedFolders:(id)folders3 parsedSetsOfChildrenFoldersByParentURL:(id)childrenFoldersByParentURL arraysOfChildrenByNameByParent:(CFDictionaryRef)childrenByNameByParent;
-(void)_setRootCTag:(id)tag rootSyncToken:(id)token knownOrderings:(id)orderings;
-(BOOL)_applyUnmatchedParsedFolders:(id)folders;
-(void)_removeTempIdsFromFoldersInDict:(CFDictionaryRef)dict;
-(id)_bookmarkXBELDataForBookmarkChanges:(CFArrayRef)bookmarkChanges pushedBookmarks:(CFArrayRef)bookmarks maxResources:(int)resources maxSize:(int)size;
-(id)_folderXBELDataForTopmostFolderChanges:(CFArrayRef)topmostFolderChanges foldersToAddByServerId:(CFDictionaryRef)addByServerId parentToArrayOfChildrenFolderChanges:(CFDictionaryRef)childrenFolderChanges pushedParentToArrayOfChildrenFolders:(CFDictionaryRef)childrenFolders pushedTopmostFolders:(CFArrayRef)folders maxResources:(int)resources maxSize:(int)size;
-(BOOL)_addChange:(void*)change toData:(id)data numActionsP:(int*)p runningSizeP:(int*)p4 maxResources:(int)resources maxSize:(int)size foldersToAddByServerId:(CFDictionaryRef)addByServerId parentToArrayOfChildrenFolderChanges:(CFDictionaryRef)childrenFolderChanges pushedParentToArrayOfChildrenFolders:(CFDictionaryRef)childrenFolders;
-(BOOL)_handleErrorItem:(id)item forBAItem:(void*)baitem;
@end

