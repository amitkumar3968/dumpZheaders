/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AITTarget.framework/AITTarget
 */

#import "AITTarget-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "AITXPCConnectionDelegate.h"

@class NSMutableArray, NSString, AITXPCConnection, NSMutableDictionary;

@interface AITTarget : XXUnknownSuperclass <AITXPCConnectionDelegate> {
@private
	int _notifyToken;
	NSMutableDictionary* _observerRecords;
	AITXPCConnection* _xpcConnection;
	dispatch_queue_s* _clientQueue;
	double _startTime;
	NSMutableArray* _queuedProbes;
	dispatch_queue_s* _rpcDispatchQueue;
	NSString* _rpcSelectorPrefix;
	id _rpcTarget;
	dispatch_source_s* _watchdogSource;
}
@property(assign, nonatomic) dispatch_queue_s* rpcDispatchQueue;
@property(copy, nonatomic) NSString* rpcSelectorPrefix;
@property(retain, nonatomic) id rpcTarget;
+(id)allocWithZone:(NSZone*)zone;
+(id)sharedTarget;
-(id)autorelease;
-(oneway void)release;
-(unsigned)retainCount;
-(id)retain;
-(id)copyWithZone:(NSZone*)zone;
-(void)xpcConnectionFailed:(id)failed;
-(void)xpcConnectionUnhandledMessage:(void*)message;
-(void)xpcConnection:(id)connection receivedMessage:(id)message userInfo:(id)info;
-(void)_sendAckForToken:(id)token success:(BOOL)success returnValue:(id)value details:(id)details;
-(void)_flushQueuedProbes;
-(void)_probeBarrier:(id)barrier;
-(void)_fireProbe:(id)probe withArgumentDictionary:(id)argumentDictionary;
-(BOOL)_probeIsEnabled:(id)enabled;
// declared property getter: -(dispatch_queue_s*)rpcDispatchQueue;
// declared property setter: -(void)setRpcDispatchQueue:(dispatch_queue_s*)queue;
// declared property getter: -(id)rpcSelectorPrefix;
// declared property setter: -(void)setRpcSelectorPrefix:(id)prefix;
// declared property getter: -(id)rpcTarget;
-(id)_rpcTarget;
// declared property setter: -(void)setRpcTarget:(id)target;
-(void)removeObserver:(id)observer forMessage:(id)message;
-(void)addObserver:(id)observer forMessage:(id)message dispatchQueue:(dispatch_queue_s*)queue block:(id)block;
-(void)_setupXPCConnectionIfNeeded;
-(BOOL)_appIsWhitelisted;
-(id)init;
@end

