/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

#import "PLBBPendingBulletinsBatchDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, NSMutableIndexSet, NSMutableDictionary, NSObject, NSArray, PLXPCTransaction;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface PLBBBulletinsManager : XXUnknownSuperclass <PLBBPendingBulletinsBatchDelegate> {
@private
	NSObject<OS_dispatch_queue>* _isolationQueue;
	NSObject<OS_dispatch_source>* _saveTimerSource;
	PLXPCTransaction* _saveTimerTransaction;
	NSObject<OS_dispatch_source>* _pendingChangesTimerSource;
	PLXPCTransaction* _pendingChangesTimerTransaction;
	NSMutableDictionary* _dirtyPlist;
	NSMutableArray* _pendingBulletins;
	NSMutableArray* _pendingBatches;
	NSMutableIndexSet* _pendingDeleteRecordIDs;
	BOOL _badgeCountIsInvalid;
	BOOL _enableTemporaryDebugMode;
	void* _addressBook;
	int _alertFiltrationEnabled;
}
@property(readonly, assign) NSArray* currentBulletinDictionaries;
@property(assign) BOOL enableTemporaryDebugMode;	// converted property
@property(readonly, assign) void* addressBook;	// converted property
+(id)sharedManager;
-(void)_resetAlertFiltration;
-(BOOL)_alertFiltrationEnabled;
-(BOOL)_shouldAllowAlertsFromContactWithEmail:(id)email;
// converted property getter: -(void*)addressBook;
-(void)_saveDirtyChanges;
-(void)_setNeedsSaving;
-(id)_currentPlistContents;
-(id)_editablePlistContents;
-(id)_plistFilePath;
-(void)discardAllBulletins;
-(void)forceWriteUnsavedChanges;
-(void)getThumbnailImageDataForBulletinWithRecordID:(unsigned)recordID completionHandler:(id)handler;
-(void)calculateCurrentBadgeCountWithCompletionHandler:(id)completionHandler;
-(id)bulletinsBatch:(id)batch bulletinByMergingPersistedListWithBulletin:(id)bulletin;
-(BOOL)bulletinsBatch:(id)batch shouldAllowAlertsFromContactWithEmail:(id)email;
-(void)bulletinsBatch:(id)batch didProcessReadyBulletins:(id)bulletins stillPending:(BOOL)pending;
-(id)_currentPendingBatch;
-(unsigned)_generateUniqueRecordID;
-(void)_processPendingChanges;
-(void)_scheduleProcessPendingChanges;
-(void)_deleteBulletinsForAssetWithUUID:(id)uuid shouldDeleteCommentsOrLikeBulletins:(BOOL)bulletins shouldDeletePhotosAddedToAlbumBulletins:(BOOL)albumBulletins;
-(BOOL)_bulletinType:(int)type matchesCommentsOrLikeBulletins:(BOOL)bulletins andPhotosAddedToAlbumBulletins:(BOOL)albumBulletins;
-(void)_deleteBulletinsForAlbumWithUUID:(id)uuid bulletinTypes:(id)types;
-(void)_addPendingBulletins:(id)bulletins;
-(void)clearAllBulletinsUpToRecordID:(unsigned)recordID;
-(void)noteUserDidLeavePhotosApplication;
-(void)noteUserDidDeleteSharedAssetsWithUUIDs:(id)noteUser;
-(void)noteUserDidDeleteSharedAlbumWithUUID:(id)noteUser;
-(void)noteUserDidReadCommentOnSharedAsset:(id)noteUser;
-(void)noteUserDidNavigateAwayFromSharedAlbum:(id)noteUser;
-(void)noteUserDidNavigateIntoSharedAlbum:(id)noteUser;
-(void)noteSharedAssetCommentsUnreadStatusDidChange:(id)noteSharedAssetCommentsUnreadStatus;
-(void)noteSharedAlbumUnseenStatusDidChange:(id)noteSharedAlbumUnseenStatus;
-(void)noteDidReceiveLike:(id)note mstreamdInfo:(id)info;
-(void)noteDidReceiveComment:(id)note mstreamdInfo:(id)info;
-(void)noteDidChangePlaceholderKindForAsset:(id)note fromOldKind:(int)oldKind forSharedAlbum:(id)sharedAlbum mstreamdInfo:(id)info;
-(void)noteDidReceiveAsset:(id)note atIndex:(unsigned)index forSharedAlbum:(id)sharedAlbum mstreamdInfo:(id)info misc:(id)misc;
-(void)noteInvitationRecordStatusChanged:(id)changed fromOldState:(int)oldState mstreamdInfo:(id)info;
-(void)noteDidDeleteSharedAssetsWithUUIDs:(id)note;
-(void)noteDidDeleteSharedAlbum:(id)note;
-(void)noteDidReceiveInvitationForSharedAlbum:(id)note;
// declared property getter: -(id)currentBulletinDictionaries;
// converted property setter: -(void)setEnableTemporaryDebugMode:(BOOL)mode;
// converted property getter: -(BOOL)enableTemporaryDebugMode;
-(void)dealloc;
-(id)_initSharedInstance;
-(id)init;
@end

