/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

#import "PhotoLibraryServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSDictionary, PLPhotoLibrary, PLImageTable, NSArray, NSIndexSet, NSManagedObjectContext, NSLock, NSMutableOrderedSet;

@interface PLThumbnailManager : XXUnknownSuperclass {
	PLPhotoLibrary* _photoLibrary;
	NSLock* _lock;
	float _indexSheetBorderWidth;
	NSIndexSet* _occupiedIndexes;
	NSDictionary* _changedPhotosMap;
	NSArray* _changedPhotos;
	NSManagedObjectContext* _preheatMOC;
@private
	PLImageTable* _indexSheetThumbs;
	PLImageTable* _wildcatScrubberThumbs;
	PLImageTable* _wildcatIndexThumbs;
	PLImageTable* _wildcatStackThumbs;
	NSArray* _thumbTables;
	NSMutableOrderedSet* _assetUUIDsWithThumbnails;
}
@property(readonly, assign, nonatomic) NSArray* thumbTables;
@property(readonly, assign, nonatomic) PLImageTable* wildcatStackThumbs;
@property(readonly, assign, nonatomic) PLImageTable* wildcatIndexThumbs;
@property(readonly, assign, nonatomic) PLImageTable* wildcatScrubberThumbs;
@property(readonly, assign, nonatomic) PLImageTable* indexSheetThumbs;
@property(assign, nonatomic) PLPhotoLibrary* photoLibrary;	// @synthesize=_photoLibrary
+(void)resetImageTables;
+(BOOL)missingThumbnailTables;
+(BOOL)thumbnailTablesNeedToBeRecreated;
+(int)thumbnailFormat;
+(int)thumbnailVersion;
+(void)removeObsoleteMetadata;
+(id)defaultThumbnailsDirectory;
+(void)saveCameraPreviewWellImage:(CGImageRef)image assetID:(id)anId;
+(void)saveCameraPreviewWellImageForAsset:(id)asset;
+(id)cameraPreviewWellAssetID;
+(id)cameraPreviewWellImage;
+(id)cameraPreviewWellImageFileURL;
+(id)cameraPreviewWellImageQueue;
// declared property setter: -(void)setPhotoLibrary:(id)library;
// declared property getter: -(id)photoLibrary;
-(id)_tableDescriptions;
-(void)thumbnailTablesChangedExternally;
-(id)photoUUIDToIndexMap;
-(id)compactImageTables;
-(id)preflightImageTableCompactionForPhotos:(id)photos;
-(int)count;
-(BOOL)entryAtIndexIsPlaceholder:(int)indexIsPlaceholder;
-(void)ensureIndexExists:(int)exists;
-(void)deleteThumbnailsForPhoto:(id)photo;
-(void)deleteThumbnailsAtIndex:(int)index withUUID:(id)uuid;
-(void)updateThumbnailsForPhoto:(id)photo previewImage:(id)image thumbnailImage:(id)image3 generatePreviewImage:(BOOL)image4 assignNewIndex:(BOOL)index;
-(void)updateThumbnailsForPhoto:(id)photo previewImage:(id)image thumbnailImage:(id)image3 generatePreviewImage:(BOOL)image4;
-(BOOL)copyThumbnailsFromAsset:(id)asset toAsset:(id)asset2;
-(CFDictionaryRef)placeholderThumbnailDataByFormatID;
-(void)setThumbnails:(CFDictionaryRef)thumbnails forPhoto:(id)photo;
-(id)newUnbakedIndexImageForAsset:(id)asset;
-(id)newImageForPhoto:(id)photo withFormat:(int)format outImageProperties:(const CFDictionaryRef*)properties;
-(CFDictionaryRef)newAssetUUIDToThumbnailIndexMappingForFormat:(int)format;
-(void)preheatImageDataForAssets:(id)assets format:(int)format;
-(id)dataForPhoto:(id)photo format:(int)format width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width6 dataHeight:(int*)height7 imageDataOffset:(int*)offset;
// declared property getter: -(id)thumbTables;
// declared property getter: -(id)wildcatStackThumbs;
// declared property getter: -(id)wildcatIndexThumbs;
// declared property getter: -(id)wildcatScrubberThumbs;
// declared property getter: -(id)indexSheetThumbs;
-(void)clearCachedInformation;
-(void)dealloc;
-(id)initWithWeakPhotoLibrary:(id)weakPhotoLibrary;
-(id)_imageTableForFormat:(int*)format;
-(id)_dataForInFlightAsset:(id)flightAsset format:(int)format width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width6 dataHeight:(int*)height7 imageDataOffset:(int*)offset imageDataFormat:(int*)format9;
-(id)_dataForAsset:(id)asset format:(int)format width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width6 dataHeight:(int*)height7 imageDataOffset:(int*)offset imageDataFormat:(int*)format9;
-(id)_bakedIndexSheetDataForWallpaperAsset:(id)wallpaperAsset width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width5 dataHeight:(int*)height6 imageDataOffset:(int*)offset;
-(id)_bakedThumbnailForPhoto:(id)photo format:(int)format width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width6 dataHeight:(int*)height7 imageDataOffset:(int*)offset;
@end

