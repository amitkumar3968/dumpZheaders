/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

#import "PhotoLibraryServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, NSMutableIndexSet, NSDictionary, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface PLImageTable : XXUnknownSuperclass {
	int _format;
	NSString* _path;
	CGSize _thumbnailSize;
	int _imageRowBytes;
	int _imageLength;
	int _entryLength;
	BOOL _readOnly;
	BOOL _dying;
	int _fid;
	long long _fileLength;
	int _entryCount;
	unsigned long _segmentLength;
	int _segmentCount;
	NSMutableArray* _allSegments;
	NSMutableIndexSet* _preheatIndexes;
	NSObject<OS_dispatch_queue>* _preheatIndexIsolation;
	NSObject<OS_dispatch_queue>* _preheatQueue;
}
@property(readonly, assign, nonatomic) BOOL isReadOnly;
@property(readonly, assign, nonatomic) int imageLength;	// @synthesize=_imageLength
@property(readonly, assign, nonatomic) int imageRowBytes;	// @synthesize=_imageRowBytes
@property(readonly, assign, nonatomic) int imageHeight;
@property(readonly, assign, nonatomic) int imageWidth;
@property(readonly, assign, nonatomic) int imageFormat;	// @synthesize=_format
@property(readonly, assign, nonatomic) NSString* path;	// @synthesize=_path
@property(readonly, assign, nonatomic) NSDictionary* photoUUIDToIndexMap;
@property(readonly, assign) int entryCount;	// converted property
+(CGRect)scaleSize:(CGSize)size toFitWithinSize:(CGSize)fitWithinSize;
+(void)releaseSegmentCache;
// declared property getter: -(int)imageLength;
// declared property getter: -(int)imageRowBytes;
// declared property getter: -(int)imageFormat;
// declared property getter: -(id)path;
-(id)_tableDescription;
-(void)rotateEntryAtIndex:(int)index byDegrees:(int)degrees withWhiteInsert:(int)whiteInsert;
-(BOOL)entryAtIndexIsPlaceholder:(int)indexIsPlaceholder;
-(void)setImage:(id)image forEntryAtIndex:(int)index videoDuration:(id)duration photoUUID:(id)uuid isPlaceholder:(BOOL)placeholder;
-(void)setImageData:(const void*)data forEntryAtIndex:(int)index asset:(id)asset;
-(void)_writeImage:(id)image withDuration:(id)duration photoUUID:(id)uuid toEntryAtIndex:(int)index isPlaceholder:(BOOL)placeholder;
-(id)dataForEntryAtIndex:(int)index;
-(CGSize)imageSize;
-(void)_verifyThumbnailDataForIndex:(unsigned)index uuid:(id)uuid;
-(void)compactWithOccupiedIndexes:(id)occupiedIndexes;
-(id)preflightCompactionWithOccupiedIndexes:(id)occupiedIndexes;
-(BOOL)_compactWithOccupiedIndexes:(id)occupiedIndexes outPhotoUUIDToIndexMap:(id*)indexMap;
// declared property getter: -(id)photoUUIDToIndexMap;
-(void)deleteEntryAtIndex:(int)index withUUID:(id)uuid;
-(void)_setEntryAtIndex:(int)index imageData:(const void*)data actualImageSize:(CGSize)size;
-(void)_flushEntryAtAddress:(void*)address;
-(void)_flushEntryAtAddress:(void*)address count:(int)count;
-(void)ensureIndexExists:(int)exists;
-(void)_addEntriesIfNecessaryForIndex:(int)index;
-(void)_setEntryCount:(int)count;
// converted property getter: -(int)entryCount;
-(id)_mappedImageDataAtIndex:(int)index;
-(void)fileLengthChangedExternally;
-(void)_updateSegmentCount;
-(void)_reloadSegmentAtIndex:(int)index;
-(void)_releaseSegment:(id)segment;
-(void)_releaseSegmentAtIndex:(int)index;
-(id)_segmentAtIndex:(int)index;
// declared property getter: -(BOOL)isReadOnly;
-(unsigned long)_segmentLength;
-(int)_fileDescriptor;
-(void)dealloc;
// declared property getter: -(int)imageHeight;
// declared property getter: -(int)imageWidth;
-(id)initWithPath:(id)path imageFormat:(int)format;
-(id)initWithPath:(id)path imageFormat:(int)format readOnly:(BOOL)only;
-(void)preheatImageDataAtIndexex:(id)indexex;
-(id)_getAndClearPreheatIndexes;
-(void)_addPreheatIndexes:(id)indexes;
-(id)imageDataAtIndex:(int)index width:(int*)width height:(int*)height bytesPerRow:(int*)row dataWidth:(int*)width5 dataHeight:(int*)height6 dataOffset:(int*)offset;
-(BOOL)thumbnailForAsset:(id)asset existsAtIndex:(int)index;
-(CFDictionaryRef)newCurrentAssetUUIDsToIndexesMapping;
@end

