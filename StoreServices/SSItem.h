/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "SSURLConnectionRequestDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class SSItemOffer, SSURLConnectionRequest, NSMutableArray, NSNumber, NSString, NSURL, NSDate, NSDictionary, SSItemImageCollection, NSArray;

@interface SSItem : XXUnknownSuperclass <SSURLConnectionRequestDelegate> {
@private
	NSDate* _expirationDate;
	NSArray* _offers;
	NSDictionary* _properties;
	NSString* _tellAFriendBody;
	NSString* _tellAFriendBodyMIMEType;
	NSMutableArray* _tellAFriendHandlers;
	SSURLConnectionRequest* _tellAFriendRequest;
	NSString* _tellAFriendSubject;
}
@property(readonly, assign, nonatomic) NSArray* thumbnailImages;
@property(readonly, assign, nonatomic) SSItemImageCollection* imageCollection;
@property(readonly, assign, nonatomic) int numberOfUserRatings;
@property(readonly, assign, nonatomic) float averageUserRating;
@property(readonly, assign, nonatomic) NSURL* viewItemURL;
@property(readonly, assign, nonatomic, getter=isGameCenterEnabled) BOOL gameCenterEnabled;
@property(readonly, assign, nonatomic, getter=isRestricted) BOOL restricted;
@property(readonly, assign, nonatomic) NSString* itemKind;
@property(readonly, assign, nonatomic) NSString* itemTitle;
@property(readonly, assign, nonatomic) NSDate* expirationDate;	// @synthesize=_expirationDate
@property(readonly, assign, nonatomic) NSString* artistName;
@property(readonly, assign, nonatomic) SSItemOffer* defaultItemOffer;
@property(readonly, assign, nonatomic) NSArray* allItemOffers;
@property(readonly, assign, nonatomic) NSNumber* ITunesStoreIdentifier;
@property(readonly, retain) NSString* tellAFriendBody;	// converted property
@property(readonly, retain) NSString* tellAFriendBodyMIMEType;	// converted property
@property(readonly, retain) NSString* tellAFriendSubject;	// converted property
// declared property getter: -(id)expirationDate;
-(id)_tellAFriendDictionary;
-(id)_offers;
-(void)_finishTellAFriendLoadWithError:(id)error;
-(void)urlConnectionRequest:(id)request didReceiveResponse:(id)response;
-(void)requestDidFinish:(id)request;
-(void)request:(id)request didFailWithError:(id)error;
-(id)viewReviewsURL;
-(id)videoDetails;
-(id)softwareType;
-(id)shortDescription;
-(void)_setExpirationDate:(id)date;
-(id)seriesName;
-(id)sendGiftURL;
-(id)seasonNumber;
-(id)preOrderIdentifier;
-(id)releaseDateString;
-(id)releaseDate;
-(id)rawItemDictionary;
-(id)podcastFeedURL;
-(id)podcastEpisodeGUID;
-(id)numberOfItemsInCollection;
-(id)numberOfCollectionsInCollectionGroup;
-(id)networkName;
-(id)mediaKind;
-(id)longDescription;
-(BOOL)isCompilation;
-(id)indexInCollection;
-(id)genreName;
-(id)genreIdentifier;
-(id)episodeSortIdentifier;
-(id)episodeIdentifier;
-(id)contentRating;
-(id)composerName;
-(id)collectionName;
-(id)collectionIndexInCollectionGroup;
-(id)collectionIdentifier;
-(id)collectionArtistName;
-(id)bundleVersion;
-(id)bundleIdentifier;
-(id)artistIdentifier;
-(id)initWithItemDictionary:(id)itemDictionary;
-(id)description;
-(id)priceDisplay;
-(id)playableMedia;
-(id)buyParameters;
// declared property getter: -(id)viewItemURL;
-(id)valueForProperty:(id)property;
-(id)tweetURL;
-(id)tweetInitialText;
// declared property getter: -(id)thumbnailImages;
// converted property getter: -(id)tellAFriendSubject;
-(id)tellAFriendBodyURL;
// converted property getter: -(id)tellAFriendBodyMIMEType;
// converted property getter: -(id)tellAFriendBody;
-(id)relatedItemsForRelationType:(id)relationType;
// declared property getter: -(int)numberOfUserRatings;
-(int)numberOfPrintedPages;
-(void)loadTellAFriendMessageWithCompletionHandler:(id)completionHandler;
// declared property getter: -(id)ITunesStoreIdentifier;
// declared property getter: -(id)itemTitle;
-(id)itemOfferForIdentifier:(id)identifier;
// declared property getter: -(id)itemKind;
// declared property getter: -(BOOL)isRestricted;
// declared property getter: -(BOOL)isGameCenterEnabled;
// declared property getter: -(id)imageCollection;
// declared property getter: -(id)defaultItemOffer;
// declared property getter: -(float)averageUserRating;
// declared property getter: -(id)artistName;
// declared property getter: -(id)allItemOffers;
-(void)dealloc;
@end

