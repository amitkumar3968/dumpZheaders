/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "StoreServices-Structs.h"
#import "SSXPCCoding.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, NSNumber, NSLock, NSString, NSURL, NSDate, NSDictionary, NSData, SSItemImageCollection, NSArray;

@interface SSDownloadMetadata : XXUnknownSuperclass <SSXPCCoding, NSCoding, NSCopying> {
@private
	NSMutableDictionary* _dictionary;
	int _keyStyle;
	NSLock* _lock;
}
@property(retain) NSArray* sinfs;
@property(retain) NSString* sortTitle;
@property(retain) NSString* sortCollectionName;
@property(retain) NSString* sortArtistName;
@property(assign) BOOL shouldDownloadAutomatically;
@property(readonly, assign, getter=isContentRestricted) BOOL contentRestricted;
@property(copy) id requiredDeviceCapabilities;
@property(retain) NSString* releaseDateString;
@property(assign, getter=isRedownloadDownload) BOOL redownloadDownload;
@property(copy) NSString* redownloadActionParameters;
@property(copy) NSURL* transitMapDataURL;
@property(copy) NSString* preferredAssetFlavor;
@property(retain) NSURL* primaryAssetURL;
@property(assign) unsigned long long preOrderIdentifier;
@property(copy) NSString* pageProgressionDirection;
@property(readonly, assign) NSNumber* numberOfBytesToHash;
@property(readonly, assign) NSArray* MD5HashStrings;
@property(retain) NSString* fileExtension;
@property(retain) NSData* epubRightsData;
@property(retain) NSString* downloadKey;
@property(retain) NSDictionary* dictionary;
@property(retain) NSString* copyright;
@property(retain) NSURL* cancelDownloadURL;
@property(assign, getter=isAutomaticDownload) BOOL automaticDownload;
@property(assign) int keyStyle;
@property(readonly, assign) NSDictionary* primaryAssetDictionary;
@property(retain) NSURL* thumbnailImageURL;
@property(retain) NSString* thumbnailNewsstandBindingType;
@property(retain) NSString* thumbnailNewsstandBindingEdge;
@property(readonly, assign) SSItemImageCollection* thumbnailImageCollection;
@property(retain) NSString* transactionIdentifier;
@property(retain) NSString* title;
@property(retain) NSString* subtitle;
@property(copy) NSString* shortDescription;
@property(retain) NSNumber* releaseYear;
@property(retain) NSDate* releaseDate;
@property(copy) NSString* longDescription;
@property(retain) NSString* kind;
@property(assign) unsigned long long itemIdentifier;
@property(assign) unsigned long long genreIdentifier;
@property(retain) NSString* genre;
@property(retain) NSURL* fullSizeImageURL;
@property(copy) NSString* artistName;
@property(assign) unsigned long long artistIdentifier;
@property(retain) id viewStoreItemURL;	// converted property
@property(retain) id videoDetailsDictionary;	// converted property
@property(retain) id longSeasonDescription;	// converted property
@property(retain) id seriesName;	// converted property
@property(retain) id seasonNumber;	// converted property
@property(assign, getter=isSample) BOOL sample;	// converted property
@property(assign) unsigned long long sagaIdentifier;	// converted property
@property(assign, getter=isRental) BOOL rental;	// converted property
@property(retain) id purchaseDate;	// converted property
@property(retain) id podcastType;	// converted property
@property(retain) id podcastFeedURL;	// converted property
@property(retain) id podcastEpisodeGUID;	// converted property
@property(retain) id numberOfItemsInCollection;	// converted property
@property(retain) id numberOfCollectionsInCollectionGroup;	// converted property
@property(retain) id networkName;	// converted property
@property(retain) id indexInCollection;	// converted property
@property(assign, getter=isExplicitContent) BOOL explicitContent;	// converted property
@property(retain) id episodeSortIdentifier;	// converted property
@property(retain) id episodeIdentifier;	// converted property
@property(retain) id durationInMilliseconds;	// converted property
@property(retain) id documentTargetIdentifier;	// converted property
@property(retain) id contentRating;	// converted property
@property(retain) id composerName;	// converted property
@property(assign) unsigned long long composerIdentifier;	// converted property
@property(assign, getter=isCompilation) BOOL compilation;	// converted property
@property(retain) id collectionName;	// converted property
@property(retain) id collectionIndexInCollectionGroup;	// converted property
@property(assign) unsigned long long collectionIdentifier;	// converted property
@property(retain) id collectionArtistName;	// converted property
@property(retain) id cloudIdentifier;	// converted property
@property(retain) id bundleIdentifier;	// converted property
@property(assign) BOOL artworkIsPrerendered;	// converted property
-(id)_valueForFirstAvailableTopLevelKey:(id)firstAvailableTopLevelKey;
-(id)_urlValueForValue:(id)value;
-(id)_thumbnailArtworkImage;
-(id)_stringValueForValue:(id)value;
-(void)_setValueCopy:(id)copy forMetadataKey:(id)metadataKey;
-(void)_setValue:(id)value forTopLevelKey:(id)topLevelKey;
-(id)_releaseDateValue;
-(id)_newDateFormatter;
-(id)_newImageCollectionWithURLString:(id)urlstring;
-(id)_dateValueForValue:(id)value;
-(id)_assetDictionary;
-(id)valueForMetadataKey:(id)metadataKey;
-(id)valueForFirstAvailableKey:(id)firstAvailableKey;
// declared property getter: -(id)transitMapDataURL;
// declared property getter: -(id)sinfs;
// declared property getter: -(BOOL)shouldDownloadAutomatically;
-(void)setValuesFromDownload:(id)download;
-(void)setValue:(id)value forMetadataKey:(id)metadataKey;
// declared property setter: -(void)setTransitMapDataURL:(id)url;
// declared property setter: -(void)setSinfs:(id)sinfs;
// declared property setter: -(void)setShouldDownloadAutomatically:(BOOL)downloadAutomatically;
// declared property setter: -(void)setRequiredDeviceCapabilities:(id)capabilities;
// declared property setter: -(void)setReleaseDateString:(id)string;
// declared property setter: -(void)setRedownloadDownload:(BOOL)download;
// declared property setter: -(void)setRedownloadActionParameters:(id)parameters;
// declared property setter: -(void)setPrimaryAssetURL:(id)url;
// declared property setter: -(void)setPreOrderIdentifier:(unsigned long long)identifier;
// declared property setter: -(void)setPreferredAssetFlavor:(id)flavor;
// declared property setter: -(void)setPageProgressionDirection:(id)direction;
-(void)setMD5HashStrings:(id)strings numberOfBytesToHash:(id)hash;
// declared property setter: -(void)setKeyStyle:(int)style;
// declared property setter: -(void)setFileExtension:(id)extension;
// declared property setter: -(void)setEpubRightsData:(id)data;
// declared property setter: -(void)setDownloadKey:(id)key;
// declared property setter: -(void)setDictionary:(id)dictionary;
// declared property setter: -(void)setCopyright:(id)copyright;
// declared property setter: -(void)setCancelDownloadURL:(id)url;
// declared property setter: -(void)setAutomaticDownload:(BOOL)download;
// declared property getter: -(id)requiredDeviceCapabilities;
// declared property getter: -(id)releaseDateString;
// declared property getter: -(id)redownloadActionParameters;
// declared property getter: -(id)primaryAssetURL;
// declared property getter: -(unsigned long long)preOrderIdentifier;
// declared property getter: -(id)preferredAssetFlavor;
// declared property getter: -(id)pageProgressionDirection;
// declared property getter: -(id)numberOfBytesToHash;
-(id)newDownloadProperties;
// declared property getter: -(id)MD5HashStrings;
// declared property getter: -(BOOL)isRedownloadDownload;
// declared property getter: -(BOOL)isContentRestricted;
// declared property getter: -(BOOL)isAutomaticDownload;
// declared property getter: -(int)keyStyle;
// declared property getter: -(id)fileExtension;
// declared property getter: -(id)epubRightsData;
// declared property getter: -(id)downloadKey;
// declared property getter: -(id)dictionary;
-(id)copyWritableMetadata;
// declared property getter: -(id)copyright;
// declared property getter: -(id)cancelDownloadURL;
// converted property getter: -(id)viewStoreItemURL;
// converted property getter: -(id)videoDetailsDictionary;
// declared property getter: -(id)transactionIdentifier;
// declared property getter: -(id)title;
// declared property getter: -(id)thumbnailImageURL;
// declared property getter: -(id)thumbnailNewsstandBindingType;
// declared property getter: -(id)thumbnailNewsstandBindingEdge;
// declared property getter: -(id)thumbnailImageCollection;
// declared property getter: -(id)subtitle;
// declared property getter: -(id)sortTitle;
// declared property getter: -(id)sortCollectionName;
// declared property getter: -(id)sortArtistName;
// declared property getter: -(id)shortDescription;
// converted property setter: -(void)setViewStoreItemURL:(id)url;
// converted property setter: -(void)setVideoDetailsDictionary:(id)dictionary;
// declared property setter: -(void)setTransactionIdentifier:(id)identifier;
// declared property setter: -(void)setTitle:(id)title;
// declared property setter: -(void)setThumbnailImageURL:(id)url;
// declared property setter: -(void)setThumbnailNewsstandBindingType:(id)type;
// declared property setter: -(void)setThumbnailNewsstandBindingEdge:(id)edge;
// declared property setter: -(void)setSubtitle:(id)subtitle;
// declared property setter: -(void)setSortTitle:(id)title;
// declared property setter: -(void)setSortCollectionName:(id)name;
// declared property setter: -(void)setSortArtistName:(id)name;
// declared property setter: -(void)setShortDescription:(id)description;
// converted property setter: -(void)setLongSeasonDescription:(id)description;
// converted property setter: -(void)setSeriesName:(id)name;
// converted property setter: -(void)setSeasonNumber:(id)number;
// converted property setter: -(void)setSample:(BOOL)sample;
// converted property setter: -(void)setSagaIdentifier:(unsigned long long)identifier;
// converted property setter: -(void)setRental:(BOOL)rental;
// declared property setter: -(void)setReleaseYear:(id)year;
// declared property setter: -(void)setReleaseDate:(id)date;
// converted property setter: -(void)setPurchaseDate:(id)date;
// converted property setter: -(void)setPodcastType:(id)type;
// converted property setter: -(void)setPodcastFeedURL:(id)url;
// converted property setter: -(void)setPodcastEpisodeGUID:(id)guid;
// converted property setter: -(void)setNumberOfItemsInCollection:(id)collection;
// converted property setter: -(void)setNumberOfCollectionsInCollectionGroup:(id)collectionGroup;
// converted property setter: -(void)setNetworkName:(id)name;
// declared property setter: -(void)setLongDescription:(id)description;
// declared property setter: -(void)setKind:(id)kind;
// declared property setter: -(void)setItemIdentifier:(unsigned long long)identifier;
// converted property setter: -(void)setIndexInCollection:(id)collection;
// declared property setter: -(void)setGenreIdentifier:(unsigned long long)identifier;
// declared property setter: -(void)setGenre:(id)genre;
// declared property setter: -(void)setFullSizeImageURL:(id)url;
// converted property setter: -(void)setExplicitContent:(BOOL)content;
// converted property setter: -(void)setEpisodeSortIdentifier:(id)identifier;
// converted property setter: -(void)setEpisodeIdentifier:(id)identifier;
// converted property setter: -(void)setDurationInMilliseconds:(id)milliseconds;
// converted property setter: -(void)setDocumentTargetIdentifier:(id)identifier;
// converted property setter: -(void)setContentRating:(id)rating;
// converted property setter: -(void)setComposerName:(id)name;
// converted property setter: -(void)setComposerIdentifier:(unsigned long long)identifier;
// converted property setter: -(void)setCompilation:(BOOL)compilation;
// converted property setter: -(void)setCollectionName:(id)name;
// converted property setter: -(void)setCollectionIndexInCollectionGroup:(id)collectionGroup;
// converted property setter: -(void)setCollectionIdentifier:(unsigned long long)identifier;
// converted property setter: -(void)setCollectionArtistName:(id)name;
// converted property setter: -(void)setCloudIdentifier:(id)identifier;
// converted property setter: -(void)setBundleIdentifier:(id)identifier;
// converted property setter: -(void)setArtworkIsPrerendered:(BOOL)prerendered;
// declared property setter: -(void)setArtistName:(id)name;
// declared property setter: -(void)setArtistIdentifier:(unsigned long long)identifier;
// converted property getter: -(id)longSeasonDescription;
// converted property getter: -(id)seriesName;
// converted property getter: -(id)seasonNumber;
// converted property getter: -(unsigned long long)sagaIdentifier;
// declared property getter: -(id)releaseYear;
// declared property getter: -(id)releaseDate;
// converted property getter: -(id)purchaseDate;
// declared property getter: -(id)primaryAssetDictionary;
// converted property getter: -(id)podcastType;
// converted property getter: -(id)podcastFeedURL;
// converted property getter: -(id)podcastEpisodeGUID;
// converted property getter: -(id)numberOfItemsInCollection;
// converted property getter: -(id)numberOfCollectionsInCollectionGroup;
// converted property getter: -(id)networkName;
// declared property getter: -(id)longDescription;
// declared property getter: -(id)kind;
// declared property getter: -(unsigned long long)itemIdentifier;
// converted property getter: -(BOOL)isSample;
// converted property getter: -(BOOL)isRental;
// converted property getter: -(BOOL)isExplicitContent;
// converted property getter: -(BOOL)isCompilation;
// converted property getter: -(id)indexInCollection;
// declared property getter: -(unsigned long long)genreIdentifier;
// declared property getter: -(id)genre;
// declared property getter: -(id)fullSizeImageURL;
// converted property getter: -(id)episodeSortIdentifier;
// converted property getter: -(id)episodeIdentifier;
// converted property getter: -(id)durationInMilliseconds;
// converted property getter: -(id)documentTargetIdentifier;
// converted property getter: -(id)contentRating;
// converted property getter: -(id)composerName;
// converted property getter: -(unsigned long long)composerIdentifier;
// converted property getter: -(id)collectionName;
// converted property getter: -(id)collectionIndexInCollectionGroup;
// converted property getter: -(unsigned long long)collectionIdentifier;
// converted property getter: -(id)collectionArtistName;
// converted property getter: -(id)cloudIdentifier;
// converted property getter: -(id)bundleIdentifier;
// converted property getter: -(BOOL)artworkIsPrerendered;
// declared property getter: -(id)artistName;
// declared property getter: -(unsigned long long)artistIdentifier;
-(id)applicationIdentifier;
-(id)initWithXPCEncoding:(id)xpcencoding;
-(id)copyXPCEncoding;
-(id)copyWithZone:(NSZone*)zone;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)dealloc;
-(id)initWithKind:(id)kind;
-(id)initWithItem:(id)item offer:(id)offer;
-(id)initWithItem:(id)item;
-(id)initWithDictionary:(id)dictionary;
-(id)init;
@end

