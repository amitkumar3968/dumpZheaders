/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "StoreServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSObject, NSString;
@protocol OS_dispatch_queue;

@interface SSSQLiteDatabase : XXUnknownSuperclass {
@private
	sqlite3* _db;
	NSObject<OS_dispatch_queue>* _dispatchQueue;
	NSString* _databasePath;
	BOOL _readOnly;
	BOOL _isInTransaction;
	id _setupBlock;
	CFDictionaryRef _statementCache;
	BOOL _takesTaskCompletionAssertions;
	SBSProcessAssertionRef _taskAssertion;
	int _taskAssertionCount;
}
@property(assign) BOOL takesTaskCompletionAssertions;
@property(copy, nonatomic) id setupBlock;	// @synthesize=_setupBlock
+(void)_stepStatement:(sqlite3_stmt*)statement hasRow:(BOOL*)row didFinish:(BOOL*)finish;
+(void)_setTakesTaskCompletionAssertions:(BOOL)assertions;
+(BOOL)statementHasRowAfterStepping:(sqlite3_stmt*)stepping;
+(BOOL)statementDidFinishAfterStepping:(sqlite3_stmt*)statement;
// declared property setter: -(void)setSetupBlock:(id)block;
// declared property getter: -(id)setupBlock;
-(sqlite3_stmt*)_statementForSQL:(id)sql cache:(BOOL)cache;
-(BOOL)_resetDatabaseWithPath:(id)path;
-(void)_resetCorruptDatabase;
-(int)_resetAndReopenDatabaseWithPath:(id)path;
-(int)_openFlags;
-(int)_openDatabase;
-(void)_endTaskCompletionAssertion;
-(void)_beginTaskCompletionAssertion;
-(void)_accessDatabaseUsingBlock:(id)block;
// declared property getter: -(BOOL)takesTaskCompletionAssertions;
// declared property setter: -(void)setTakesTaskCompletionAssertions:(BOOL)assertions;
-(void)endTaskCompletionAssertion;
-(void)beginTaskCompletionAssertion;
-(BOOL)setUserVersion:(int)version;
-(void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;
-(void)performTransactionWithBlock:(id)block;
-(id)newDispatchSourceWithType:(dispatch_source_type_s*)type;
-(BOOL)executeSQL:(id)sql;
-(void)dispatchBlockSync:(id)sync;
-(void)dispatchBlockAsync:(id)async;
-(void)dispatchAfter:(unsigned long long)after block:(id)block;
-(void)accessDatabaseUsingBlock:(id)block;
-(void)dealloc;
-(id)initWithDatabaseURL:(id)databaseURL readOnly:(BOOL)only;
-(id)initWithDatabaseURL:(id)databaseURL;
@end

