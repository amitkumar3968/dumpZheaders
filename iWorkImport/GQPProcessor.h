/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

#import "iWorkImport-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class GQSDocument, SFUZipInflateInputStream, SFUCryptoKey, GQZArchive;

__attribute__((visibility("hidden")))
@interface GQPProcessor : XXUnknownSuperclass {
@private
	xmlTextReader* mReader;
	xmlParserInputBuffer* mParserInputBuffer;
	GQZArchive* mArchive;
	SFUCryptoKey* mCryptoKey;
	unsigned long long mTotalBytesToConsume;
	SFUZipInflateInputStream* mInputStream;
	stack<std::tr1::shared_ptr<StateSpec>, std::deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec>>> >* mStateStack;
	stack<std::pair<const Action* , int>, std::deque<std::pair<const Action* , int>, std::allocator<std::pair<const Action* , int>>> >* mActionStack;
	GQSDocument* mDocumentState;
	QLPreviewRequestRef mOutputPreviewRequest;
	CFBundleRef mBundle;
	CGSize mThumbnailSize;
	BOOL mWrongFormat;
	unsigned char mIsProgressive;
}
@property(assign, getter=isWrongFormat) BOOL wrongFormat;	// converted property
@property(assign) CGSize thumbnailSize;	// converted property
@property(assign) CFBundleRef bundle;	// converted property
+(xmlTextReader*)createXmlReaderWithPath:(id)path indexFileName:(id)name cryptoKey:(id)key;
+(xmlTextReader*)createXmlReaderWithZipArchive:(id)zipArchive indexFileName:(id)name cryptoKey:(id)key indexEntry:(id*)entry zipInputStream:(id*)stream;
+(void)initialize;
-(id).cxx_construct;
// converted property setter: -(void)setWrongFormat:(BOOL)format;
// converted property getter: -(BOOL)isWrongFormat;
-(void)setProgressiveMode:(unsigned char)mode;
// converted property setter: -(void)setThumbnailSize:(CGSize)size;
// converted property getter: -(CGSize)thumbnailSize;
-(id)cryptoKey;
-(id)documentState;
-(stack<std::pair<const Action* , int>, std::deque<std::pair<const Action* , int>, std::allocator<std::pair<const Action* , int>>> >*)actionStack;
-(stack<std::tr1::shared_ptr<StateSpec>, std::deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec>>> >*)stateStack;
-(BOOL)go;
// converted property setter: -(void)setBundle:(CFBundleRef)bundle;
// converted property getter: -(CFBundleRef)bundle;
-(id)archive;
-(void)pushInitialState;
-(void)dealloc;
-(id)initWithZipArchive:(id)zipArchive indexFileName:(id)name previewRequest:(QLPreviewRequestRef)request cryptoKey:(id)key;
-(id)initWithZipArchive:(id)zipArchive indexFileName:(id)name previewRequest:(QLPreviewRequestRef)request;
-(id)initWithPath:(id)path indexFileName:(id)name previewRequest:(QLPreviewRequestRef)request cryptoKey:(id)key;
@end

