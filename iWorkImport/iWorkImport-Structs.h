/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

typedef struct _NSZone NSZone;

typedef struct Action Action;

typedef struct ActionFinder ActionFinder;

typedef struct StateSpec {
	/*function-pointer*/ void** _field1;
	char* _field2;
	int _field3;
	int _field4;
	Action* _field5;
	/*function-pointer*/ void* _field6;
	/*function-pointer*/ void* _field7;
	/*function-pointer*/ void* _field8;
	ActionFinder* _field9;
} StateSpec;

template<>
struct NSObjectComparator<GQDWrapPoint> {
	SEL _field1;
};

typedef struct _Rb_tree_node_base {
	int _field1;
	Rb_tree_node_base* _field2;
	Rb_tree_node_base* _field3;
	Rb_tree_node_base* _field4;
} Rb_tree_node_base;

template<>
struct _Rb_tree_impl<GQUtility::NSObjectComparator<GQDWrapPoint>, false> {
	NSObjectComparator<GQDWrapPoint> _field1;
	Rb_tree_node_base _field2;
	unsigned _field3;
};

template<>
struct _Rb_tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::_Identity<GQUtility::ObjcSharedPtr<GQDWrapPoint>>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>> > {
	_Rb_tree_impl<GQUtility::NSObjectComparator<GQDWrapPoint>, false> _field1;
};

template<>
struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>> > {
	_Rb_tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::_Identity<GQUtility::ObjcSharedPtr<GQDWrapPoint>>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>> > _field1;
};

template<>
struct ObjcSharedPtr<GQDWrapPoint>;

typedef struct _Vector_impl {
	ObjcSharedPtr<GQDWrapPoint>* _field1;
	ObjcSharedPtr<GQDWrapPoint>* _field2;
	ObjcSharedPtr<GQDWrapPoint>* _field3;
} Vector_impl;

template<>
struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>> > {
	Vector_impl _field1;
};

typedef struct _xmlTextReader xmlTextReader;

typedef struct __CFArray* CFArrayRef;

typedef struct __CFString* CFStringRef;

typedef struct __CFData* CFDataRef;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct __CFURL* CFURLRef;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct CGAffineTransform {
	float _field1;
	float _field2;
	float _field3;
	float _field4;
	float _field5;
	float _field6;
} CGAffineTransform;

typedef struct CGPath* CGPathRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct _xmlDoc xmlDoc;
typedef struct _xmlNs {
	xmlNs* _field1;
	int _field2;
	char* _field3;
	char* _field4;
	void* _field5;
	xmlDoc* _field6;
} xmlNs;

typedef struct _xmlNode xmlNode;
typedef struct _xmlDtd xmlDtd;
typedef struct _xmlDict xmlDict;
struct _xmlDoc {
	void* _field1;
	int _field2;
	char* _field3;
	xmlNode* _field4;
	xmlNode* _field5;
	xmlNode* _field6;
	xmlNode* _field7;
	xmlNode* _field8;
	xmlDoc* _field9;
	int _field10;
	int _field11;
	xmlDtd* _field12;
	xmlDtd* _field13;
	xmlNs* _field14;
	char* _field15;
	char* _field16;
	void* _field17;
	void* _field18;
	char* _field19;
	int _field20;
	xmlDict* _field21;
	void* _field22;
	int _field23;
	int _field24;
};

typedef struct __CFBundle* CFBundleRef;

typedef struct FindLinesContext {
	BOOL _field1;
	CGPoint _field2;
	CGPoint _field3;
	CFArrayRef _field4;
	BOOL _field5;
	int _field6;
} FindLinesContext;

typedef struct GQDSMap* GQDSMapRef;

typedef struct __CFDate* CFDateRef;

typedef struct _Vector_impl {
	float* _field1;
	float* _field2;
	float* _field3;
} Vector_impl;

template<>
struct vector<float, std::allocator<float> > {
	Vector_impl _field1;
};

typedef struct {
	int location;
	int length;
} XXStruct_ny2fMB;

typedef struct _Vector_impl {
	unsigned short* _field1;
	unsigned short* _field2;
	unsigned short* _field3;
} Vector_impl;

template<>
struct vector<unsigned short, std::allocator<unsigned short> > {
	Vector_impl _field1;
};

typedef struct __GSFont* GSFontRef;

typedef struct __QLPreviewRequest* QLPreviewRequestRef;

typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;

typedef struct _xmlBuffer xmlBuffer;

typedef struct _xmlParserInputBuffer {
	void* _field1;
	/*function-pointer*/ void* _field2;
	/*function-pointer*/ void* _field3;
	xmlCharEncodingHandler* _field4;
	xmlBuffer* _field5;
	xmlBuffer* _field6;
	int _field7;
	int _field8;
	unsigned long _field9;
} xmlParserInputBuffer;

template<>
struct shared_ptr<StateSpec>;

template<>
struct _Deque_iterator<std::tr1::shared_ptr<StateSpec>, std::tr1::shared_ptr<StateSpec> &, std::tr1::shared_ptr<StateSpec> *> {
	shared_ptr<StateSpec>* _field1;
	shared_ptr<StateSpec>* _field2;
	shared_ptr<StateSpec>* _field3;
	shared_ptr<StateSpec>** _field4;
};

typedef struct _Deque_impl {
	shared_ptr<StateSpec>** _field1;
	unsigned _field2;
	_Deque_iterator<std::tr1::shared_ptr<StateSpec>, std::tr1::shared_ptr<StateSpec> &, std::tr1::shared_ptr<StateSpec> *> _field3;
	_Deque_iterator<std::tr1::shared_ptr<StateSpec>, std::tr1::shared_ptr<StateSpec> &, std::tr1::shared_ptr<StateSpec> *> _field4;
} Deque_impl;

template<>
struct deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec>> > {
	Deque_impl _field1;
};

template<>
struct stack<std::tr1::shared_ptr<StateSpec>, std::deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec>>> > {
	deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec>> > _field1;
};

template<>
struct pair<const Action *, int>;

template<>
struct _Deque_iterator<std::pair<const Action *, int>, std::pair<const Action *, int> &, std::pair<const Action *, int> *> {
	pair<const Action* , int>* _field1;
	pair<const Action* , int>* _field2;
	pair<const Action* , int>* _field3;
	pair<const Action* , int>** _field4;
};

typedef struct _Deque_impl {
	pair<const Action* , int>** _field1;
	unsigned _field2;
	_Deque_iterator<std::pair<const Action *, int>, std::pair<const Action *, int> &, std::pair<const Action *, int> *> _field3;
	_Deque_iterator<std::pair<const Action *, int>, std::pair<const Action *, int> &, std::pair<const Action *, int> *> _field4;
} Deque_impl;

template<>
struct deque<std::pair<const Action *, int>, std::allocator<std::pair<const Action *, int>> > {
	Deque_impl _field1;
};

template<>
struct stack<std::pair<const Action *, int>, std::deque<std::pair<const Action *, int>, std::allocator<std::pair<const Action *, int>>> > {
	deque<std::pair<const Action *, int>, std::allocator<std::pair<const Action *, int>> > _field1;
};

typedef struct GQZEndOfCentralDirectory {
	unsigned _field1;
	long long _field2;
	long long _field3;
} GQZEndOfCentralDirectory;

typedef struct __sbuf {
	char* _field1;
	int _field2;
} sbuf;

typedef struct __sFILEX sFILEX;

typedef struct __sFILE {
	char* _field1;
	int _field2;
	int _field3;
	short _field4;
	short _field5;
	sbuf _field6;
	int _field7;
	void* _field8;
	/*function-pointer*/ void* _field9;
	/*function-pointer*/ void* _field10;
	/*function-pointer*/ void* _field11;
	/*function-pointer*/ void* _field12;
	sbuf _field13;
	sFILEX* _field14;
	int _field15;
	unsigned char _field16[3];
	unsigned char _field17[1];
	sbuf _field18;
	int _field19;
	long long _field20;
} FILE;

typedef struct _xmlAttr xmlAttr;
struct _xmlNode {
	void* _field1;
	int _field2;
	char* _field3;
	xmlNode* _field4;
	xmlNode* _field5;
	xmlNode* _field6;
	xmlNode* _field7;
	xmlNode* _field8;
	xmlDoc* _field9;
	xmlNs* _field10;
	char* _field11;
	xmlAttr* _field12;
	xmlNs* _field13;
	void* _field14;
	unsigned short _field15;
	unsigned short _field16;
};

struct _xmlDtd xmlDtd;

struct _xmlDict xmlDict;

typedef struct internal_state internal_state;

typedef struct z_stream_s {
	char* next_in;
	unsigned avail_in;
	unsigned total_in;
	char* next_out;
	unsigned avail_out;
	unsigned total_out;
	char* msg;
	internal_state* state;
	/*function-pointer*/ void* zalloc;
	/*function-pointer*/ void* zfree;
	void* opaque;
	int data_type;
	unsigned adler;
	unsigned reserved;
} z_stream_s;

typedef struct GQHPathEndPointInfo {
	BOOL _field1;
	CGPoint _field2;
	CGPoint _field3;
	CGPoint _field4;
	CGPoint _field5;
	int _field6;
} GQHPathEndPointInfo;

struct _xmlAttr xmlAttr;

typedef struct _xmlOutputBuffer {
	void* _field1;
	/*function-pointer*/ void* _field2;
	/*function-pointer*/ void* _field3;
	xmlCharEncodingHandler* _field4;
	xmlBuffer* _field5;
	xmlBuffer* _field6;
	int _field7;
	int _field8;
} xmlOutputBuffer;

typedef struct __CFLocale* CFLocaleRef;

typedef struct __CFNumberFormatter* CFNumberFormatterRef;

typedef struct _CCCryptor* CCCryptorRef;

typedef struct CGDataProvider* CGDataProviderRef;

typedef struct SFUZipEndOfCentralDirectory {
	unsigned _field1;
	long long _field2;
	long long _field3;
} SFUZipEndOfCentralDirectory;

typedef struct {
	/*function-pointer*/ void* _field1;
	/*function-pointer*/ void* _field2;
	/*function-pointer*/ void* _field3;
	/*function-pointer*/ void* _field4;
	/*function-pointer*/ void* _field5;
} XXStruct_1D5yyA;

typedef struct __CFError* CFErrorRef;


