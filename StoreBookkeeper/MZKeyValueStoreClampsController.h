/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSCoding.h"

@class NSMutableDictionary, NSData, NSObject;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MZKeyValueStoreClampsController : XXUnknownSuperclass <NSCoding> {
@private
	NSObject<OS_dispatch_queue>* _queue;
	NSMutableDictionary* _transactionClamps;
	double _dsidCheckTimestamp;
	double _authenticationNeededTimestamp;
	double _userAcceptedSyncTimestamp;
	double _networkingBlockedUntil;
	double _backOffUntil;
	double _userCancelledSignInBackOffUntil;
	NSData* _pendingUserDefaultArchivedData;
	double _nextUserCancelBackOffInterval;
}
@property(retain) NSData* pendingUserDefaultArchivedData;	// @synthesize=_pendingUserDefaultArchivedData
@property(assign) double nextUserCancelBackOffInterval;	// @synthesize=_nextUserCancelBackOffInterval
@property(assign) double userCancelledSignInBackOffUntil;	// @synthesize=_userCancelledSignInBackOffUntil
@property(assign) double backOffUntil;	// @synthesize=_backOffUntil
@property(assign) double networkingBlockedUntil;	// @synthesize=_networkingBlockedUntil
@property(assign) double userAcceptedSyncTimestamp;	// @synthesize=_userAcceptedSyncTimestamp
@property(assign) double authenticationNeededTimestamp;	// @synthesize=_authenticationNeededTimestamp
@property(assign) double dsidCheckTimestamp;	// @synthesize=_dsidCheckTimestamp
@property(retain, nonatomic) NSMutableDictionary* transactionClamps;	// @synthesize=_transactionClamps
+(id)sharedClampsController;
// declared property setter: -(void)setNextUserCancelBackOffInterval:(double)interval;
// declared property getter: -(double)nextUserCancelBackOffInterval;
// declared property setter: -(void)setPendingUserDefaultArchivedData:(id)data;
// declared property getter: -(id)pendingUserDefaultArchivedData;
// declared property setter: -(void)setUserCancelledSignInBackOffUntil:(double)backOffUntil;
// declared property getter: -(double)userCancelledSignInBackOffUntil;
// declared property setter: -(void)setBackOffUntil:(double)until;
// declared property getter: -(double)backOffUntil;
// declared property setter: -(void)setNetworkingBlockedUntil:(double)until;
// declared property getter: -(double)networkingBlockedUntil;
// declared property setter: -(void)setUserAcceptedSyncTimestamp:(double)timestamp;
// declared property getter: -(double)userAcceptedSyncTimestamp;
// declared property setter: -(void)setAuthenticationNeededTimestamp:(double)timestamp;
// declared property getter: -(double)authenticationNeededTimestamp;
// declared property setter: -(void)setDsidCheckTimestamp:(double)timestamp;
// declared property getter: -(double)dsidCheckTimestamp;
// declared property setter: -(void)setTransactionClamps:(id)clamps;
// declared property getter: -(id)transactionClamps;
-(BOOL)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)anIn error:(id*)error;
-(BOOL)_canScheduleTransactionBasedOnBackOff:(id)off error:(id*)error;
-(BOOL)_canScheduleTransactionBasedOnDSIDCheck:(id)check error:(id*)error;
-(BOOL)_canScheduleTransactionBasedOfNetworkingBlocked:(id)networkingBlocked error:(id*)error;
-(BOOL)_canScheduleTransactionBasedOnType:(id)type error:(id*)error;
-(id)_keyForTransaction:(id)transaction;
-(double)_rightNow;
-(BOOL)isNetworkingBlocked;
-(void)clearNetworkingBlocked;
-(void)setNetworkingBlocked;
-(void)clearBackOff;
-(void)backOffForTimeInterval:(double)timeInterval;
-(void)clearUserCancelledSignIn;
-(void)setUserCancelledSignIn;
-(BOOL)hasUserRecentlyAcceptedSync;
-(void)clearUserAcceptedSyncTimestamp;
-(void)setUserAcceptedSyncTimestamp;
-(BOOL)hasAuthenticatedTooRecentlyForTransaction:(id)transaction error:(id*)error;
-(void)clearAuthenticationRequest;
-(void)setAuthenticationRequest;
-(void)clearDSIDCheckTimestamp;
-(void)setDSIDCheckTimestamp;
-(void)clearTimestampForTransaction:(id)transaction;
-(void)setTimestampForTransaction:(id)transaction;
-(void)reset;
-(BOOL)canScheduleTransaction:(id)transaction error:(id*)error;
-(id)description;
-(void)dealloc;
-(void)saveToUserDefaults;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(id)init;
@end

