/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AssistantServices-Structs.h"

@class NSMutableSet, NSMutableDictionary, NSSet, NSString;

@interface DKServer : XXUnknownSuperclass {
@private
	xpc_connection_s* _conn;
	NSMutableSet* _connections;
	NSMutableDictionary* _handlerMap;
	NSString* _entitlement;
	id _allowConnectionHandler;
	id _newConnectionHandler;
	id _defaultMessageHandler;
	id _disconnectHandler;
	id _shutdownHandler;
	dispatch_queue_s* _dispatchQueue;
}
@property(copy, nonatomic) id defaultMessageHandler;	// @synthesize=_defaultMessageHandler
@property(copy, nonatomic) id shutdownHandler;	// @synthesize=_shutdownHandler
@property(copy, nonatomic) id disconnectHandler;	// @synthesize=_disconnectHandler
@property(copy, nonatomic) id newConnectionHandler;	// @synthesize=_newConnectionHandler
@property(copy, nonatomic) id allowConnectionHandler;	// @synthesize=_allowConnectionHandler
@property(readonly, assign, nonatomic) NSSet* connections;	// @synthesize=_connections
// declared property setter: -(void)setShutdownHandler:(id)handler;
// declared property getter: -(id)shutdownHandler;
// declared property setter: -(void)setDisconnectHandler:(id)handler;
// declared property getter: -(id)disconnectHandler;
// declared property setter: -(void)setDefaultMessageHandler:(id)handler;
// declared property getter: -(id)defaultMessageHandler;
// declared property setter: -(void)setNewConnectionHandler:(id)handler;
// declared property getter: -(id)newConnectionHandler;
// declared property setter: -(void)setAllowConnectionHandler:(id)handler;
// declared property getter: -(id)allowConnectionHandler;
// declared property getter: -(id)connections;
-(void).cxx_destruct;
-(void)shutdown;
-(void)resume;
-(void)setHandlerForMessageName:(id)messageName handler:(id)handler;
-(void)dealloc;
-(id)initListenerWithServiceName:(id)serviceName;
-(id)initListenerWithServiceName:(id)serviceName andQueue:(dispatch_queue_s*)queue;
-(void)_handleNewConnection:(xpc_connection_s*)connection;
-(BOOL)_connectionIsAllowed:(xpc_connection_s*)allowed;
-(id)_handlerForMessageName:(id)messageName;
-(void)setDispatchQueue:(dispatch_queue_s*)queue;
-(dispatch_queue_s*)_highAvailabilityQueue;
-(id)_connections;
@end

