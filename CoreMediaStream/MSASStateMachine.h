/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "MSASAssetDownloaderDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MSBackoffManagerDelegate.h"
#import "MSASAssetUploaderDelegate.h"

@class MSASProtocol, MSAlbumSharingDaemon, MSImageScalingSpecification, MSASPersonModel, NSMutableArray, NSString, NSObject, MSASAssetUploader, MSASAssetDownloader, NSDictionary, MSBackoffManager;
@protocol OS_dispatch_queue;

@interface MSASStateMachine : XXUnknownSuperclass <MSBackoffManagerDelegate, MSASAssetUploaderDelegate, MSASAssetDownloaderDelegate> {
@private
	int _commandState;
	MSASPersonModel* _model;
	NSString* _currentCommand;
	long long _currentCommandID;
	NSDictionary* _currentCommandParams;
	MSBackoffManager* _metadataBackoffManager;
	MSBackoffManager* _MMCSBackoffManager;
	MSASAssetUploader* _assetUploader;
	MSASAssetDownloader* _assetDownloader;
	MSAlbumSharingDaemon* _daemon;
	NSString* _personID;
	id _delegate;
	int _maxMetadataRetryCount;
	NSDictionary* _serverSideConfiguration;
	NSString* _serverSideConfigurationVersion;
	NSString* _focusAlbumGUID;
	NSString* _focusAssetCollectionGUID;
	BOOL _isRetryingOutstandingActivities;
	NSMutableArray* _assetInfoToReauthForDownload;
	id _stopHandlerBlock;
	MSASProtocol* _protocol;
	MSImageScalingSpecification* _derivativeImageScalingSpecification;
	MSImageScalingSpecification* _thumbnailImageScalingSpecification;
	BOOL _hasShutDown;
	NSDictionary* _metadataBackoffManagerParameters;
	NSDictionary* _MMCSBackoffManagerParameters;
	NSObject<OS_dispatch_queue>* _serverSideConfigQueue;
	NSObject<OS_dispatch_queue>* _eventQueue;
	NSObject<OS_dispatch_queue>* _memberQueue;
	id _postCommandCompletionBlock;
	NSObject<OS_dispatch_queue>* _workQueue;
}
@property(copy, nonatomic) id postCommandCompletionBlock;	// @synthesize=_postCommandCompletionBlock
@property(retain, nonatomic) NSDictionary* MMCSBackoffManagerParameters;	// @synthesize=_MMCSBackoffManagerParameters
@property(retain, nonatomic) NSDictionary* metadataBackoffManagerParameters;	// @synthesize=_metadataBackoffManagerParameters
@property(assign, nonatomic) BOOL hasShutDown;	// @synthesize=_hasShutDown
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* memberQueue;	// @synthesize=_memberQueue
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* serverSideConfigQueue;	// @synthesize=_serverSideConfigQueue
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* eventQueue;	// @synthesize=_eventQueue
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* workQueue;	// @synthesize=_workQueue
@property(copy, nonatomic, setter=_setStopHandlerBlock:) id _stopHandlerBlock;	// @synthesize
@property(retain, nonatomic, setter=_setAssetInfoToReauthForDownload:) NSMutableArray* _assetInfoToReauthForDownload;	// @synthesize
@property(assign, nonatomic) BOOL isRetryingOutstandingActivities;	// @synthesize=_isRetryingOutstandingActivities
@property(retain, nonatomic) NSString* personID;	// @synthesize=_personID
@property(assign, nonatomic) __weak id delegate;	// @synthesize=_delegate
@property(retain, nonatomic) MSImageScalingSpecification* thumbnailImageScalingSpecification;	// @synthesize=_thumbnailImageScalingSpecification
@property(retain, nonatomic) MSImageScalingSpecification* derivativeImageScalingSpecification;	// @synthesize=_derivativeImageScalingSpecification
@property(retain, nonatomic) NSString* focusAssetCollectionGUID;	// @synthesize=_focusAssetCollectionGUID
@property(retain, nonatomic) NSString* focusAlbumGUID;	// @synthesize=_focusAlbumGUID
@property(retain, nonatomic) MSASProtocol* protocol;	// @synthesize=_protocol
@property(readonly, assign, nonatomic) NSString* serverSideConfigurationVersion;	// @synthesize=_serverSideConfigurationVersion
@property(retain, nonatomic) NSDictionary* serverSideConfiguration;	// @synthesize=_serverSideConfiguration
@property(assign, nonatomic) int maxMetadataRetryCount;	// @synthesize=_maxMetadataRetryCount
@property(assign, nonatomic) __weak MSAlbumSharingDaemon* daemon;	// @synthesize=_daemon
// declared property setter: -(void)setWorkQueue:(id)queue;
// declared property getter: -(id)workQueue;
// declared property setter: -(void)setPostCommandCompletionBlock:(id)block;
// declared property getter: -(id)postCommandCompletionBlock;
// declared property setter: -(void)setMemberQueue:(id)queue;
// declared property getter: -(id)memberQueue;
// declared property setter: -(void)setEventQueue:(id)queue;
// declared property getter: -(id)eventQueue;
// declared property setter: -(void)setServerSideConfigQueue:(id)queue;
// declared property getter: -(id)serverSideConfigQueue;
// declared property setter: -(void)setMMCSBackoffManagerParameters:(id)parameters;
// declared property getter: -(id)MMCSBackoffManagerParameters;
// declared property setter: -(void)setMetadataBackoffManagerParameters:(id)parameters;
// declared property getter: -(id)metadataBackoffManagerParameters;
// declared property setter: -(void)setHasShutDown:(BOOL)down;
// declared property getter: -(BOOL)hasShutDown;
// declared property setter: -(void)setThumbnailImageScalingSpecification:(id)specification;
// declared property getter: -(id)thumbnailImageScalingSpecification;
// declared property setter: -(void)setDerivativeImageScalingSpecification:(id)specification;
// declared property getter: -(id)derivativeImageScalingSpecification;
// declared property setter: -(void)setProtocol:(id)protocol;
// declared property setter: -(void)_setStopHandlerBlock:(id)block;
// declared property getter: -(id)_stopHandlerBlock;
// declared property setter: -(void)_setAssetInfoToReauthForDownload:(id)download;
// declared property getter: -(id)_assetInfoToReauthForDownload;
// declared property setter: -(void)setIsRetryingOutstandingActivities:(BOOL)activities;
// declared property getter: -(BOOL)isRetryingOutstandingActivities;
// declared property getter: -(id)focusAssetCollectionGUID;
// declared property getter: -(id)focusAlbumGUID;
// declared property setter: -(void)setMaxMetadataRetryCount:(int)count;
// declared property getter: -(int)maxMetadataRetryCount;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
// declared property setter: -(void)setPersonID:(id)anId;
// declared property getter: -(id)personID;
// declared property getter: -(id)daemon;
-(void).cxx_destruct;
-(void)MSASAssetDownloaderDidFinishBatch:(id)msasassetDownloader;
-(void)_sendReauthorizeAssetsForDownloadDisposition:(int)downloadDisposition params:(id)params;
-(void)workQueueScheduleReauthForAssets:(id)assets inAlbum:(id)album;
-(void)MSASAssetDownloader:(id)downloader didFinishDownloadingAsset:(id)asset inAlbum:(id)album error:(id)error;
-(void)MSASAssetDownloader:(id)downloader willBeginBatchCount:(unsigned)count;
-(void)retrieveAssets:(id)assets inAlbum:(id)album;
-(void)MSASAssetUploader:(id)uploader didFinishUploadingAssetCollection:(id)collection intoAlbum:(id)album error:(id)error;
-(void)_deleteAssetFilesInAssetCollections:(id)assetCollections;
-(void)_deleteAssetFilesInAssetCollection:(id)assetCollection;
-(void)setPublicAccessEnabled:(BOOL)enabled forAlbum:(id)album info:(id)info completionBlock:(id)block;
-(void)_scheduleEventDisposition:(int)disposition params:(id)params;
-(void)scheduleEvent:(id)event assetCollectionGUID:(id)guid albumGUID:(id)guid3 info:(id)info;
-(void)_addCommentDisposition:(int)disposition params:(id)params;
-(void)addComments:(id)comments toAssetCollection:(id)assetCollection inAlbum:(id)album info:(id)info;
-(void)_removeSharingRelationshipsDisposition:(int)disposition params:(id)params;
-(void)removeSharingRelationships:(id)relationships fromOwnedAlbum:(id)ownedAlbum info:(id)info;
-(void)_addSharingRelationshipsDisposition:(int)disposition params:(id)params;
-(void)addSharingRelationships:(id)relationships toOwnedAlbum:(id)ownedAlbum info:(id)info;
-(void)_sendPutAssetCollectionsDisposition:(int)disposition params:(id)params;
-(void)_sendUploadCompleteDisposition:(int)disposition params:(id)params;
-(void)_continueAddingAssetCollectionsDisposition:(int)disposition params:(id)params;
-(void)continueAddingAssetCollections:(id)collections skipAssetCollections:(id)collections2 toAlbum:(id)album info:(id)info;
-(void)_addAssetCollectionsDisposition:(int)disposition params:(id)params;
-(void)addAssetCollections:(id)collections toAlbum:(id)album info:(id)info;
-(id)_createHardlinkedOrCopiedAssetsInAssetCollections:(id)assetCollections;
-(void)_updateAlbumDisposition:(int)disposition params:(id)params;
-(void)updateAlbum:(id)album updateAlbumFlags:(int)flags info:(id)info;
-(void)_createAlbumDisposition:(int)disposition params:(id)params;
-(void)createAlbum:(id)album info:(id)info;
-(void)_deleteCommentDisposition:(int)disposition params:(id)params;
-(void)deleteComments:(id)comments inAssetCollection:(id)assetCollection inAlbum:(id)album info:(id)info;
-(void)_deleteAssetCollectionsDisposition:(int)disposition params:(id)params;
-(void)deleteAssetCollections:(id)collections inAlbum:(id)album info:(id)info;
-(void)_deleteAlbumDisposition:(int)disposition params:(id)params;
-(void)deleteAlbum:(id)album info:(id)info;
-(void)_setAssetCollectionSyncedStateDisposition:(int)disposition params:(id)params;
-(void)setAssetCollectionSyncedState:(id)state forAssetCollection:(id)assetCollection album:(id)album info:(id)info;
-(void)_setAlbumSyncedStateDisposition:(int)disposition params:(id)params;
-(void)setAlbumSyncedState:(id)state forAlbum:(id)album info:(id)info;
-(void)_checkForAlbumSyncedStateDisposition:(int)albumSyncedStateDisposition params:(id)params;
-(void)checkForAlbumSyncedStateChangesInAlbums:(id)albums info:(id)info;
-(void)_checkForCommentChangesDisposition:(int)commentChangesDisposition params:(id)params;
-(void)checkForCommentChangesInAssetCollection:(id)assetCollection inAlbum:(id)album lastCommentID:(id)anId info:(id)info;
-(void)_checkForAssetCollectionUpdatesDisposition:(int)assetCollectionUpdatesDisposition params:(id)params;
-(void)checkForAssetCollectionUpdates:(id)assetCollectionUpdates inAlbum:(id)album info:(id)info;
-(void)acceptInvitationWithToken:(id)token info:(id)info completionBlock:(id)block;
-(void)_unsubscribeFromAlbumDisposition:(int)albumDisposition params:(id)params;
-(void)unsubscribeFromAlbum:(id)album info:(id)info;
-(void)_subscribeToAlbumDisposition:(int)albumDisposition params:(id)params;
-(void)subscribeToAlbum:(id)album info:(id)info;
-(void)_getAccessControlsDisposition:(int)disposition params:(id)params;
-(void)getAccessControlsForAlbums:(id)albums info:(id)info;
-(void)_didFinishCheckingUpdatesInAlbumsDisposition:(int)albumsDisposition params:(id)params;
-(void)_checkForUpdatesInAlbumDisposition:(int)albumDisposition params:(id)params;
-(void)checkForUpdatesInAlbums:(id)albums resetSync:(BOOL)sync info:(id)info;
-(void)_checkForChangesDisposition:(int)changesDisposition params:(id)params;
-(void)checkForChangesResetSync:(BOOL)changesResetSync info:(id)info;
-(void)checkForChangesInfo:(id)changesInfo;
-(id)_assetCollectionRejectedError;
-(id)_stoppedError;
-(id)_canceledError;
-(void)_getAlbumURLDisposition:(int)disposition params:(id)params;
-(id)_URLReauthFailureWithUnderlyingError:(id)underlyingError;
-(BOOL)workQueueEndCommandWithError:(id)error command:(id)command params:(id)params albumGUID:(id)guid assetCollectionGUID:(id)guid5;
-(void)workQueueDidFinishCommandDueToCancellation;
-(void)workQueueDidFinishCommandByLeavingCommandInQueue;
-(void)workQueueDidFailToFinishCommandDueToTemporaryError:(id)workQueue;
-(void)workQueueDidFinishCommandByReplacingCurrentCommandWithCommand:(id)workQueue params:(id)params personID:(id)anId albumGUID:(id)guid assetCollectionGUID:(id)guid5;
-(void)workQueueDidFinishCommand;
-(void)workQueuePerformNextCommand;
-(void)workQueueCheckForNextCommand;
-(void)workQueueRetryOutstandingActivities;
-(void)retryOutstandingActivities;
-(BOOL)hasEnqueuedActivities;
-(BOOL)isInRetryState;
-(void)setPersistentObject:(id)object forKey:(id)key;
-(id)persistentObjectForKey:(id)key;
-(void)MSBackoffManagerDidUpdateNextExpiryDate:(id)msbackoffManager;
-(void)workQueueUpdateNextActivityDate;
-(id)latestNextActivityDate;
-(void)_sendGetServerSideConfigurationDisposition:(int)disposition params:(id)params;
-(void)workQueueRefreshServerSideConfig;
-(void)refreshServerSideConfig;
-(void)serverSideQueueSetServerSideConfiguration:(id)configuration;
// declared property setter: -(void)setServerSideConfiguration:(id)configuration;
-(id)serverSideQueueServerSideConfiguration;
// declared property getter: -(id)serverSideConfigurationVersion;
// declared property getter: -(id)serverSideConfiguration;
-(id)_serverSideConfigDictionaryByApplyingDefaultsToDictionary:(id)dictionary;
-(void)_cancelOutstandingCommandsDisposition:(int)disposition params:(id)params;
-(void)cancelOutstandingCommandsForAssetCollectionWithGUID:(id)guid;
-(void)cancelOutstandingCommandsForAlbumWithGUID:(id)guid;
// declared property setter: -(void)setFocusAssetCollectionGUID:(id)guid;
// declared property setter: -(void)setFocusAlbumGUID:(id)guid;
// declared property setter: -(void)setDaemon:(id)daemon;
-(void)workQueueCancelCompletionBlock:(id)block;
-(void)workQueueCancelAllCommandsFilteredByAlbumGUID:(id)guid assetCollectionGUID:(id)guid2;
-(void)cancelCompletionBlock:(id)block;
-(void)stopAssetDownloadsCompletionBlock:(id)block;
-(void)purgeEverythingCompletionBlock:(id)block;
-(void)shutDownCompletionBlock:(id)block;
-(void)_workQueueEmptyFileTransferQueuesCompletionBlock:(id)block;
-(void)start;
-(void)workQueueApplyServerSideConfiguration;
-(int)assetsInDownloadQueueCount;
-(void)dealloc;
-(id)initWithPersonID:(id)personID eventQueue:(id)queue;
-(id)initWithPersonID:(id)personID;
-(id)init;
-(id)memberQueueMetadataBackoffManager;
-(id)_metadataBackoffManager;
-(id)_assetDownloader;
-(id)_assetUploader;
-(id)_model;
// declared property getter: -(id)protocol;
@end

