/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSURLConnectionDelegate.h"

@class NSObject, MSASPConnectionGate, NSURL, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface MSASProtocol : XXUnknownSuperclass <NSURLConnectionDelegate> {
@private
	MSASPConnectionGate* _gate;
	NSObject<OS_dispatch_queue>* _pendingConnectionsQueue;
	NSObject<OS_dispatch_group>* _pendingConnectionsGroup;
	NSString* _personID;
	NSURL* _baseURL;
	NSString* _serverSideConfigVersion;
	BOOL _isShuttingDown;
	NSObject<OS_dispatch_queue>* _workQueue;
	NSObject<OS_dispatch_queue>* _memberQueue;
}
@property(assign, nonatomic) BOOL isShuttingDown;	// @synthesize=_isShuttingDown
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* memberQueue;	// @synthesize=_memberQueue
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* workQueue;	// @synthesize=_workQueue
@property(retain, nonatomic) NSObject<OS_dispatch_group>* pendingConnectionsGroup;	// @synthesize=_pendingConnectionsGroup
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* pendingConnectionsQueue;	// @synthesize=_pendingConnectionsQueue
@property(retain, nonatomic) MSASPConnectionGate* gate;	// @synthesize=_gate
@property(retain, nonatomic) NSString* serverSideConfigVersion;	// @synthesize=_serverSideConfigVersion
@property(retain, nonatomic) NSURL* baseURL;	// @synthesize=_baseURL
@property(readonly, assign, nonatomic) NSString* personID;	// @synthesize=_personID
// declared property setter: -(void)setMemberQueue:(id)queue;
// declared property getter: -(id)memberQueue;
// declared property setter: -(void)setWorkQueue:(id)queue;
// declared property getter: -(id)workQueue;
// declared property setter: -(void)setIsShuttingDown:(BOOL)down;
// declared property getter: -(BOOL)isShuttingDown;
// declared property setter: -(void)setServerSideConfigVersion:(id)version;
// declared property getter: -(id)serverSideConfigVersion;
// declared property setter: -(void)setBaseURL:(id)url;
// declared property getter: -(id)baseURL;
// declared property getter: -(id)personID;
// declared property setter: -(void)setPendingConnectionsGroup:(id)group;
// declared property getter: -(id)pendingConnectionsGroup;
// declared property setter: -(void)setPendingConnectionsQueue:(id)queue;
// declared property getter: -(id)pendingConnectionsQueue;
// declared property setter: -(void)setGate:(id)gate;
// declared property getter: -(id)gate;
-(void).cxx_destruct;
-(void)getAlbumURLForAlbumWithGUID:(id)guid completionBlock:(id)block;
-(void)getServerSideConfigCompletionBlock:(id)block;
-(void)setAlbumSyncedState:(id)state forAlbum:(id)album albumStateCtag:(id)ctag completionBlock:(id)block;
-(void)setAssetCollectionSyncedState:(id)state forAssetCollection:(id)assetCollection inAlbum:(id)album assetCollectionStateCtag:(id)ctag completionBlock:(id)block;
-(void)getAlbumSyncedStateForAlbum:(id)album assetCollectionStateBlock:(id)block completionBlock:(id)block3;
-(void)getCommentsFromAssetCollection:(id)assetCollection inAlbum:(id)album albumURLString:(id)string fromPosition:(int)position completionBlock:(id)block;
-(void)acceptInvitationWithToken:(id)token completionBlock:(id)block;
-(void)unsubscribeFromAlbum:(id)album completionBlock:(id)block;
-(void)subscribeToAlbum:(id)album completionBlock:(id)block;
-(void)getTokensForAssets:(id)assets inAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(id)_couldNotReauthorizeError;
-(void)getAssetCollections:(id)collections inAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(void)albumSummaryAlbum:(id)album albumURLString:(id)string resetSync:(BOOL)sync resetSyncedBlock:(id)block assetCollectionChangeBlock:(id)block5 completionBlock:(id)block6;
-(void)getSharingInfoForAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(void)getChangesRootCtag:(id)ctag completionBlock:(id)block;
-(void)deleteComment:(id)comment fromAssetCollection:(id)assetCollection inAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(void)deleteAssetCollections:(id)collections inAlbum:(id)album completionBlock:(id)block;
-(void)deleteAlbum:(id)album completionBlock:(id)block;
-(void)setPublicAccessEnabled:(BOOL)enabled forAlbum:(id)album completionBlock:(id)block;
-(void)addComment:(id)comment toAssetCollection:(id)assetCollection inAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(void)removeSharingRelationships:(id)relationships fromAlbum:(id)album completionBlock:(id)block;
-(void)addSharingRelationships:(id)relationships toAlbum:(id)album completionBlock:(id)block;
-(void)sendUploadCompleteSuccessfulAssetCollections:(id)collections failedAssetCollections:(id)collections2 album:(id)album completionBlock:(id)block;
-(BOOL)responseDict:(id)dict containsLimitErrorCode:(id)code outMaxAllowed:(id*)allowed;
-(void)putAssetCollections:(id)collections intoAlbum:(id)album completionBlock:(id)block;
-(void)updateAlbum:(id)album albumURLString:(id)string completionBlock:(id)block;
-(void)createAlbum:(id)album completionBlock:(id)block;
-(id)_getAlbumURL;
-(id)_serverSideConfigURL;
-(id)_setAlbumStateURL;
-(id)_setAssetStateURL;
-(id)_albumStateURL;
-(id)_setCommentPositionURL;
-(id)_getCommentsURLWithBaseURL:(id)baseURL;
-(id)_unsubscribeURL;
-(id)_subscribeURL;
-(id)_getTokensURLWithBaseURL:(id)baseURL;
-(id)_getAssetsURLWithBaseURL:(id)baseURL;
-(id)_albumSummaryURLWithBaseURL:(id)baseURL;
-(id)_sharingInfoURLWithBaseURL:(id)baseURL;
-(id)_getChangesURL;
-(id)_deleteCommentURLWithBaseURL:(id)baseURL;
-(id)_deleteAssetsURLWithBaseURL:(id)baseURL;
-(id)_deleteURLWithBaseURL:(id)baseURL;
-(id)_enablePublicAccessURLWithBaseURL:(id)baseURL;
-(id)_addCommentURLWithBaseURL:(id)baseURL;
-(id)_unshareURL;
-(id)_shareURL;
-(id)_uploadCompleteURLWithBaseURL:(id)baseURL;
-(id)_putAssetsURLWithBaseURL:(id)baseURL;
-(id)_updateAlbumURLWithBaseURL:(id)baseURL;
-(id)_createAlbumURL;
-(id)errorFromStandardProcessingOnResponse:(id)standardProcessingOnResponse responseObject:(id)object checkServerSideConfigVersion:(BOOL)version error:(id)error body:(id)body;
-(id)HTTPErrorWithStatusCode:(int)statusCode;
-(void)sendURLRequest:(id)request method:(id)method bodyObj:(id)obj checkServerSideConfigVersion:(BOOL)version completionBlock:(id)block;
-(void)sendURLRequest:(id)request bodyObj:(id)obj completionBlock:(id)block;
-(id)stopHandlerBlock;
-(void)dealloc;
-(void)stopCompletionBlock:(id)block;
-(void)shutDownCompletionBlock:(id)block;
-(id)stoppingError;
-(id)shutDownError;
-(id)initWithPersonID:(id)personID;
@end

