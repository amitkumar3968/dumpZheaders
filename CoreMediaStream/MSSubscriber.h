/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "MSCupidStateMachine.h"
#import "MSSubscriber.h"
#import "MSSubscribeStreamsProtocolDelegate.h"
#import "MSSubscribeStorageProtocolDelegate.h"
#import "MSReauthorizationProtocolDelegate.h"

@class NSMutableArray, NSMutableDictionary, MSMediaStreamDaemon, MSReauthorizationProtocol, MSObjectQueue, MSSubscribeStreamsProtocol;
@protocol MSSubscribeStorageProtocol, MSSubscriberDelegate;

@protocol MSSubscriber
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(void)stop;
-(void)abort;
-(id)ownSubscribedStream;
-(id)subscribedStreams;
-(void)retrieveAssets:(id)assets;
-(void)checkForOutstandingActivities;
-(void)checkForNewAssetCollections;
-(void)resetSync;
@end

@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate> {
@private
	id<MSSubscriberDelegate> _delegate;
	MSMediaStreamDaemon* _daemon;
	BOOL _checkOneMoreTime;
	int _state;
	MSSubscribeStreamsProtocol* _protocol;
	NSMutableDictionary* _newSubscriptionsByStreamID;
	int _retrievalState;
	id<MSSubscribeStorageProtocol> _storageProtocol;
	MSReauthorizationProtocol* _reauthProtocol;
	MSObjectQueue* _retrievalQueue;
	NSMutableArray* _assetsBeingRetrieved;
	long long _targetRetrievalByteCount;
	int _retrievalBatchSize;
	int _maxErrorCount;
}
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;	// @synthesize=_delegate
@property(assign, nonatomic) int retrievalBatchSize;	// @synthesize=_retrievalBatchSize
@property(assign, nonatomic) long long targetRetrievalByteCount;	// @synthesize=_targetRetrievalByteCount
@property(assign, nonatomic) MSMediaStreamDaemon* daemon;	// @synthesize=_daemon
+(BOOL)isInRetryState;
+(void)stopAllActivities;
+(id)personIDsWithOutstandingActivities;
+(id)nextActivityDateForPersonID:(id)personID;
+(id)nextActivityDate;
+(void)_setMasterNextActivityDate:(id)date forPersonID:(id)personID;
+(void)forgetPersonID:(id)anId;
+(id)_clearInstantiatedSubscribersByPersonID;
+(id)existingSubscriberForPersonID:(id)personID;
+(id)subscriberForPersonID:(id)personID;
// declared property setter: -(void)setRetrievalBatchSize:(int)size;
// declared property getter: -(int)retrievalBatchSize;
// declared property setter: -(void)setTargetRetrievalByteCount:(long long)count;
// declared property getter: -(long long)targetRetrievalByteCount;
// declared property setter: -(void)setDaemon:(id)daemon;
// declared property getter: -(id)daemon;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(void).cxx_destruct;
-(void)reauthorizationProtocol:(id)protocol reauthorizedAssets:(id)assets rejectedAssets:(id)assets3 error:(id)error;
-(void)reauthorizationProtocol:(id)protocol didReceiveAuthenticationError:(id)error;
-(void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)subscribeStorageProtocol;
-(void)subscribeStorageProtocol:(id)protocol didFinishRetrievingAsset:(id)asset error:(id)error;
-(void)_finishedRetrievingAsset:(id)asset;
-(BOOL)_isInRetryState;
-(void)_forget;
-(void)abort;
-(void)_abort;
-(void)stop;
-(void)_stopOutSubscriberState:(int*)state outRetrievalState:(int*)state2;
-(void)_reauthorizeAssets;
-(void)_retrieveNextAssets;
-(void)_retrieveAssets;
-(void)checkForOutstandingActivities;
-(void)retrieveAssets:(id)assets;
-(void)subscribeStreamsProtocol:(id)protocol didFindShareState:(id)state;
-(void)subscribeStreamsProtocol:(id)protocol didFindTemporarilyUnavailableSubscriptionForPersonID:(id)personID;
-(void)subscribeStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;
-(void)_didReceiveAuthenticationError:(id)error;
-(void)subscribeStreamsProtocol:(id)protocol didFinishError:(id)error;
-(void)subscribeStreamsProtocol:(id)protocol didFindDisappearedSubscriptionForPersonID:(id)personID;
-(void)subscribeStreamsProtocol:(id)protocol didFinishReceivingUpdatesForPersonID:(id)personID ctag:(id)ctag;
-(void)subscribeStreamsProtocol:(id)protocol didReceiveAssetCollections:(id)collections forPersonID:(id)personID;
-(void)subscribeStreamsProtocol:(id)protocol willReceiveUpdatesForPersonID:(id)personID wasReset:(BOOL)reset metadata:(id)metadata;
-(void)_didFinishRetrievingSubscriptionUpdate;
-(void)_checkForNewAssetCollections;
-(void)checkForNewAssetCollections;
-(BOOL)_isAllowedToDownload;
-(void)resetSync;
-(void)_setSubscriptionsByStreamID:(id)anId;
-(id)_subscriptionsByStreamID;
-(void)_setHasOutstandingPoll:(BOOL)poll;
-(BOOL)_hasOutstandingPoll;
-(void)_updateMasterManifest;
-(void)_serverSideConfigurationDidChange:(id)_serverSideConfiguration;
-(void)_refreshServerSideConfigurationParameters;
-(void)dealloc;
-(void)deactivate;
-(id)initWithPersonID:(id)personID baseURL:(id)url;
-(id)ownSubscribedStream;
-(id)subscribedStreams;
@end

