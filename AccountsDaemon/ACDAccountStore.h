/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AccountsDaemon.framework/AccountsDaemon
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "ACDAccountStoreProtocol.h"
#import "XPCProxyTarget.h"

@class NSMutableArray, ACDClientAuthorizationManager, ACDDatabase, ACDAccountNotifier, ACDAuthenticationPluginManager, ACDAccessPluginManager, ACDClient;
@protocol ACDAccountStoreDelegate;

@interface ACDAccountStore : XXUnknownSuperclass <ACDAccountStoreProtocol, XPCProxyTarget> {
@private
	ACDClient* _client;
	ACDDatabase* _database;
	id<ACDAccountStoreDelegate> _delegate;
	ACDAuthenticationPluginManager* _authenticationPluginManager;
	ACDAccessPluginManager* _accessPluginManager;
	ACDAccountNotifier* _accountNotifier;
	ACDClientAuthorizationManager* _authorizationManager;
	NSMutableArray* _accountChanges;
	BOOL _notificationsEnabled;
}
@property(assign, nonatomic) BOOL notificationsEnabled;	// @synthesize=_notificationsEnabled
@property(retain, nonatomic) ACDAccessPluginManager* accessPluginManager;	// @synthesize=_accessPluginManager
@property(retain, nonatomic) ACDAuthenticationPluginManager* authenticationPluginManager;	// @synthesize=_authenticationPluginManager
@property(readonly, assign, nonatomic) ACDDatabase* database;	// @synthesize=_database
@property(readonly, assign, nonatomic) ACDClientAuthorizationManager* authorizationManager;	// @synthesize=_authorizationManager
@property(retain, nonatomic) ACDClient* client;	// @synthesize=_client
@property(assign, nonatomic) __weak id<ACDAccountStoreDelegate> delegate;	// @synthesize=_delegate
+(id)_whiteList;
// declared property getter: -(id)database;
// declared property getter: -(id)authorizationManager;
// declared property setter: -(void)setClient:(id)client;
// declared property getter: -(id)client;
// declared property setter: -(void)setNotificationsEnabled:(BOOL)enabled;
// declared property getter: -(BOOL)notificationsEnabled;
// declared property setter: -(void)setAccessPluginManager:(id)manager;
// declared property getter: -(id)accessPluginManager;
// declared property setter: -(void)setAuthenticationPluginManager:(id)manager;
// declared property getter: -(id)authenticationPluginManager;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property getter: -(id)delegate;
-(void).cxx_destruct;
-(id)proxy:(id)proxy detailedSignatureForSelector:(SEL)selector;
-(void)updateExistenceCacheOfAccountWithTypeIdentifier:(id)typeIdentifier withHandler:(id)handler;
-(void)_updateExistenceCacheOfAccountWithTypeIdentifier:(id)typeIdentifier withHandler:(id)handler;
-(void)typeIdentifierForDomain:(id)domain withHandler:(id)handler;
-(void)permissionForAccountType:(id)accountType withHandler:(id)handler;
-(void)clearAllPermissionsGrantedForAccountType:(id)accountType withHandler:(id)handler;
-(void)setPermissionGranted:(id)granted forBundleID:(id)bundleID onAccountType:(id)type withHandler:(id)handler;
-(void)appPermissionsForAccountType:(id)accountType withHandler:(id)handler;
-(void)setNotificationsEnabledNum:(id)num;
-(void)requestAccessForAccountTypeWithIdentifier:(id)identifier options:(id)options withHandler:(id)handler;
-(void)promptUserForCredentialsWithAccount:(id)account withHandler:(id)handler;
-(void)renewCredentialsForAccount:(id)account withHandler:(id)handler;
-(void)verifyCredentialsForAccount:(id)account withHandler:(id)handler;
-(void)verifyCredentialsForAccount:(id)account saveWhenAuthorized:(BOOL)authorized withHandler:(id)handler;
-(void)saveAccount:(id)account forPID:(id)pid withHandler:(id)handler;
-(void)saveAccount:(id)account withHandler:(id)handler;
-(void)removeAccount:(id)account withHandler:(id)handler;
-(void)insertAccountDataclass:(id)dataclass withHandler:(id)handler;
-(void)removeAccountType:(id)type withHandler:(id)handler;
-(void)insertAccountType:(id)type withHandler:(id)handler;
-(void)accessKeysForAccountType:(id)accountType handler:(id)handler;
-(void)propertiesForDataclassWithName:(id)name accountIdentifier:(id)identifier handler:(id)handler;
-(void)supportedDataclassesForAccountType:(id)accountType handler:(id)handler;
-(void)syncableDataclassesForAccountType:(id)accountType handler:(id)handler;
-(void)provisionedDataclassesForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)enabledDataclassesForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)accountIdentifiersEnabledToSyncDataclass:(id)syncDataclass handler:(id)handler;
-(void)childAccountsForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)parentAccountForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)_accountsWithAccountType:(id)accountType checkEntitlement:(BOOL)entitlement handler:(id)handler;
-(void)accountsWithAccountType:(id)accountType handler:(id)handler;
-(void)dataclassesWithHandler:(id)handler;
-(void)credentialForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)credentialForAccountWithIdentifier:(id)identifier bundleID:(id)anId handler:(id)handler;
-(id)masterCredentialForAccountIdentifier:(id)accountIdentifier;
-(void)accountTypeWithIdentifier:(id)identifier handler:(id)handler;
-(void)displayAccountTypeForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)accountTypeForAccountWithIdentifier:(id)identifier handler:(id)handler;
-(void)accountTypesWithHandler:(id)handler;
-(void)accountsWithHandler:(id)handler;
-(void)accountWithIdentifier:(id)identifier handler:(id)handler;
-(void)setClientBundleID:(id)anId withHandler:(id)handler;
-(id)_handleAccountAdd:(id)add forPID:(id)pid;
-(id)_handleAccountMod:(id)mod;
-(id)_currentBundleIDForPID:(id)pid;
-(void)_noteAccountStoreDidSaveAccountsWithAccountTypeIdentifiers:(id)_noteAccountStore;
-(void)_setAccountManagedObjectRelationships:(id)relationships withAccount:(id)account isNew:(BOOL)aNew;
-(BOOL)_canSaveAccount:(id)account;
-(id)_dataclassWithName:(id)name;
-(id)_accountTypeWithIdentifier:(id)identifier;
-(id)_displayAccountForAccount:(id)account;
-(id)_accountWithIdentifier:(id)identifier;
-(BOOL)_callerWithPID:(id)pid hasPermissionToAddAccount:(id)addAccount;
-(BOOL)_isClientPermittedToRemoveAccount:(id)removeAccount;
-(BOOL)_isClientPermittedToAccessAccount:(id)accessAccount;
-(BOOL)_isClientPermittedToAccessAccountType:(id)accessAccountType;
-(BOOL)_accessGrantedForBundleID:(id)bundleID onAccountType:(id)type;
-(BOOL)_accessGrantedForClient:(id)client onAccountType:(id)type;
-(void)performSanityCheckOnDatabase:(id)database;
-(id)_updateAccountNoSave:(id)save error:(id*)error;
-(id)_addAccountNoSave:(id)save error:(id*)error;
-(id)addAccountNoSave:(id)save error:(id*)error;
-(id)_save;
-(id)_removeAccountNoSave:(id)save;
-(BOOL)accountsExistWithAccountTypeIdentifier:(id)accountTypeIdentifier;
-(id)accountsWithAccountTypeIdentifier:(id)accountTypeIdentifier checkEntitlement:(BOOL)entitlement;
-(id)accountTypeWithIdentifier:(id)identifier;
-(id)initWithClient:(id)client database:(id)database;
@end

